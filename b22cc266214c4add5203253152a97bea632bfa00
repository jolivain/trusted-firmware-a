{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7327e8ef_8fd10492",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2021-06-16T09:58:13Z",
      "side": 1,
      "message": "(minor) Perhaps a better scope would be plat/arm? I think it would be better if this change appears in the auto-generated change log under the Arm platforms section rather than in some generic FWU section.",
      "range": {
        "startLine": 7,
        "startChar": 9,
        "endLine": 7,
        "endChar": 12
      },
      "revId": "b22cc266214c4add5203253152a97bea632bfa00",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7db286e1_04f85c41",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2021-06-16T10:44:24Z",
      "side": 1,
      "message": "Can this optional field not choice from developer?\nDeveloper may chose either by putting scope where fix applied (in this case it is plat/arm/fvp) or for which module the problem is fixed or implementation done.",
      "parentUuid": "7327e8ef_8fd10492",
      "range": {
        "startLine": 7,
        "startChar": 9,
        "endLine": 7,
        "endChar": 12
      },
      "revId": "b22cc266214c4add5203253152a97bea632bfa00",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ed34d51_4906ec2c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2021-06-16T11:38:45Z",
      "side": 1,
      "message": "Yes, you can keep fwu scope if you think it\u0027s more appropriate. All I meant is, when we auto-generate the change log from the commit log, I believe the scope will be used as a mean to group similar patches under some section. As this patch is platform specific, I thought it might be better to have it under some plat/arm section, rather than some fwu generic section. But feel free to ignore this comment if you disagree.",
      "parentUuid": "7db286e1_04f85c41",
      "range": {
        "startLine": 7,
        "startChar": 9,
        "endLine": 7,
        "endChar": 12
      },
      "revId": "b22cc266214c4add5203253152a97bea632bfa00",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6cc37afd_fbadb7be",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2021-06-16T11:59:11Z",
      "side": 1,
      "message": "IMO \u0027plat/arm/fvp\u0027 seems more appropriate as it is very specific to FVP platform.",
      "parentUuid": "2ed34d51_4906ec2c",
      "range": {
        "startLine": 7,
        "startChar": 9,
        "endLine": 7,
        "endChar": 12
      },
      "revId": "b22cc266214c4add5203253152a97bea632bfa00",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c0efc8b8_19731e63",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000550
      },
      "writtenOn": "2021-06-15T18:20:37Z",
      "side": 1,
      "message": "So you made this fix FVP-specific?\nIts fine for solving my problem with\nsemihosting boot, AFAICT.\nBut I suspect there are more\nsemihosting-enabled platforms out\nthere, maybe qemu?\n\nAn alternative may be to replace\nerase-FIP/reboot with\nerase-FIP/FWU/reboot.\nShould be simpler and more universal.\nWhat do you think?\n\nBut in any case, this patch is\ngoing to fix my problem just as well.",
      "revId": "b22cc266214c4add5203253152a97bea632bfa00",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "59c7803e_f30a9e08",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2021-06-16T11:21:56Z",
      "side": 1,
      "message": "\u003e So you made this fix FVP-specific?\n\nYes, it is FVP-specific fix, but can be used in similar way for other platforms.\n\n\u003e Its fine for solving my problem with\n\u003e semihosting boot, AFAICT.\n\u003e But I suspect there are more\n\u003e semihosting-enabled platforms out\n\u003e there, maybe qemu?\n\nI think such platforms can do the fix in similar way.\n\n\u003e \n\u003e An alternative may be to replace\n\u003e erase-FIP/reboot with\n\u003e erase-FIP/FWU/reboot.\n\u003e Should be simpler and more universal.\n\u003e What do you think?\n\nAs per current FWU design and implementation, reboot is mandatory to jump to secure firmware that can do the job of replacing corrupted/non-working FIP with back up FIP.\n\nWe can think of in future if there is any possibility to do recovery without reboot.\n\n\u003e \n\u003e But in any case, this patch is\n\u003e going to fix my problem just as well.",
      "parentUuid": "c0efc8b8_19731e63",
      "revId": "b22cc266214c4add5203253152a97bea632bfa00",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad048389_711a5e30",
        "filename": "plat/arm/board/fvp/fvp_bl1_setup.c",
        "patchSetId": 3
      },
      "lineNbr": 68,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2021-06-16T09:58:13Z",
      "side": 1,
      "message": "I wonder whether we need to access these addresses through mmio_read_32()/mmio_write_32() calls. Without a volatile access, I suspect the compiler might move the corresponding instructions below the watchdog setup code. If that happens, isn\u0027t there a risk of the watchdog firing before the NV flags are programmed?",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 68,
        "endChar": 39
      },
      "revId": "b22cc266214c4add5203253152a97bea632bfa00",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb5e5e0b_db6708d7",
        "filename": "plat/arm/board/fvp/fvp_bl1_setup.c",
        "patchSetId": 3
      },
      "lineNbr": 68,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2021-06-16T10:44:24Z",
      "side": 1,
      "message": "I didn\u0027t experience such scenario happened in my test. Also, in real hardware platform like Juno, clearing of these flags happened in similar way[1]. We didn\u0027t experience any random failures in FWU CI test of Juno due to such re-ordering of instructions. \n\nI agree to enforce correct order using volatile read/write access, but not in practical seen such issue as mentioned above.\n\n[1]: https://git.trustedfirmware.org/TF-A/trusted-firmware-a.git/tree/plat/arm/board/juno/juno_bl1_setup.c#n89",
      "parentUuid": "ad048389_711a5e30",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 68,
        "endChar": 39
      },
      "revId": "b22cc266214c4add5203253152a97bea632bfa00",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f07999f_3b4be27e",
        "filename": "plat/arm/board/fvp/fvp_bl1_setup.c",
        "patchSetId": 3
      },
      "lineNbr": 68,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2021-06-16T11:38:45Z",
      "side": 1,
      "message": "\u003e I didn\u0027t experience such scenario happened in my test.\n\nI guess it might be hard to trigger. This would depend on the compiler and the optimization flags used. It might be better to fix this to be on the safe side, even on Juno.",
      "parentUuid": "fb5e5e0b_db6708d7",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 68,
        "endChar": 39
      },
      "revId": "b22cc266214c4add5203253152a97bea632bfa00",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "63196ed4_815b8989",
        "filename": "plat/arm/board/fvp/fvp_bl1_setup.c",
        "patchSetId": 3
      },
      "lineNbr": 68,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2021-06-16T11:59:11Z",
      "side": 1,
      "message": "Ack, will update this patch and for Juno will push a separate patch",
      "parentUuid": "0f07999f_3b4be27e",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 68,
        "endChar": 39
      },
      "revId": "b22cc266214c4add5203253152a97bea632bfa00",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7ac81a6_53cd4ac1",
        "filename": "plat/arm/board/fvp/fvp_err.c",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2021-06-16T09:58:13Z",
      "side": 1,
      "message": "My understanding is that V2M_SYS_NVFLAGS is a read-only register. To modify its value, you have to go through V2M_SYS_NVFLAGSCLR/V2M_SYS_NVFLAGSSET registers, which are write-only. Just like you\u0027ve done in bl1_plat_fwu_done() really. Is that not the case?",
      "range": {
        "startLine": 22,
        "startChar": 1,
        "endLine": 23,
        "endChar": 18
      },
      "revId": "b22cc266214c4add5203253152a97bea632bfa00",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38810b84_243eead3",
        "filename": "plat/arm/board/fvp/fvp_err.c",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2021-06-16T10:44:24Z",
      "side": 1,
      "message": "No, we can use either V2M_SYS_NVFLAGSSET or V2M_SYS_NVFLAGS_ADDR register to set the value. \nPlease refer juno case here: https://git.trustedfirmware.org/TF-A/trusted-firmware-a.git/tree/plat/arm/board/juno/juno_err.c#n19",
      "parentUuid": "b7ac81a6_53cd4ac1",
      "range": {
        "startLine": 22,
        "startChar": 1,
        "endLine": 23,
        "endChar": 18
      },
      "revId": "b22cc266214c4add5203253152a97bea632bfa00",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90c7ce7f_44b3711d",
        "filename": "plat/arm/board/fvp/fvp_err.c",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2021-06-16T11:38:45Z",
      "side": 1,
      "message": "Yes, you\u0027re right, we do the same on Juno but I still question whether this is correct. Have a look at the Juno documentation:\n\nhttps://developer.arm.com/documentation/100114/0200/Programmers-Model/APB-system-registers/SYS-FLAG-Registers?lang\u003den\n\nThis clearly says:\n\n The SYS_FLAGS and SYS_NVFLAGS Registers are read-only.\n \n The SYS_FLAGSSET, SYS_FLAGSCLR, SYS_NVFLAGSSET, and SYS_NVFLAGSCLR Registers are write-only.\n\nIs it possible that this code has been incorrect from the beginning? Perhaps writes to these registers are ignored so this could have been undetected so far? I know we have FWU tests on Juno but I believe they trigger the FWU process by corrupting the FIP. In this case, this means they would have exercised only one part of plat_arm_bl1_fwu_needed() [1] but not the NVflags mechanism? This needs double-checking.\n\n[1] https://git.trustedfirmware.org/TF-A/trusted-firmware-a.git/tree/plat/arm/board/juno/juno_bl1_setup.c#n68",
      "parentUuid": "38810b84_243eead3",
      "range": {
        "startLine": 22,
        "startChar": 1,
        "endLine": 23,
        "endChar": 18
      },
      "revId": "b22cc266214c4add5203253152a97bea632bfa00",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c23d917d_f229e35e",
        "filename": "plat/arm/board/fvp/fvp_err.c",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2021-06-16T11:59:11Z",
      "side": 1,
      "message": "Let me double check. In case of FVP platform [1], these registers are only the way to detect FWU needed (as part of this patch).\n\nAlso, worth to mention, Juno has 2 test cases, \n1. Invalid FIP TOC -\u003e that gets checked in first part of plat_arm_bl1_fwu_needed()\n2. authentication failure - where FIP TOC is intact but BL2 is corrupted.\nThis is detected via second part of plat_arm_bl1_fwu_needed()\n\n[1]: https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/10286/3/plat/arm/board/fvp/fvp_bl1_setup.c#141",
      "parentUuid": "90c7ce7f_44b3711d",
      "range": {
        "startLine": 22,
        "startChar": 1,
        "endLine": 23,
        "endChar": 18
      },
      "revId": "b22cc266214c4add5203253152a97bea632bfa00",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}