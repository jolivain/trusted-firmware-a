{
  "comments": [
    {
      "key": {
        "uuid": "3d274900_14e97ef2",
        "filename": "drivers/arm/gic/v3x/gicrv3x_helpers.c",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1000208
      },
      "writtenOn": "2019-10-16T19:24:42Z",
      "side": 1,
      "message": "This macro expands to - Calculate bit num -\u003e get the offset  -\u003e mmio set bit.\n\nComparing it to implementation in V3 set operation must perform register read before writing new value to the register.\n\nAlso, instead of introducing new macros to calculate offset and perform read/write, I would recommend using existing functions\nin the `GICR_xxx_BIT` macro that is `gicr_set_igrpmodr` and `gicd_write_igrpmodr`",
      "revId": "58b248b0610368165e8ee055947dfa3136cbdb7e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04d83034_3ccb03fb",
        "filename": "drivers/arm/gic/v3x/gicv3x_helpers.c",
        "patchSetId": 1
      },
      "lineNbr": 331,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2019-10-18T08:23:13Z",
      "side": 1,
      "message": "Should this explicitly check for INTR_GROUP0?\nThere is possibility to provide INTR_GROUP1NS through interrupt properties and this would fall back to it being configured as Grp0 ...",
      "revId": "58b248b0610368165e8ee055947dfa3136cbdb7e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "17b55fe9_afe4991b",
        "filename": "drivers/arm/gic/v3x/gicv3x_main.c",
        "patchSetId": 1
      },
      "lineNbr": 243,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2019-10-18T08:23:13Z",
      "side": 1,
      "message": "As a security hardening, should we make sure that DS bit is cleared?\nThere are other settings done later that assume that DS\u003d0 (e.g. default SPI conf).",
      "revId": "58b248b0610368165e8ee055947dfa3136cbdb7e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba6fe9eb_fa1fcdfd",
        "filename": "drivers/arm/gic/v3x/gicv3x_main.c",
        "patchSetId": 1
      },
      "lineNbr": 279,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2019-10-18T08:23:13Z",
      "side": 1,
      "message": "It seems this re-distributor power-on arrives late because re-distributor registers are already accessed before in the flow (e.g. rdist base addresses discovery). This problem might already exist with GIC-600.",
      "revId": "58b248b0610368165e8ee055947dfa3136cbdb7e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f703aa4_bc6f0b10",
        "filename": "drivers/arm/gic/v3x/gicv3x_private.h",
        "patchSetId": 1
      },
      "lineNbr": 262,
      "author": {
        "id": 1000208
      },
      "writtenOn": "2019-10-16T19:24:42Z",
      "side": 1,
      "message": "Please explain the motivation behind this special macro instead of calling `return mmio_read_32(base + GICR_ISENABLER + (reg_num \u003c\u003c 2))` directly.\n\nI am not sure if we need this string concatenation really\n\n#define GICR_READ_NUM(REG, base, reg_num)           \\\n    return mmio_read_32(base + GICR_##REG + (reg_num \u003c\u003c 2))",
      "revId": "58b248b0610368165e8ee055947dfa3136cbdb7e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f5a6e5ab_e50b8a64",
        "filename": "drivers/arm/gic/v3x/gicv3x_private.h",
        "patchSetId": 1
      },
      "lineNbr": 272,
      "author": {
        "id": 1000208
      },
      "writtenOn": "2019-10-16T19:24:42Z",
      "side": 1,
      "message": "Similar comment for `GICR_WRITE_NUM` macro, shouldn;t we be avoiding use of macros as per MISRA.",
      "revId": "58b248b0610368165e8ee055947dfa3136cbdb7e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a7abee9_ba3784a9",
        "filename": "include/drivers/arm/gic_common.h",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2019-10-18T08:23:13Z",
      "side": 1,
      "message": "Does it make sense to re-order the defines GICV1, GICV2, GICV4, GICV4 ?...",
      "revId": "58b248b0610368165e8ee055947dfa3136cbdb7e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f56ae1c_beee6a69",
        "filename": "include/drivers/arm/gicv3x.h",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2019-10-18T08:23:13Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 2,
        "startChar": 17,
        "endLine": 2,
        "endChar": 22
      },
      "revId": "58b248b0610368165e8ee055947dfa3136cbdb7e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d9b940a_d3311b67",
        "filename": "include/drivers/arm/gicv3x.h",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2019-10-18T08:23:13Z",
      "side": 1,
      "message": "Should this go to gic_common.h?",
      "range": {
        "startLine": 29,
        "startChar": 8,
        "endLine": 29,
        "endChar": 18
      },
      "revId": "58b248b0610368165e8ee055947dfa3136cbdb7e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e90b1e18_13bea6d9",
        "filename": "include/drivers/arm/gicv3x.h",
        "patchSetId": 1
      },
      "lineNbr": 396,
      "author": {
        "id": 1000208
      },
      "writtenOn": "2019-10-16T19:24:42Z",
      "side": 1,
      "message": "Offset here is confusing, is `unsigned int offset` defined only when `id \u003e\u003d MIN_EPPI_ID`?",
      "revId": "58b248b0610368165e8ee055947dfa3136cbdb7e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "22f458b7_0564b328",
        "filename": "include/drivers/arm/gicv3x.h",
        "patchSetId": 1
      },
      "lineNbr": 422,
      "author": {
        "id": 1000208
      },
      "writtenOn": "2019-10-16T19:24:42Z",
      "side": 1,
      "message": "I will prefer the existing GICv3 implementation of using functions instead of macros.\n\nCan we have GICR_GET_BIT as function? \n\nunsigned int gicr_get_bit(uintptr_t reg, uintptr_t base,  unsigned int id) {\n       ....\n}",
      "revId": "58b248b0610368165e8ee055947dfa3136cbdb7e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee99b011_a1e849ec",
        "filename": "plat/arm/board/fvp/platform.mk",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2019-10-18T08:23:13Z",
      "side": 1,
      "message": "GIC600 ?",
      "range": {
        "startLine": 7,
        "startChar": 10,
        "endLine": 7,
        "endChar": 15
      },
      "revId": "58b248b0610368165e8ee055947dfa3136cbdb7e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4473c6f5_b5378c3f",
        "filename": "plat/common/plat_gicv3x.c",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2019-10-18T08:23:13Z",
      "side": 1,
      "message": "Braces on if statements?",
      "range": {
        "startLine": 164,
        "startChar": 2,
        "endLine": 164,
        "endChar": 31
      },
      "revId": "58b248b0610368165e8ee055947dfa3136cbdb7e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    }
  ]
}