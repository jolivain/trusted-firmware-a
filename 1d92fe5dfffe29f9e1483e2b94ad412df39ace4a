{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d7c1b205_74f3fd83",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000541
      },
      "writtenOn": "2024-04-30T09:25:59Z",
      "side": 1,
      "message": "This feels incorrect.\nFirst of all, why? (I can hypothesise, but the commit message should state. If this was a non-awful code review system, the cover letter/MR description should do the same.)\n\nSecondly: TRNG exists explicitly to expose a *true* RNG source. RNDR isn\u0027t that. And if you have RNDR, that is directly accessible anywhere.\n\nIf the purpose of this is simply to verify the plumbing, I highly prefer a  https://xkcd.com/221/ type solution. *That* is much less likely to be picked up by someone hounded by a hard product deadline and shipped into a real device.\n\nFinally: if the purpose is only for debug/testing, the code still needs a BIG warning comment block explaining just how badly incorrect this is architecturally and security-wise and why it\u0027s done anyway. It also needs to not be enabled by default.\n\nYou may want to consider this feedback for the Android repo as well.",
      "revId": "1d92fe5dfffe29f9e1483e2b94ad412df39ace4a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2e3b14d_18b18ae8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1001064
      },
      "writtenOn": "2024-04-30T22:05:51Z",
      "side": 1,
      "message": "\u003e First of all, why? (I can hypothesise, but the commit message should state. If this was a non-awful code review system, the cover letter/MR description should do the same.)\n\nGood point. Tl;dr: in our specific use case, it\u0027s to test the KASLR implementation in Trusty (and the kernel RNG in general) which use the TRNG SMC.\n\n\u003e If the purpose of this is simply to verify the plumbing, I highly prefer a https://xkcd.com/221/ type solution.\n\nThat wouldn\u0027t really test the RNG users properly. Even a LFSR would be preferable for that purpose.\n\n\u003e Finally: if the purpose is only for debug/testing, the code still needs a BIG warning comment block explaining just how badly incorrect this is architecturally and security-wise and why it\u0027s done anyway.\n\u003e You may want to consider this feedback for the Android repo as well.\n\nRight, this would only be used in CI for testing in Android. That said, I see how someone might run qemu + TF-A in production and an insecure RNG would be a massive problem for them. It sounds like a better approach would be to add a CSPRNG here, but would we have a secure way to seed it on qemu?",
      "parentUuid": "d7c1b205_74f3fd83",
      "revId": "1d92fe5dfffe29f9e1483e2b94ad412df39ace4a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7158d56_7e7ea01c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000541
      },
      "writtenOn": "2024-05-01T16:49:47Z",
      "side": 1,
      "message": "\u003e Tl;dr: in our specific use case, it\u0027s to test the KASLR implementation in Trusty (and the kernel RNG in general) which use the TRNG SMC.\n\nYeah, that\u0027s reasonable. Could you add to commit message?\n\n\u003e \u003e If the purpose of this is simply to verify the plumbing, I highly prefer a https://xkcd.com/221/ type solution.\n\u003e \n\u003e That wouldn\u0027t really test the RNG users properly. Even a LFSR would be preferable for that purpose.\n\nFair.\n\n\u003e \u003e Finally: if the purpose is only for debug/testing, the code still needs a BIG warning comment block explaining just how badly incorrect this is architecturally and security-wise and why it\u0027s done anyway.\n\u003e \u003e You may want to consider this feedback for the Android repo as well.\n\u003e \n\u003e Right, this would only be used in CI for testing in Android. That said, I see how someone might run qemu + TF-A in production and an insecure RNG would be a massive problem for them.\n\nI\u0027m less worried about someone running qemu + TF-A in production than I am about someone borrowing the code to their own platform port without understanding it (and without talking to upstream).\n\n\u003e It sounds like a better approach would be to add a CSPRNG here, but would we have a secure way to seed it on qemu?\n\nNot that I\u0027m aware of. If we could, that would be genuinely useful outside of the test scenario.\n\nBut for now, could we do something like:\n- Rename the source file fake-trng.c.\n- Add a comment block in plat_get_entropy (and possibly the file header) that \"this implements fake TRNG support using a cryptographically insecure entropy source, solely for the purpose of software stack verification and testing\".\n- Add a new config option FAKE_TRNG_ENABLE (default off) and if that is set,\n  set TRNG_SUPPORT to 1\n- Include the source file in BL31_SOURCES conditional on FAKE_TRNG_ENABLE rather than the TRNG_SUPPORT one.\n?",
      "parentUuid": "a2e3b14d_18b18ae8",
      "revId": "1d92fe5dfffe29f9e1483e2b94ad412df39ace4a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4843bda_3d8153dd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1001064
      },
      "writtenOn": "2024-05-09T03:57:31Z",
      "side": 1,
      "message": "Sounds like maybe it\u0027s not worth landing this here? The Android repository can keep it for testing (and even there it might not be needed if we figure out another way to pass entropy into TZ).",
      "parentUuid": "e7158d56_7e7ea01c",
      "revId": "1d92fe5dfffe29f9e1483e2b94ad412df39ace4a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c63f78bb_fe250561",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2024-07-09T13:58:56Z",
      "side": 1,
      "message": "If this patch is not required anymore, please abandon it.",
      "revId": "1d92fe5dfffe29f9e1483e2b94ad412df39ace4a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0db7af5c_f350e538",
        "filename": "plat/qemu/qemu/platform.mk",
        "patchSetId": 5
      },
      "lineNbr": 12,
      "author": {
        "id": 1000443
      },
      "writtenOn": "2024-04-30T07:07:06Z",
      "side": 1,
      "message": "please put it in common/common.mk if you want to have it on both platforms.",
      "revId": "1d92fe5dfffe29f9e1483e2b94ad412df39ace4a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ],
  "submitRequirementResults": []
}