{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9b1e5a37_cbb08c8f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1000660
      },
      "writtenOn": "2023-03-07T13:16:35Z",
      "side": 1,
      "message": "@Manish B and @Boyan, have addressed your comments with explicit patches, to cover SVE and SME\nunder feature detection and added helper functions to get rid of the build macros.\nPlease take a look and add your comments.\n\nThanks!",
      "revId": "51f01bd4d71cbac069dfb7028d09e6ef101cb5e6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3292f51_2ffebca5",
        "filename": "Makefile",
        "patchSetId": 9
      },
      "lineNbr": 842,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2023-03-07T17:23:01Z",
      "side": 1,
      "message": "This is more of a general question: if this is a dependency, why don\u0027t we enforce this instead of just complaining here? I saw this in several places, so perhaps there is a rationale here?\n\nFrom a practical standpoint, this moves the burden of enumerating all dependencies to the user, instead of declaring this in the source.",
      "revId": "51f01bd4d71cbac069dfb7028d09e6ef101cb5e6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "501875fb_a492f49e",
        "filename": "Makefile",
        "patchSetId": 9
      },
      "lineNbr": 842,
      "author": {
        "id": 1000660
      },
      "writtenOn": "2023-03-08T10:36:31Z",
      "side": 1,
      "message": "Agree with your suggestion here.\nNot exactly sure of the reasons at other places, but setting up the dependencies makes it more reasonable. I will modify it.\nThanks!",
      "parentUuid": "e3292f51_2ffebca5",
      "revId": "51f01bd4d71cbac069dfb7028d09e6ef101cb5e6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "91818d99_2f5e613c",
        "filename": "Makefile",
        "patchSetId": 9
      },
      "lineNbr": 842,
      "author": {
        "id": 1000660
      },
      "writtenOn": "2023-03-22T17:27:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "501875fb_a492f49e",
      "revId": "51f01bd4d71cbac069dfb7028d09e6ef101cb5e6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82846cd2_e4eae81e",
        "filename": "lib/extensions/sme/sme.c",
        "patchSetId": 9
      },
      "lineNbr": 117,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-03-08T16:43:29Z",
      "side": 1,
      "message": "this can\u0027t happen here. In the scenario where NS has SME enabled but SWD has it disabled, BOTH will eventually have this disabled, since secure context setup will call sme_disable and this register is not switched in and out. I think a new context entry might be required...",
      "revId": "51f01bd4d71cbac069dfb7028d09e6ef101cb5e6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3fe8e0ad_fb9d7714",
        "filename": "lib/extensions/sme/sme.c",
        "patchSetId": 9
      },
      "lineNbr": 117,
      "author": {
        "id": 1000660
      },
      "writtenOn": "2023-03-23T14:24:10Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "82846cd2_e4eae81e",
      "revId": "51f01bd4d71cbac069dfb7028d09e6ef101cb5e6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}