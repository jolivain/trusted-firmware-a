{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fb6fc766_52d37174",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 1000966
      },
      "writtenOn": "2024-04-25T07:33:15Z",
      "side": 1,
      "message": "Hi, the commit seems to break builds with ccache for me.\n\n```\n~/Projects/atf (4731c00bb609*) Â» make BUILD_BASE\u003dbuild CROSS_COMPILE\u003d\"/usr/bin/ccache aarch64-none-linux-gnu-\" PLAT\u003dk3 TARGET_BOARD\u003dgeneric \"DEBUG\u003d1\" \"K3_USART\u003d0x8\" \"SPD\u003dopteed\" all -j16\nmake: Entering directory \u0027/home/user/Projects/atf\u0027\n/bin/sh: line 1: /usr/bin/ccache aarch64-none-linux-gnu-gcc: No such file or directory\nIncluding services/spd/opteed/opteed.mk\n/bin/sh: line 1: /usr/bin/ccache aarch64-none-linux-gnu-gcc: No such file or directory\nBuilding k3\n  CC      lib/libc/abort.c\nmake: /usr/bin/ccache aarch64-none-linux-gnu-gcc: No such file or directory\nmake: *** [Makefile:1467: /home/user/Projects/atf/build/j721s2/k3/generic/debug/libc/abort.o] Error 127\nmake: Leaving directory \u0027/home/user/Projects/atf\u0027\n```",
      "revId": "4731c00bb60915c0d4b29c082a752e9925a244b4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "211e4ec9_4d04dea9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2024-04-25T13:06:30Z",
      "side": 1,
      "message": "Hi Manorit, could you please try ccache\u0027s second installation option: https://github.com/ccache/ccache/blob/master/doc/INSTALL.md#installation\n\nTo better support non-UNIX environments the build system is no longer able to accept a shell string CC. We are looking into an alternative build option to support cache tools like ccache, along the lines of CMake\u0027s COMPILER_LAUNCHER option.",
      "parentUuid": "fb6fc766_52d37174",
      "revId": "4731c00bb60915c0d4b29c082a752e9925a244b4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5ee3dfeb_a067c32f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 1000966
      },
      "writtenOn": "2024-04-29T05:14:48Z",
      "side": 1,
      "message": "Hi Chris, the only reason I had not gone for the second option is that enabling and disable of ccache is convenient and we can just prefix/not prefix it in the build commands, the other one requires me to change my system PATH environment and all if I want to have that flexibility. I see Linux/U-boot or other projects also being compatible with ccache with the first option so just wondering how is tf-a differing in that regard, not sure if Linux builds are not supported in windows or something else.\n\nThe other thing am wondering is if there is a better way to fix this which will just fix the regression caused for non-UNIX environment, it seems counterintuitive that a fix for the non-UNIX environment is changing the behaviour for the builds for UNIX environment.\n\nThe other option of CMake also sounds nice but just wondering if there is a better way to fix this as well..",
      "parentUuid": "211e4ec9_4d04dea9",
      "revId": "4731c00bb60915c0d4b29c082a752e9925a244b4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ],
  "submitRequirementResults": []
}