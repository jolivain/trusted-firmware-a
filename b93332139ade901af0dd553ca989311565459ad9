{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f8a84697_f811bfe9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 8,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2023-09-13T13:01:40Z",
      "side": 1,
      "message": "Hi Robin,\nA bit more explanation about how it is working could be good here.\nShould the tools/cert_create/src/main.c::print_help() be updated?\nAnd maybe docs/design/trusted-board-boot.rst?\nSandrine, do you know which other parts of the doc should be updated too?",
      "revId": "b93332139ade901af0dd553ca989311565459ad9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d4176ae_41ddb959",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 8,
      "author": {
        "id": 1001111
      },
      "writtenOn": "2023-09-14T09:07:13Z",
      "side": 1,
      "message": "Hi Yann,\nYou are right, updating the help/docs is required.\nBefore putting more work into this, I\u0027d like to note that openssl deprecated support for the engine API since version 3.0. Linking this with openssl \u003e\u003d 3.0 will give warnings.\nI did push this change because I believe cert_create without the ability to use a HSM is not usable in a production environment.\nIt would be better to add pkcs11 support with the new openSSL provider API.\nI was hoping this push might get something rolling ;)",
      "parentUuid": "f8a84697_f811bfe9",
      "revId": "b93332139ade901af0dd553ca989311565459ad9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "644cb11e_70ebad11",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 8,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-09-18T11:06:46Z",
      "side": 1,
      "message": "Hi,\n\nThanks for the patch! I agree it would be great if the cert_create tool supported HSMs. In fact, you\u0027re not the first person to raise interest on this topic!\n\nAs I understand, this patch only provides one piece of PKCS#11 support, namely the ability to retrieve private keys (optionally protected by a PIN) from an HSM over PKCS#11. I imagine that a complete PKCS#11 solution would also support things like signing a payload (such that private keys never leave the HSM). Is my understanding correct?\n\nRegarding documentation, I suspect there is not much to update. We do not have a dedicated documentation page for the cert_create tool. Perhaps it\u0027s time to create one? This would go under the tools section here:\n\nhttps://trustedfirmware-a.readthedocs.io/en/latest/tools/index.html\n\nWe could mention there that cert_create supports interfacing with an HSM through PCKS#11. Also worth saying that the tool accepts receiving the PIN required to unlock access to private keys within the HSM through the \"PKCS11_PIN\" environment variable.\n\ndocs/design/trusted-board-boot.rst describes the trusted boot design in the firmware itself so it\u0027s irrelevant here, as we\u0027re doing changes to the host tools only.\n\nI am more worried about the incompatibility of this patch with OpenSSL 3.0... Although TF-A tools currently support both OpenSSL 1.1.1+ and 3.0, the latter is the default version used by TF-A OpenCI. So I think this patch would not pass the CI tests as is. Moreover, I believe the plan would be to deprecate OpenSSL 1.x API usage in TF-A tools in the future, when OpenSSL 3.0 is more broadly supported across Linux distros by default.\n\nRobin, how much would it take to support the new OpenSSL provider API instead? Is it a lot more complex than the old engine API? Is that why you went for the old API in the first place? Would you be willing to contribute another patch using the new provider API?",
      "parentUuid": "6d4176ae_41ddb959",
      "revId": "b93332139ade901af0dd553ca989311565459ad9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "35691ea6_fc9b3afa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-09-13T12:38:39Z",
      "side": 1,
      "message": "Jimmy is on leave right now so he won\u0027t be able to review this patch for some time. Adding a couple more reviewers on this patch in case they get around to taking a look before myself.",
      "revId": "b93332139ade901af0dd553ca989311565459ad9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1adf997f_1599994f",
        "filename": "tools/cert_create/src/key.c",
        "patchSetId": 1
      },
      "lineNbr": 232,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2023-09-13T13:01:40Z",
      "side": 1,
      "message": "Maybe this should be explained in commit message, as it is not directly related to PKCS11. From what I\u0027ve seen in pem_read_bio_key_decoder(), this doesn\u0027t change a lot, and avoids a free and copy. It also avoids having a temporary variable here.",
      "revId": "b93332139ade901af0dd553ca989311565459ad9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ad4aefd5_6ac17e31",
        "filename": "tools/cert_create/src/key.c",
        "patchSetId": 1
      },
      "lineNbr": 232,
      "author": {
        "id": 1001111
      },
      "writtenOn": "2023-09-14T09:07:13Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1adf997f_1599994f",
      "revId": "b93332139ade901af0dd553ca989311565459ad9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}