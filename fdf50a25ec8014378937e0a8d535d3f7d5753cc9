{
  "comments": [
    {
      "key": {
        "uuid": "2358895d_a3fdd60e",
        "filename": "plat/arm/board/fvp/include/platform_def.h",
        "patchSetId": 1
      },
      "lineNbr": 123,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2020-07-10T14:17:28Z",
      "side": 1,
      "message": "Given that this change is not done for a TBB-enabled firmware, I am guessing we\u0027ll still hit the issue when attempting to perform a TBBR build without optimisations, right? But maybe that was already the case before, as I believe we don\u0027t have any such build config in the CI right now...",
      "range": {
        "startLine": 123,
        "startChar": 0,
        "endLine": 123,
        "endChar": 74
      },
      "revId": "fdf50a25ec8014378937e0a8d535d3f7d5753cc9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb91c973_85b85baa",
        "filename": "plat/arm/board/fvp/include/platform_def.h",
        "patchSetId": 1
      },
      "lineNbr": 123,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2020-07-10T14:32:08Z",
      "side": 1,
      "message": "Yes, that\u0027s correct. Currently, we don\u0027t have build config with tbb + no-optimisation.\nWe can add build config with \u0027tbb + no-optimisation\u0027 as separate patch if needed.",
      "parentUuid": "2358895d_a3fdd60e",
      "range": {
        "startLine": 123,
        "startChar": 0,
        "endLine": 123,
        "endChar": 74
      },
      "revId": "fdf50a25ec8014378937e0a8d535d3f7d5753cc9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "936d85b6_22e79c21",
        "filename": "plat/arm/board/fvp/include/platform_def.h",
        "patchSetId": 1
      },
      "lineNbr": 123,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2020-07-13T14:10:24Z",
      "side": 1,
      "message": "I believe the demand for increase in BL size will always exist as TF-A grows. Rather than doing on a need basis, can we find the theoretical max allowed size for BL2 and set the PLAT_ARM_MAX_BL2_SIZE macro?",
      "parentUuid": "cb91c973_85b85baa",
      "range": {
        "startLine": 123,
        "startChar": 0,
        "endLine": 123,
        "endChar": 74
      },
      "revId": "fdf50a25ec8014378937e0a8d535d3f7d5753cc9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffd1a86f_1d08e8cf",
        "filename": "plat/arm/board/fvp/include/platform_def.h",
        "patchSetId": 1
      },
      "lineNbr": 123,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2020-07-13T14:30:13Z",
      "side": 1,
      "message": "In that case we may remove this define check and go with max size for all builds:\n# define PLAT_ARM_MAX_BL2_SIZE\t(UL(0x1D000) - FVP_BL2_ROMLIB_OPTIMIZATION)\n\nThis need to be tested thought. For now, I think we can merge this and then revisit later.",
      "parentUuid": "936d85b6_22e79c21",
      "range": {
        "startLine": 123,
        "startChar": 0,
        "endLine": 123,
        "endChar": 74
      },
      "revId": "fdf50a25ec8014378937e0a8d535d3f7d5753cc9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    }
  ]
}