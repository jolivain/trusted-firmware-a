{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "fbd34839_f53a6c08",
        "filename": "/COMMIT_MSG",
        "patchSetId": 16
      },
      "lineNbr": 16,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2023-10-26T18:33:19Z",
      "side": 1,
      "message": "Still dont understand the need for the internal macro. Can you please help me understand?",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 16,
        "endChar": 8
      },
      "revId": "f0bc8e72016e19ae778c10781ede2fad7494bac3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a449c95b_d787c1bd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 16
      },
      "lineNbr": 16,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2023-10-26T18:46:04Z",
      "side": 1,
      "message": "HANDLE_EA_EL3_FIRST_NS is basically SCR_EL3.EA \u003d 1 for NS world. FFH_SUPPORT is a super set which gets enabled if any of the world requires handling of EAs at EL3. To avoid using NS specific macro in generic code we came up with FFH_SUPPORT macro.\n\nFEAT_RAS and FFH_SUPPORT are orthogonal macros and RAS_FFH_SUPPORT was combination of these two, To avoid too many macros removed RAS_FFH_SUPPORT",
      "parentUuid": "fbd34839_f53a6c08",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 16,
        "endChar": 8
      },
      "revId": "f0bc8e72016e19ae778c10781ede2fad7494bac3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d42145e6_590d67c9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 16
      },
      "lineNbr": 16,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2023-10-30T11:56:11Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "a449c95b_d787c1bd",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 16,
        "endChar": 8
      },
      "revId": "f0bc8e72016e19ae778c10781ede2fad7494bac3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "89676682_de4342ec",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 16
      },
      "lineNbr": 0,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2023-10-26T19:02:52Z",
      "side": 1,
      "message": "@Varun, @Omkar I have done following changes for FVP platform wherein i include different files for EA only or for RAS. If you guys suggest me then i can do similar changes for your platforms \n\nifeq (${HANDLE_EA_EL3_FIRST_NS},1)\nifeq (${ENABLE_FEAT_RAS},1)\nBL31_SOURCES\t\t+\u003d\tplat/arm/board/fvp/aarch64/fvp_ras.c\nelse\nBL31_SOURCES\t\t+\u003d \tplat/arm/board/fvp/aarch64/fvp_ea.c\nendif\nendif",
      "revId": "f0bc8e72016e19ae778c10781ede2fad7494bac3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bbcbc266_cfe9cf4d",
        "filename": "bl31/aarch64/ea_delegate.S",
        "patchSetId": 16
      },
      "lineNbr": 295,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2023-10-29T04:21:07Z",
      "side": 1,
      "message": "I believe this should be:\n#if FFH_SUPPORT",
      "revId": "f0bc8e72016e19ae778c10781ede2fad7494bac3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "64173f9c_3843821e",
        "filename": "bl31/aarch64/ea_delegate.S",
        "patchSetId": 16
      },
      "lineNbr": 295,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2023-10-30T10:34:26Z",
      "side": 1,
      "message": "It should be FEAT_RAS only. As in the next patch this file gets compiled only if FFH_SUpport is there.\nThis part of code is only to take care of RAS related errors, if there is no RAS support you directly go to ea_proceed",
      "parentUuid": "bbcbc266_cfe9cf4d",
      "revId": "f0bc8e72016e19ae778c10781ede2fad7494bac3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "633ecad0_f0f93c7a",
        "filename": "plat/arm/board/rdn2/rdn2_plat.c",
        "patchSetId": 16
      },
      "lineNbr": 140,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2023-10-26T18:33:19Z",
      "side": 1,
      "message": "Why not set use FFH_SUPPORT only? What would be the downside if we enable FFH_SUPPORT when ENABLE_FEAT_RAS \u003d 1?",
      "range": {
        "startLine": 140,
        "startChar": 4,
        "endLine": 140,
        "endChar": 34
      },
      "revId": "f0bc8e72016e19ae778c10781ede2fad7494bac3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a02fafb_47d4a684",
        "filename": "plat/arm/board/rdn2/rdn2_plat.c",
        "patchSetId": 16
      },
      "lineNbr": 140,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2023-10-27T08:25:30Z",
      "side": 1,
      "message": "One of the examples of FFH_SUPPORT without RAS is in the file plat/marvell/armada/a3k/common/a3700_ea.c Platform handles a specific EA which is not a RAS error. While ras_platform_setup are basically for handling RAS errors. In future if platform need it then they can register a handler similar to how its done for FVP",
      "parentUuid": "633ecad0_f0f93c7a",
      "range": {
        "startLine": 140,
        "startChar": 4,
        "endLine": 140,
        "endChar": 34
      },
      "revId": "f0bc8e72016e19ae778c10781ede2fad7494bac3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "37c71f27_76c0a8eb",
        "filename": "plat/arm/board/rdn2/rdn2_plat.c",
        "patchSetId": 16
      },
      "lineNbr": 140,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2023-10-30T11:56:11Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "7a02fafb_47d4a684",
      "range": {
        "startLine": 140,
        "startChar": 4,
        "endLine": 140,
        "endChar": 34
      },
      "revId": "f0bc8e72016e19ae778c10781ede2fad7494bac3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30afd545_47ad40c3",
        "filename": "plat/nvidia/tegra/soc/t194/plat_ras.c",
        "patchSetId": 16
      },
      "lineNbr": 487,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2023-10-26T18:33:19Z",
      "side": 1,
      "message": "Why do we use only one macro here?",
      "range": {
        "startLine": 487,
        "startChar": 4,
        "endLine": 487,
        "endChar": 19
      },
      "revId": "f0bc8e72016e19ae778c10781ede2fad7494bac3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71b9da54_3f174c0a",
        "filename": "plat/nvidia/tegra/soc/t194/plat_ras.c",
        "patchSetId": 16
      },
      "lineNbr": 487,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2023-10-26T18:46:04Z",
      "side": 1,
      "message": "tegra194_ea_handler() has some ras related implementation so i thought this is required only when RAS extension is present. Is tegra194_ea_handler() is capable of handling EA which are not RAS errors ?",
      "parentUuid": "30afd545_47ad40c3",
      "range": {
        "startLine": 487,
        "startChar": 4,
        "endLine": 487,
        "endChar": 19
      },
      "revId": "f0bc8e72016e19ae778c10781ede2fad7494bac3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7bbeadba_6f9767fe",
        "filename": "plat/nvidia/tegra/soc/t194/plat_ras.c",
        "patchSetId": 16
      },
      "lineNbr": 487,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2023-10-30T11:56:11Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "71b9da54_3f174c0a",
      "range": {
        "startLine": 487,
        "startChar": 4,
        "endLine": 487,
        "endChar": 19
      },
      "revId": "f0bc8e72016e19ae778c10781ede2fad7494bac3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}