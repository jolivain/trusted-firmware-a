{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "875dfe56_99bc222a",
        "filename": "services/std_svc/spmd/spmd_main.c",
        "patchSetId": 1
      },
      "lineNbr": 306,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2023-03-12T06:19:20Z",
      "side": 1,
      "message": "same comment as before. might want to put this under a build flag. It might be perfectly acceptable for platforms to not have any G0 interrupts or have it handled by SPMC + SPs.",
      "revId": "a9cf763df7c95cc25467154caf3275d9778472e7",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0cac5de7_726f7939",
        "filename": "services/std_svc/spmd/spmd_main.c",
        "patchSetId": 1
      },
      "lineNbr": 306,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2023-03-13T13:45:44Z",
      "side": 1,
      "message": "I\u0027m fine with introducing a build option. That said,\n\u003e have it handled by SPMC + SPs.\nDo you agree this isn\u0027t necessarily the way forward for FF-A?\nAs we intend to provide an ABI to forward a G0 interrupt from S-EL2 to EL3, at least for the TF-A/Hafnium reference code base there is no case of SPMC handling a G0 interrupt, or even a SP. The latter cannot claim ownership of interrupts other than G1S by the spec. I would like to prevent cases that aren\u0027t actually queried by the spec.",
      "parentUuid": "875dfe56_99bc222a",
      "revId": "a9cf763df7c95cc25467154caf3275d9778472e7",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45e1dff5_404a7601",
        "filename": "services/std_svc/spmd/spmd_main.c",
        "patchSetId": 1
      },
      "lineNbr": 306,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2023-03-13T19:59:37Z",
      "side": 1,
      "message": "agree. sorry, i should have been more specific. i was mostly talking about not having G0 interrupts at all or G0 interrupts that are guaranteed to occur in NWd only. If it occurs during secure world and we want to handle as G0, then the SMC method in this patch set is what we should use.",
      "parentUuid": "0cac5de7_726f7939",
      "revId": "a9cf763df7c95cc25467154caf3275d9778472e7",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "56a61ea7_d92be2c5",
        "filename": "services/std_svc/spmd/spmd_main.c",
        "patchSetId": 1
      },
      "lineNbr": 306,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2023-03-14T08:58:29Z",
      "side": 1,
      "message": "Ack!",
      "parentUuid": "45e1dff5_404a7601",
      "revId": "a9cf763df7c95cc25467154caf3275d9778472e7",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78490b1f_d690bef6",
        "filename": "services/std_svc/spmd/spmd_main.c",
        "patchSetId": 1
      },
      "lineNbr": 306,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2023-03-16T13:35:18Z",
      "side": 1,
      "message": "Hi Raghu,\nI wonder why is a build flag required to guard this piece of code. We are implementing a feature (and support for a new ABI) based on the spec. If the platform doesn\u0027t have G0 interrupts, then execution would never reach here. We are not mandating platforms to provide any additional hooks. Are we concerned about the increase in SPMC+TF-A binaries?\n\nFor example, indirect messaging support is optional. EL3 SPMC does not implement it but Hafnium implements it(without any build flags to enable it). Let me know if you disagree.",
      "parentUuid": "56a61ea7_d92be2c5",
      "revId": "a9cf763df7c95cc25467154caf3275d9778472e7",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9fd7e9ae_c3ce2719",
        "filename": "services/std_svc/spmd/spmd_main.c",
        "patchSetId": 1
      },
      "lineNbr": 306,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2023-03-16T20:09:34Z",
      "side": 1,
      "message": "Yes, one of the issues is additional binary space but that should be too bad. it is mainly providing the plat_spmd_handle_group0_interrupt hook and SPMC calling this API unnecessarily. If the code does not exist, it cannot be used or exploited.\n\nits not a big deal in this particular case i think. Feel free to resolve if you think it is not necessary.",
      "parentUuid": "78490b1f_d690bef6",
      "revId": "a9cf763df7c95cc25467154caf3275d9778472e7",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}