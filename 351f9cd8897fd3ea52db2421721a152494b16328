{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "176c3bae_ba21ce7b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2022-09-05T14:53:55Z",
      "side": 1,
      "message": "Hi Yann,\n\nSorry I am coming late to the review but I wondered... What\u0027s the plan for existing uses of __unused? Are we going to move the whole TF-A codebase away from __unused in favour of __maybe_unused where that makes sense? I also notice the Linux kernel also has __always_unused, any plans to introduce this one too?",
      "revId": "351f9cd8897fd3ea52db2421721a152494b16328",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "33ab86a7_373a0c09",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2022-09-05T15:06:55Z",
      "side": 1,
      "message": "Hi Sandrine,\n\nI put some of my concerns in a comment on patch: https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/16429\n\nMy idea was to use __maybe_unused for all new patches to avoid those checkpatch errors. But I had no plan to change the existing code. Maybe it should?\n\nI didn\u0027t plan anything for __always_unused. But it may be clearer for e.g. function parameters that are not used inside the function. What\u0027s your opinion?",
      "parentUuid": "176c3bae_ba21ce7b",
      "revId": "351f9cd8897fd3ea52db2421721a152494b16328",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6891cc95_3f91bbd5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2022-10-07T07:52:13Z",
      "side": 1,
      "message": "Sorry Yann, somehow I did not receive any email notification for your answer and so I missed it...\n\nI am between 2 minds about __always_unused, or even __maybe_unused for that matter. On one hand, they self-document the code, which is good. On the other hand, they are purely informational, as they both map to __unused so this has no meaning for the compiler. This means we could have occurences of __always_unused variables that in fact are used in some cases. This could easily happen as interfaces evolve over time (but we forget to update __always_unused into __maybe_unused), or just because the variable is used in a very specific build configuration that is not obvious. So in this case, the self-documentation value goes away, worse it becomes misleading!\n\nTBH my preference would have been not to introduce __maybe_unused in the first place and instead find a way to silent checkpatch.pl by declaring TF-A does not want to enforce this. But I don\u0027t know how easy that would be...",
      "parentUuid": "33ab86a7_373a0c09",
      "revId": "351f9cd8897fd3ea52db2421721a152494b16328",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8873097b_4a31349c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2022-10-07T11:16:56Z",
      "side": 1,
      "message": "Hi Sandrine,\nThanks for your answer, no worries for the delay.\n\nModifying checkpatch.pl was my first thought some time ago:\nhttps://review.trustedfirmware.org/c/ci/tf-a-ci-scripts/+/11116\n\nBut the preference at that time was to keep the checkpatch script untouched.\nMaybe we could re-open the debate.\nEither solution is OK with me.\n\nBest regards,\nYann",
      "parentUuid": "6891cc95_3f91bbd5",
      "revId": "351f9cd8897fd3ea52db2421721a152494b16328",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b6df1535_67880517",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2022-10-07T15:17:37Z",
      "side": 1,
      "message": "I too think we should keep checkpatch script untouched, both for licensing reasons and ease of updating it in the future. I was hoping there would be a way to tell checkpatch to ignore __unused attribute. I know you can do that for various warnings through the --ignore script argument. As a matter of fact, there exists \u0027-ignore PREFER_DEFINED_ATTRIBUTE_MACRO\u0027, which I was expecting to do exactly what we want.\n\nBut unfortunately, the problem at hand sounds more complex than that... It looks like checkpatch is throwing the \"Missing blank line\" warning because when it\u0027s trying to distinguish declarations from statements in a function body, it does not recognize the __unused attribute on the variable declaration and so it thinks it is a statement, which should be preceded by a blank line...\n\nApparently it\u0027s not the first time this type of issues happens. I found the following patch from last year that apparently improved the situation, but evidently did not solve our specific problem:\n\nhttps://lore.kernel.org/linux-mm/20210226012140.hrF7kKAVD%25akpm@linux-foundation.org/\n\nI suppose we could contribute a patch to relax checkpatch\u0027s parser to include *all* attributes and not just the ones specified in the script itself. But TBH that sounds like a lot of effort to me, for something the kernel maintainers might not approve to merge at the end of the day.\n\nIt feels like I just reached the same conclusion as you guys in https://review.trustedfirmware.org/c/ci/tf-a-ci-scripts/+/11116 ...\n\nThanks for explaining the background to me anyway!",
      "parentUuid": "8873097b_4a31349c",
      "revId": "351f9cd8897fd3ea52db2421721a152494b16328",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}