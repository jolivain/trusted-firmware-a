{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "cd2c21a8_9d7f516e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000099
      },
      "writtenOn": "2024-04-17T14:49:31Z",
      "side": 1,
      "message": "@jimmy Can you post the tf-a-main results with the update to the ci-scripts and this patch?",
      "revId": "2eb69f1c8c573fea4b3131cf42e9be1df3e410de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97256bc4_eae83bdd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2024-04-17T16:08:18Z",
      "side": 1,
      "message": "Looks like CI+2 triggered build failures perhaps good thing to start with fixing that and then scale to the tf-a-main job?",
      "parentUuid": "cd2c21a8_9d7f516e",
      "revId": "2eb69f1c8c573fea4b3131cf42e9be1df3e410de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75e32183_530457aa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000196
      },
      "writtenOn": "2024-04-17T21:57:25Z",
      "side": 1,
      "message": "One of the configuration changes is incorrect in some configurations, and not needed anyway. I left several suggestions for other changes. Apart from some of the missing files in the makefile, the code will work as is but there are a few improvements that you aren\u0027t benefiting from.",
      "revId": "2eb69f1c8c573fea4b3131cf42e9be1df3e410de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01a6f4d0_5fbb0d92",
        "filename": "drivers/auth/mbedtls/mbedtls_common.mk",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 1000196
      },
      "writtenOn": "2024-04-17T21:57:25Z",
      "side": 1,
      "message": "You should also build `aesce.c` for when TF-A is built on a chip with AES acceleration. AES acceleration can be enabled with `#define MBEDTLS_AESCE_C`, and you may also want to set `MBEDTLS_AES_USE_HARDWARE_ONLY`, if not you\u0027ll need to patch the runtime detection function `mbedtls_aesce_has_support_impl`.",
      "revId": "2eb69f1c8c573fea4b3131cf42e9be1df3e410de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "505290d3_7d856027",
        "filename": "drivers/auth/mbedtls/mbedtls_common.mk",
        "patchSetId": 3
      },
      "lineNbr": 58,
      "author": {
        "id": 1000196
      },
      "writtenOn": "2024-04-17T21:57:25Z",
      "side": 1,
      "message": "You might want to add `sha3.c`.",
      "revId": "2eb69f1c8c573fea4b3131cf42e9be1df3e410de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce552996_9c5dff5d",
        "filename": "drivers/auth/mbedtls/mbedtls_common.mk",
        "patchSetId": 3
      },
      "lineNbr": 72,
      "author": {
        "id": 1000196
      },
      "writtenOn": "2024-04-17T21:57:25Z",
      "side": 1,
      "message": "This issue is resolved, you shouldn\u0027t need to disable the warning anymore.",
      "range": {
        "startLine": 72,
        "startChar": 30,
        "endLine": 72,
        "endChar": 31
      },
      "revId": "2eb69f1c8c573fea4b3131cf42e9be1df3e410de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b50b7141_cd857234",
        "filename": "drivers/auth/mbedtls/mbedtls_common.mk",
        "patchSetId": 3
      },
      "lineNbr": 83,
      "author": {
        "id": 1000196
      },
      "writtenOn": "2024-04-17T21:57:25Z",
      "side": 1,
      "message": "I think you need `psa_util.c` as well now. Also `psa_crypto_aead.c` if AES-GCM is enabled.",
      "range": {
        "startLine": 83,
        "startChar": 3,
        "endLine": 83,
        "endChar": 4
      },
      "revId": "2eb69f1c8c573fea4b3131cf42e9be1df3e410de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68a4b62a_b8f601a2",
        "filename": "include/drivers/auth/mbedtls/mbedtls_config-3.h",
        "patchSetId": 3
      },
      "lineNbr": 47,
      "author": {
        "id": 1000196
      },
      "writtenOn": "2024-04-17T21:57:25Z",
      "side": 1,
      "message": "Weird: why is Base64 enabled, but not PEM?",
      "revId": "2eb69f1c8c573fea4b3131cf42e9be1df3e410de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f93d13d_ae636434",
        "filename": "include/drivers/auth/mbedtls/mbedtls_config-3.h",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 1000196
      },
      "writtenOn": "2024-04-17T21:57:25Z",
      "side": 1,
      "message": "I\u0027m surprised that `MBEDTLS_ERROR_C` and `MBEDTLS_VERSION_C` are enabled. They define human-readable strings which are typically not used in low-level firmware. They don\u0027t seem to be used: there are no calls to `mbedtls_strerror()` or `mbedtls_version_xxx()` in TF-A.",
      "revId": "2eb69f1c8c573fea4b3131cf42e9be1df3e410de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "afa8d6f0_ea4d828d",
        "filename": "include/drivers/auth/mbedtls/mbedtls_config-3.h",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 1000196
      },
      "writtenOn": "2024-04-17T21:57:25Z",
      "side": 1,
      "message": "The added `_CAN_` and `_HAVE_` symbols are internal symbols which you should not define. They are defined automatically as needed based on available features. They need to be consistent with what is actually enabled in the build. For example, defining `MBEDTLS_MD_CAN_SHA512` unconditionally here is inconsistent with the fact that SHA-512 is only enabled conditionally below.",
      "revId": "2eb69f1c8c573fea4b3131cf42e9be1df3e410de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1dabe8b5_9c307eef",
        "filename": "include/drivers/auth/mbedtls/mbedtls_config-3.h",
        "patchSetId": 3
      },
      "lineNbr": 70,
      "author": {
        "id": 1000196
      },
      "writtenOn": "2024-04-17T21:57:25Z",
      "side": 1,
      "message": "In configurations where secp256r1 is the only elliptic curve, you can now enable `MBEDTLS_PSA_P256M_DRIVER_ENABLED` instead of `MBEDTLS_ECP_C` + `MBEDTLS_ECDSA_C` + `MBEDTLS_ECP_DP_SECP256R1_ENABLED`. This requires the source files in `3rdparty/p256-m`.\n\nThe advantages are: smaller code (as long as you only enable this single curve), faster code, better resistance to timing side channels. The downside is that it\u0027s only supported through the PSA APIs (and also pk and X.509 if `MBEDTLS_USE_PSA_CRYPTO` are enabled), not with direct calls to `mbedtls_ecdsa_xxx()`.",
      "revId": "2eb69f1c8c573fea4b3131cf42e9be1df3e410de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d034df4_ad668473",
        "filename": "include/drivers/auth/mbedtls/mbedtls_config-3.h",
        "patchSetId": 3
      },
      "lineNbr": 110,
      "author": {
        "id": 1000196
      },
      "writtenOn": "2024-04-17T21:57:25Z",
      "side": 1,
      "message": "`MBEDTLS_MPI_WINDOW_SIZE` represents a memory vs performance compromise in RSA. The underlying implementation has changed in 3.6.0, in a way that perserves speed but increases RAM usage. If RAM usage is the main factor, you might want to reduce the value to 1. If you keep the performance, you may need to increase the heap size in RSA configurations (I don\u0027t know by how much).",
      "range": {
        "startLine": 110,
        "startChar": 8,
        "endLine": 110,
        "endChar": 31
      },
      "revId": "2eb69f1c8c573fea4b3131cf42e9be1df3e410de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "810d59c7_456baede",
        "filename": "plat/st/common/include/stm32mp_mbedtls_config-3.h",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1000196
      },
      "writtenOn": "2024-04-17T21:57:25Z",
      "side": 1,
      "message": "You don\u0027t need to enable SHA224 anymore (and disabling it will actually save a little code size).\n\nSame with SHA384/SHA512 below.",
      "range": {
        "startLine": 63,
        "startChar": 8,
        "endLine": 63,
        "endChar": 24
      },
      "revId": "2eb69f1c8c573fea4b3131cf42e9be1df3e410de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5510f594_047d2c30",
        "filename": "plat/st/common/include/stm32mp_mbedtls_config-3.h",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2024-04-18T07:56:35Z",
      "side": 1,
      "message": "Good catch, I forgot about it!\nFor the other algos, shouldn\u0027t they be enabled depending on TF_MBEDTLS_HASH_ALG_ID:\n\n\t#if ((TF_MBEDTLS_HASH_ALG_ID \u003d\u003d TF_MBEDTLS_SHA384) || (TF_MBEDTLS_HASH_ALG_ID \u003d\u003d TF_MBEDTLS_SHA512))\n\t#define MBEDTLS_SHA384_C\n\t#endif\n\t#if (TF_MBEDTLS_HASH_ALG_ID \u003d\u003d TF_MBEDTLS_SHA512)\n\t#define MBEDTLS_SHA512_C\n\t#endif\n\nThe first check is if we still need SHA384 enabled when using SHA512\nWe could also wonder if TF_MBEDTLS_SHA256 should be under `#if (TF_MBEDTLS_HASH_ALG_ID \u003d\u003d TF_MBEDTLS_SHA256)`",
      "parentUuid": "810d59c7_456baede",
      "range": {
        "startLine": 63,
        "startChar": 8,
        "endLine": 63,
        "endChar": 24
      },
      "revId": "2eb69f1c8c573fea4b3131cf42e9be1df3e410de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8860a6c9_5415d8e9",
        "filename": "plat/st/common/include/stm32mp_mbedtls_config-3.h",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2024-04-18T09:31:13Z",
      "side": 1,
      "message": "I think it\u0027s a good move to tidy up this file by removing unnecessary configurations. \nI agree with Yann, it would be beneficial to incorporate conditions to enable specific SHA support. \nHowever, I have doubt about enabling both MBEDTLS_SHA384_C and MBEDTLS_SHA512_C when selecting TF_MBEDTLS_HASH_ALG_ID \u003d\u003d TF_MBEDTLS_SHA512.Does enabling MBEDTLS_SHA512_C suffice when selecting the SHA512 hash algorithm? @Giles can you please confirm. Thanks!",
      "parentUuid": "5510f594_047d2c30",
      "range": {
        "startLine": 63,
        "startChar": 8,
        "endLine": 63,
        "endChar": 24
      },
      "revId": "2eb69f1c8c573fea4b3131cf42e9be1df3e410de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65bcb58e_e563de00",
        "filename": "plat/st/common/include/stm32mp_mbedtls_config-3.h",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1000196
      },
      "writtenOn": "2024-04-18T09:38:45Z",
      "side": 1,
      "message": "\u003e Does enabling MBEDTLS_SHA512_C suffice when selecting the SHA512 hash algorithm?\n\nYes. Just enable the MBEDTLS_SHAnnn_C for the hashes that you want. (SHA512 without SHA384 has been supported since Mbed TLS 2.something. SHA256 without SHA224 is only possible since 3.4.)\n\nYou probably don\u0027t need SHA384. It\u0027s rarely used for signatures of stored data such as in certificates, mostly only in network protocols such as TLS.",
      "parentUuid": "8860a6c9_5415d8e9",
      "range": {
        "startLine": 63,
        "startChar": 8,
        "endLine": 63,
        "endChar": 24
      },
      "revId": "2eb69f1c8c573fea4b3131cf42e9be1df3e410de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}