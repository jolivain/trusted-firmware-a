{
  "comments": [
    {
      "key": {
        "uuid": "6b88dc28_55c012f7",
        "filename": "plat/rockchip/common/params_setup.c",
        "patchSetId": 2
      },
      "lineNbr": 146,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-06-20T01:28:52Z",
      "side": 1,
      "message": "Just curious. When we return success here, do we assume default values for UART ID? Is there a possibility that the default UART ID might cause issues (e.g. hangs)? If not, do you think the code can just assume the default value always? What\u0027s the role of DT in that case?",
      "range": {
        "startLine": 143,
        "startChar": 5,
        "endLine": 146,
        "endChar": 44
      },
      "revId": "d9cf4b4afc33e1379fd7d5f49acaaeea6ab7ea0e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb7d47ef_11047fe7",
        "filename": "plat/rockchip/common/params_setup.c",
        "patchSetId": 2
      },
      "lineNbr": 146,
      "author": {
        "id": 1000399
      },
      "writtenOn": "2020-06-20T01:51:04Z",
      "side": 1,
      "message": "To answer your first question, we will use the defaults when the DT is too large because we won\u0027t call plat_rockchip_dt_process_fdt_uart() to override them.\n\nThe situation I\u0027m trying to avoid with this change is one where the defaults wouldn\u0027t cause a crash but where TF-A crashes anyway because the passed DT is too large. In the case where the defaults cause a crash and the DT is also too large, we\u0027ll crash either with or without this change, so nothing regresses.\n\nAs for why we care about parsing a DT at all when the defaults don\u0027t cause a crash, that\u0027s because it\u0027s perfectly possible to have defaults that don\u0027t cause a crash but produce no usable output. That\u0027s the case with my RK3399 board, where SPL and U-Boot run at a baud rate of 1500000 which differs from the TF-A Rockchip default of 115200. It could also happen if the defaults specify a different UART than the one the debug adapter is hooked up to.\n\nIn that case, this change will let TF-A will run with no output when the passed DT is too large instead of just crashing, which seems to me like the least surprising outcome.",
      "parentUuid": "6b88dc28_55c012f7",
      "range": {
        "startLine": 143,
        "startChar": 5,
        "endLine": 146,
        "endChar": 44
      },
      "revId": "d9cf4b4afc33e1379fd7d5f49acaaeea6ab7ea0e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "486dac8a_ff629e53",
        "filename": "plat/rockchip/common/params_setup.c",
        "patchSetId": 2
      },
      "lineNbr": 146,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-06-20T01:56:57Z",
      "side": 1,
      "message": "Thanks. IIUC in most cases, you expect the device to crash. I would say no UART output might also be a problem.\n\nI\u0027m wondering if instead of a WARN message, should we panic? The plat_panic_handler might allow the platform a more graceful exit instead of just crashing.",
      "parentUuid": "eb7d47ef_11047fe7",
      "range": {
        "startLine": 143,
        "startChar": 5,
        "endLine": 146,
        "endChar": 44
      },
      "revId": "d9cf4b4afc33e1379fd7d5f49acaaeea6ab7ea0e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "289cc1fd_64e01483",
        "filename": "plat/rockchip/common/params_setup.c",
        "patchSetId": 2
      },
      "lineNbr": 146,
      "author": {
        "id": 1000399
      },
      "writtenOn": "2020-06-20T06:06:05Z",
      "side": 1,
      "message": "My goal here is to stop a too-large DTB from being a fatal error. It sounds like you disagree with that goal and think that a too-large DTB should be fatal. Is that right? If so, let me justify my position a bit more.\n\nTo my knowledge, all RK3399 boards use the same UART for debug output; I assume (but have not verified) that the situation is similar for other Rockchip chips. As a result, the only thing that the FDT will in practice override is the UART baud rate (and this does happen on many RK3399 boards, including mine). A misconfigured baud rate is not inherently a fatal error: it\u0027s perfectly possible for TF-A to boot and function properly after falling back to the default. It will make it harder to read the debug output, but that\u0027s the only effect.\n\nHowever, our current code treats it as fatal. This means that a DTS change that happens to push the DTB size over the edge will cause a total failure to boot that\u0027s very hard to debug, especially if all one has is serial access. This is what I\u0027m trying to avoid with this patch. It\u0027s much easier to debug an incorrect baud rate in a specific bootloader stage than it is to debug a total failure to boot.\n\nI acknowledge that there\u0027s value in keeping abnormal conditions like this fatal, so that they\u0027re guaranteed to be found and fixed when they happen. However, there are two reasons I don\u0027t want to do that here. The first is that, like I mention above, this will be triggered by DTS changes that are totally unrelated to TF-A in any way, meaning that debugging it in its current state is certain to be quite time consuming. The second is is that this failure mode really isn\u0027t that harmful. A bad baud rate on an early boot stage that doesn\u0027t produce much output anyway is not likely to adversely affect anyone if it goes unfixed, and seems clearly superior to (what will appear to be) random boot failures.",
      "parentUuid": "486dac8a_ff629e53",
      "range": {
        "startLine": 143,
        "startChar": 5,
        "endLine": 146,
        "endChar": 44
      },
      "revId": "d9cf4b4afc33e1379fd7d5f49acaaeea6ab7ea0e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02e9d0da_438723f5",
        "filename": "plat/rockchip/common/params_setup.c",
        "patchSetId": 2
      },
      "lineNbr": 146,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-06-21T20:46:46Z",
      "side": 1,
      "message": "I understand the reasoning behind the UART baud rate settings and using the default values. I find it a bit odd that an error for a large DTB is not flagged. In future, the DTB might contain more settings and this piece of the code would let it slide. So the only way to catch that issue would be with an eventual crash if we are lucky. The last thing any platform would want is to execute with incorrect settings because we did not flag the large DTB.\n\nAs a platform owner, I would want to catch that issue. We should see if the rockchip platforms think otherwise.",
      "parentUuid": "289cc1fd_64e01483",
      "range": {
        "startLine": 143,
        "startChar": 5,
        "endLine": 146,
        "endChar": 44
      },
      "revId": "d9cf4b4afc33e1379fd7d5f49acaaeea6ab7ea0e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c6a7549_6a7a7078",
        "filename": "plat/rockchip/common/params_setup.c",
        "patchSetId": 2
      },
      "lineNbr": 146,
      "author": {
        "id": 1000399
      },
      "writtenOn": "2020-06-21T20:49:52Z",
      "side": 1,
      "message": "Sure. For the record, if/when Rockchip starts parsing information from the DTB that\u0027s more critical than UART config, I fully support changing this into a panic.",
      "parentUuid": "02e9d0da_438723f5",
      "range": {
        "startLine": 143,
        "startChar": 5,
        "endLine": 146,
        "endChar": 44
      },
      "revId": "d9cf4b4afc33e1379fd7d5f49acaaeea6ab7ea0e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    }
  ]
}