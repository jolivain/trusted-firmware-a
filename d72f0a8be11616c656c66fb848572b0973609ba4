{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6c6a7e74_3efdeeeb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2023-02-28T19:07:42Z",
      "side": 1,
      "message": "This message is misleading as the TTRF bit gets cleared in the trf_enable function to enable TRF feature for lower ELs",
      "range": {
        "startLine": 7,
        "startChar": 15,
        "endLine": 7,
        "endChar": 45
      },
      "revId": "d72f0a8be11616c656c66fb848572b0973609ba4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fcac4550_85c93323",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-02-28T12:19:51Z",
      "side": 1,
      "message": "The feature check was not required, but I am a bit hesitant to remove this disable outright from reset code. \n\nAs mentioned in my previous patch, this sets up EL3 for SPM and RMM initialization and this happens before the context is initialized for NS world.\n\nOr another way to think about this is, when root context is introduced, this can be programmed as part of that and it needs to be done early in the boot path.",
      "revId": "d72f0a8be11616c656c66fb848572b0973609ba4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9561be84_891c813f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-02-28T15:02:59Z",
      "side": 1,
      "message": "Again, if SPM/RMM are meant to have this available (and again, are they?) then that should be reflected in context management code, not reset code. There are nicely carved out context setup routines for each world for this exact purpose as far as I understand it.\n\nI am not convinced about how root context fixes this either. So far, looking into it (and this series is the start of that), the real problem isn\u0027t so much that root world doesn\u0027t have it\u0027s own context. In fact, it kind of does through ad-hoc register setting. However, all (and I mean the entirety of lib/el3_runtime) is a patchwork of register setting in arbitrary places under questionable pretexts. So changing any part of the root context is a losing game of whack-a-mole since registers get set willy-nilly. I really think that if this is done, root context will be a very minor after thought, if at all necessary. Perhaps we should have an offline chat (along with Manish P) on what I mean.",
      "parentUuid": "fcac4550_85c93323",
      "revId": "d72f0a8be11616c656c66fb848572b0973609ba4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7409c034_2e31d253",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-03-01T10:14:17Z",
      "side": 1,
      "message": "Hmm, as mentioned in my comment for previous patch, the reset initialization is having a different intent to feature enablement. The intent for root context is also overlapping with the reset initialization intent (i.e have a safe value for EL3 execution including cold boot) which means this can be coupled together.\n\nYes, Perhaps I can clarify on the root context intent clearly and a discussion will be better.",
      "parentUuid": "9561be84_891c813f",
      "revId": "d72f0a8be11616c656c66fb848572b0973609ba4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ebb931b6_4676365a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-03-01T10:14:17Z",
      "side": 1,
      "message": "Hmm, as mentioned in my comment for previous patch, the reset initialization is having a different intent to feature enablement. The intent for root context is also overlapping with the reset initialization intent (i.e have a safe value for EL3 execution) which means this can be coupled together.\n\nYes, Perhaps we need to have a discussion on the original intent for root context.",
      "parentUuid": "9561be84_891c813f",
      "revId": "d72f0a8be11616c656c66fb848572b0973609ba4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}