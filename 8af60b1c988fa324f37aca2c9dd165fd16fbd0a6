{
  "comments": [
    {
      "key": {
        "uuid": "17cde49f_77c55978",
        "filename": "drivers/console/multi_console.c",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1000060
      },
      "writtenOn": "2019-07-25T03:10:30Z",
      "side": 1,
      "message": "Wouldn\u0027t it be much simpler to just do\n\n if (...TRANSLATE_CRLF \u0026\u0026 c \u003d\u003d \u0027\\n\u0027)\n   err \u003d console_putc(\u0027\\r\u0027);\n\nhere?",
      "revId": "8af60b1c988fa324f37aca2c9dd165fd16fbd0a6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "098e3b5a_fd8087fa",
        "filename": "drivers/console/multi_console.c",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1000173
      },
      "writtenOn": "2019-07-25T03:54:46Z",
      "side": 1,
      "message": "Let me clarify your suggestion here:\n\n[1] Drop excessive parentheses from the if-conditional\n[2] Replace console-\u003eputc() with console_putc()\n\nCorrect?\n\n\nAs for [1], I just made it consistent with:\nif ((err \u003d\u003d ERROR_NO_VALID_CONSOLE) || (ret \u003c err))\n\nIIRC, I was told me to add pointlessly excessive\nparentheses to meet the MISRA requirement.\n\n\nAs for [2], would it work correctly?\n\nLet\u0027s assume we have console-a and console-b.\n\nIf console-a has TRANSLATE_CRLF flag,\nit would recurse to console_putc() to\nrequest both of the consoles to emit \u0027\\r\u0027.\n\nIf console-b also has TRANSLATE_CRLF flag,\nit would request both of the consoles to do so again.\n\nAs a result, the consoles would emit \u0027\\r\u0027 more than needed.",
      "parentUuid": "17cde49f_77c55978",
      "revId": "8af60b1c988fa324f37aca2c9dd165fd16fbd0a6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5576a655_8b3cda41",
        "filename": "drivers/console/multi_console.c",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1000060
      },
      "writtenOn": "2019-07-25T19:44:50Z",
      "side": 1,
      "message": "Sorry, I forgot that every console has it\u0027s own flag. Yes, you\u0027re right, you have to do it the way you did.",
      "parentUuid": "098e3b5a_fd8087fa",
      "revId": "8af60b1c988fa324f37aca2c9dd165fd16fbd0a6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d81b0dd1_14096394",
        "filename": "drivers/console/multi_console.c",
        "patchSetId": 2
      },
      "lineNbr": 80,
      "author": {
        "id": 1000060
      },
      "writtenOn": "2019-07-25T19:44:50Z",
      "side": 1,
      "message": "However, maybe this could be cleaner if it was factored out into a helper function? This could be:\n\n for (console \u003d ... ) {\n   if ((c \u003d\u003d \u0027\\n\u0027) \u0026\u0026 (console-\u003eflags \u0026 CONSOLE_FLAG_TRANSLATE_CRLF))\n     putc_helper(\u0027\\r\u0027, console, \u0026err);\n   putc_helper(c, console, \u0026err);\n }\n\n...and then above this...\n\n static void putc_helper(int c, console_t *console, int *err)\n {\n   if (!(console-\u003eflags \u0026 console_state) || !console-\u003eputc)\n     return;\n   int ret \u003d console-\u003eputc(c, console);\n   if ((*err \u003d\u003d ERROR_NO_VALID_CONSOLE) || (ret \u003c *err))\n     *err \u003d ret;\n }",
      "revId": "8af60b1c988fa324f37aca2c9dd165fd16fbd0a6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f74804d_68fd0467",
        "filename": "drivers/console/multi_console.c",
        "patchSetId": 2
      },
      "lineNbr": 86,
      "author": {
        "id": 1000080
      },
      "writtenOn": "2019-07-25T13:46:01Z",
      "side": 1,
      "message": "Why not keep the same check as for the main putc: \"(err \u003d\u003d ERROR_NO_VALID_CONSOLE) || (ret \u003c err)\"?",
      "range": {
        "startLine": 86,
        "startChar": 9,
        "endLine": 86,
        "endChar": 38
      },
      "revId": "8af60b1c988fa324f37aca2c9dd165fd16fbd0a6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7632289b_5b1457d5",
        "filename": "plat/common/aarch64/crash_console_helpers.S",
        "patchSetId": 2
      },
      "lineNbr": 127,
      "author": {
        "id": 1000060
      },
      "writtenOn": "2019-07-25T03:10:30Z",
      "side": 1,
      "message": "Technically x16/x17 may change across any function call according to AAPCS (the linker may use it as veneer scratch register). Some console drivers (e.g. cbmem) make use of this fact to have an extra two scratch registers. So I think you\u0027ll just have to load the function pointer twice here.",
      "revId": "8af60b1c988fa324f37aca2c9dd165fd16fbd0a6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a771c49c_47a7fcf8",
        "filename": "plat/common/aarch64/crash_console_helpers.S",
        "patchSetId": 2
      },
      "lineNbr": 127,
      "author": {
        "id": 1000173
      },
      "writtenOn": "2019-07-25T03:54:46Z",
      "side": 1,
      "message": "OK, I will do so.\n(or perhaps, we could save x13 and use it instead of x16)",
      "parentUuid": "7632289b_5b1457d5",
      "revId": "8af60b1c988fa324f37aca2c9dd165fd16fbd0a6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6be6aa6_f4d10386",
        "filename": "plat/common/aarch64/crash_console_helpers.S",
        "patchSetId": 2
      },
      "lineNbr": 127,
      "author": {
        "id": 1000060
      },
      "writtenOn": "2019-07-25T19:44:50Z",
      "side": 1,
      "message": "Then you\u0027ll need to save another register to crash_console_reg_stash. Considering that you only need to load the pointer twice for \u0027\\n\u0027 characters (are comparatively rare occurrence), I don\u0027t think that\u0027s worth it.",
      "parentUuid": "a771c49c_47a7fcf8",
      "revId": "8af60b1c988fa324f37aca2c9dd165fd16fbd0a6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    }
  ]
}