{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "189dfccf_ab0cec2a",
        "filename": "include/drivers/auth/mbedtls/mbedtls_config-3.h",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2024-07-15T08:21:15Z",
      "side": 0,
      "message": "This is captured in below suggested implementation.",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 78,
        "endChar": 24
      },
      "revId": "20307efa5edc54a5a6310069d4b0f8a9d65a5659",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1159add3_0bd165c6",
        "filename": "include/drivers/auth/mbedtls/mbedtls_config-3.h",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2024-07-15T08:21:15Z",
      "side": 0,
      "message": "I think for SHA384, we need to enable only the ``MBEDTLS_SHA384_C``  and not ``MBEDTLS_SHA512_C``. We have SHA384 configurations in our CI, as shown below, and  partners are also likely using SHA384 configurations.\n\n```\ntf-l2-boot-tests-misc/fvp-mb_hash256-tbb_hash384-optee-romlib:fvp-optee.mb-linux.rootfs+ftpm-romlib-fip.ftpm-aemv8a\ntf-l2-boot-tests-misc/fvp-mb_hash384-optee-romlib:fvp-optee.mb-linux.rootfs+ftpm_384-romlib-fip.ftpm-aemv8a\ntf-l2-boot-tests-misc/fvp-psa-mbedtls-mb_hash384-optee:fvp-optee.mb-linux.rootfs+ftpm_384-fip.ftpm-aemv8a\n```\n\nMay be we can modify the code as below (Simply enable the MBEDTLS_SHAnnn_C option for the hashes you need)\n\n```\n\n/* Enable hash algorithms based on TBB or Measured Boot */\n#if (TF_MBEDTLS_HASH_ALG_ID \u003d\u003d TF_MBEDTLS_SHA256 || defined(TF_MBEDTLS_MBOOT_USE_SHA256)\n    #define MBEDTLS_SHA256_C\n#endif\n\n#if (TF_MBEDTLS_HASH_ALG_ID \u003d\u003d TF_MBEDTLS_SHA384) || defined(TF_MBEDTLS_MBOOT_USE_SHA384)\n    #define MBEDTLS_SHA384_C\n#endif\n\n#if (TF_MBEDTLS_HASH_ALG_ID \u003d\u003d TF_MBEDTLS_SHA512) || defined(TF_MBEDTLS_MBOOT_USE_SHA512)\n    #define MBEDTLS_SHA512_C\n#endif\n\n```\n\nIf we go with above we need to introduce these ``TF_MBEDTLS_MBOOT_USE_SHA256`` and ``TF_MBEDTLS_MBOOT_USE_SHA384`` define.",
      "range": {
        "startLine": 85,
        "startChar": 8,
        "endLine": 85,
        "endChar": 24
      },
      "revId": "20307efa5edc54a5a6310069d4b0f8a9d65a5659",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3da5175c_38d9b3ab",
        "filename": "include/drivers/auth/mbedtls/mbedtls_config-3.h",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1000272
      },
      "writtenOn": "2024-07-15T15:28:40Z",
      "side": 0,
      "message": "What does measured boot use when this is not defined?",
      "parentUuid": "1159add3_0bd165c6",
      "range": {
        "startLine": 85,
        "startChar": 8,
        "endLine": 85,
        "endChar": 24
      },
      "revId": "20307efa5edc54a5a6310069d4b0f8a9d65a5659",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "282c0116_3ab160bb",
        "filename": "include/drivers/auth/mbedtls/mbedtls_config-3.h",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2024-07-15T15:53:27Z",
      "side": 0,
      "message": "Measured boot uses the default MBEDTLS_SHA256_C. When TF_MBEDTLS_MBOOT_USE_SHA512 is defined, it switches to using MBEDTLS_SHA384_C and MBEDTLS_SHA512_C settings. see here https://git.trustedfirmware.org/TF-A/trusted-firmware-a/+/63edd92b7fd45d3c66e70ec44d56f683433466a9/plat/arm/common/arm_common.mk#429.",
      "parentUuid": "3da5175c_38d9b3ab",
      "range": {
        "startLine": 85,
        "startChar": 8,
        "endLine": 85,
        "endChar": 24
      },
      "revId": "20307efa5edc54a5a6310069d4b0f8a9d65a5659",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c711cd5a_7d311dfc",
        "filename": "include/drivers/auth/mbedtls/mbedtls_config-3.h",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2024-07-17T08:22:53Z",
      "side": 0,
      "message": "We need to improve the condition in this file as follows, both in the arm_common.mk file and in other platform makefiles that use Measured Boot support:\n\n```\n    ifneq (${MBOOT_EL_HASH_ALG}, sha256)\n        $(eval $(call add_define,TF_MBEDTLS_MBOOT_USE_SHA256))\n    else ifeq ${MBOOT_EL_HASH_ALG}, sha384)\n        $(eval $(call add_define,TF_MBEDTLS_MBOOT_USE_SHA384))\n    else ifeq (${MBOOT_EL_HASH_ALG}, sha512)\n        $(eval $(call add_define,TF_MBEDTLS_MBOOT_USE_SHA512))\n    endif \n```   \nOr we can change this as below:\n```\n    ifneq (${MBOOT_EL_HASH_ALG}, sha256)\n        TF_MBEDTLS_MBOOT_HASH_ALG_ID  :\u003d  TF_MBEDTLS_SHA256\n    else ifeq ${MBOOT_EL_HASH_ALG}, sha384)\n        TF_MBEDTLS_MBOOT_HASH_ALG_ID  :\u003d  TF_MBEDTLS_SHA384\n    else ifeq (${MBOOT_EL_HASH_ALG}, sha512)\n        TF_MBEDTLS_MBOOT_HASH_ALG_ID  :\u003d  TF_MBEDTLS_SHA512\n    endif \n```\n\nAnd accordingly use TF_MBEDTLS_MBOOT_HASH_ALG_ID in the code instead of TF_MBEDTLS_MBOOT_USE_*",
      "parentUuid": "282c0116_3ab160bb",
      "range": {
        "startLine": 85,
        "startChar": 8,
        "endLine": 85,
        "endChar": 24
      },
      "revId": "20307efa5edc54a5a6310069d4b0f8a9d65a5659",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}