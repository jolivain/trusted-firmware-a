{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "818f0438_39888d53",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 24
      },
      "lineNbr": 61,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-04-19T11:14:44Z",
      "side": 1,
      "message": "can we use smaller types to reduce memory footprint ?",
      "range": {
        "startLine": 61,
        "startChar": 8,
        "endLine": 61,
        "endChar": 12
      },
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "edb62a67_81f60f06",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 24
      },
      "lineNbr": 61,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2024-04-19T12:05:35Z",
      "side": 1,
      "message": "SZ_2M, SZ_32 \u0026 SZ_512M are UL for aarch64 which match size_t.",
      "parentUuid": "818f0438_39888d53",
      "range": {
        "startLine": 61,
        "startChar": 8,
        "endLine": 61,
        "endChar": 12
      },
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae88e3a7_98da025a",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 24
      },
      "lineNbr": 65,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-04-19T11:14:44Z",
      "side": 1,
      "message": "Need a comment that the entries need to be sorted in descending order of contiguous sizes.",
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ab20a9e1_82eb4d0b",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 24
      },
      "lineNbr": 65,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2024-04-19T15:53:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ae88e3a7_98da025a",
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a17e78c_7d5f3d9c",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 24
      },
      "lineNbr": 102,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-04-19T11:14:44Z",
      "side": 1,
      "message": "Need to see the size reduction achieved if the lib can statically assume 4K page size.",
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c46b404d_478d48f2",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 24
      },
      "lineNbr": 102,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2024-04-19T12:05:35Z",
      "side": 1,
      "message": "This will be the next optimisation patch stack, when GPT library will use platform specific defines. It will also allow to have statically defined \u0026 allocated array of bit locks \u0026 not use memory page reserved for L0 GPT.",
      "parentUuid": "3a17e78c_7d5f3d9c",
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00f012bf_f45da153",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 24
      },
      "lineNbr": 176,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-04-19T11:14:44Z",
      "side": 1,
      "message": "we could increment this pointer and then avoid having to keep the idx counter thus saving memory.",
      "range": {
        "startLine": 176,
        "startChar": 27,
        "endLine": 176,
        "endChar": 28
      },
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b7e521fc_eee8ebd8",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 24
      },
      "lineNbr": 176,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2024-04-19T15:53:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "00f012bf_f45da153",
      "range": {
        "startLine": 176,
        "startChar": 27,
        "endLine": 176,
        "endChar": 28
      },
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2e0e4a4_a1caa9e6",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 24
      },
      "lineNbr": 177,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-04-19T11:14:44Z",
      "side": 1,
      "message": "not needed if we do validation of L0 size within the L0 function init.",
      "range": {
        "startLine": 177,
        "startChar": 14,
        "endLine": 177,
        "endChar": 29
      },
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e538d042_8aa8d340",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 24
      },
      "lineNbr": 177,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2024-04-24T15:30:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d2e0e4a4_a1caa9e6",
      "range": {
        "startLine": 177,
        "startChar": 14,
        "endLine": 177,
        "endChar": 29
      },
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8dae5e9b_8e3b671d",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 24
      },
      "lineNbr": 180,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-04-19T11:14:44Z",
      "side": 1,
      "message": "\"Bit lock base for each 512 MB block of PPS\"",
      "range": {
        "startLine": 180,
        "startChar": 33,
        "endLine": 180,
        "endChar": 51
      },
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "111c20dc_b636aa41",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 24
      },
      "lineNbr": 180,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-04-19T11:14:44Z",
      "side": 1,
      "message": "nit: perhaps bitlock_base ?",
      "range": {
        "startLine": 180,
        "startChar": 18,
        "endLine": 180,
        "endChar": 27
      },
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6cfab137_7861b319",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 24
      },
      "lineNbr": 180,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2024-04-19T12:05:35Z",
      "side": 1,
      "message": "gpt_bitlock_base?",
      "parentUuid": "111c20dc_b636aa41",
      "range": {
        "startLine": 180,
        "startChar": 18,
        "endLine": 180,
        "endChar": 27
      },
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fdf17e65_a17f7c55",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 24
      },
      "lineNbr": 180,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2024-04-19T12:05:35Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "8dae5e9b_8e3b671d",
      "range": {
        "startLine": 180,
        "startChar": 33,
        "endLine": 180,
        "endChar": 51
      },
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37d95b8f_5e62e018",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 24
      },
      "lineNbr": 209,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-04-19T11:14:44Z",
      "side": 1,
      "message": "memset ?\n\nI know the TF-A memset() implementation is not performant. But in future, I expect memset may use FEAT_MOPS extension and in that case, we would get the performance boot automatically.",
      "range": {
        "startLine": 207,
        "startChar": 1,
        "endLine": 209,
        "endChar": 2
      },
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9b445ac_3b6afaa0",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 24
      },
      "lineNbr": 209,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2024-04-19T12:05:35Z",
      "side": 1,
      "message": "Won\u0027t work. memset() uses \u0027int val\u0027, here we write uint64_t values.",
      "parentUuid": "37d95b8f_5e62e018",
      "range": {
        "startLine": 207,
        "startChar": 1,
        "endLine": 209,
        "endChar": 2
      },
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a5c1b9f_d83858cb",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 24
      },
      "lineNbr": 383,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-04-19T11:14:44Z",
      "side": 1,
      "message": "Some of the below validation seemingly are a bit over-engineered IMO. We rely on the platform to the right thing and these checks are basic sanity checks.\n\nWe just need to ensure that there is no overlap in the incoming PAS regions. This can be easily done by sorting the PAS_REGION array and ensuring that each region starts after the previous region has started. \n\nAlso, if adjacent regions are having the same PAS attr, then they can be combined.\n\nAll of the pas_region validation can be restricted to Debug builds.\n\nThis will bring down the size of the lib hopefully.",
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b620af6b_456adbd0",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 24
      },
      "lineNbr": 383,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2024-04-19T12:05:35Z",
      "side": 1,
      "message": "Should GPT library perform this sorting of PAS_REGION array? Won\u0027t this result in more code? Also finding regions with the same PAS will require checking all previous regions \u0026 changing already written descriptors.",
      "parentUuid": "6a5c1b9f_d83858cb",
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6927ecfe_fe16ee80",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 24
      },
      "lineNbr": 686,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-04-19T13:31:27Z",
      "side": 1,
      "message": "... GPI entries from `first` to specified `length` in a single L1 ..",
      "range": {
        "startLine": 686,
        "startChar": 30,
        "endLine": 686,
        "endChar": 43
      },
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9bb72f3f_69955e67",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 24
      },
      "lineNbr": 686,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2024-04-23T15:28:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6927ecfe_fe16ee80",
      "range": {
        "startLine": 686,
        "startChar": 30,
        "endLine": 686,
        "endChar": 43
      },
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ab93be1_e955ed40",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 24
      },
      "lineNbr": 751,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-04-19T13:31:27Z",
      "side": 1,
      "message": "... GPI entries from first to specified length in a single L1 ..\n\nI have given a comment to remove the `last` argument.",
      "range": {
        "startLine": 751,
        "startChar": 28,
        "endLine": 751,
        "endChar": 47
      },
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e7b39551_531a6aa8",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 24
      },
      "lineNbr": 751,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2024-04-23T15:28:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7ab93be1_e955ed40",
      "range": {
        "startLine": 751,
        "startChar": 28,
        "endLine": 751,
        "endChar": 47
      },
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b513050_49d8c7c6",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 24
      },
      "lineNbr": 773,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-04-19T13:31:27Z",
      "side": 1,
      "message": "this argument can be avoided I think. It is redundant with length.",
      "range": {
        "startLine": 773,
        "startChar": 17,
        "endLine": 773,
        "endChar": 21
      },
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "768a2b7a_aef2bd7f",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 24
      },
      "lineNbr": 823,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-04-19T13:31:27Z",
      "side": 1,
      "message": "\"an entire L1 table\"",
      "range": {
        "startLine": 823,
        "startChar": 26,
        "endLine": 823,
        "endChar": 33
      },
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0f50ee71_a27b307e",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 24
      },
      "lineNbr": 823,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2024-04-23T15:28:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "768a2b7a_aef2bd7f",
      "range": {
        "startLine": 823,
        "startChar": 26,
        "endLine": 823,
        "endChar": 33
      },
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24ccbaac_c209bf88",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 24
      },
      "lineNbr": 957,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-04-19T13:31:27Z",
      "side": 1,
      "message": "although this looks like a macro , I suspect this is code heavy as this is operating on a variable and not resolved at compile time. \n\nAlso what if the regions are not 64KB aligned ? What if we need to have a different attribute in between a descriptor ?",
      "range": {
        "startLine": 957,
        "startChar": 7,
        "endLine": 957,
        "endChar": 24
      },
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8b6f24f1_58d476f5",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 24
      },
      "lineNbr": 957,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2024-04-23T15:28:33Z",
      "side": 1,
      "message": "1) GPT_BUILD_L1_DESC macro is replaced by build_l1_desc() function which returns predefined uint64_t l1_desc based on GPI.\n2) This is taken care of in fill_l1_gran_desc(), see line #798 of the current patch.",
      "parentUuid": "24ccbaac_c209bf88",
      "range": {
        "startLine": 957,
        "startChar": 7,
        "endLine": 957,
        "endChar": 24
      },
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c87260a1_17f810ff",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 24
      },
      "lineNbr": 1227,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-04-19T11:19:30Z",
      "side": 1,
      "message": "needs to be done in gpt_init_l0_tables()",
      "range": {
        "startLine": 1206,
        "startChar": 0,
        "endLine": 1227,
        "endChar": 2
      },
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2058c60c_b79a2fa2",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 24
      },
      "lineNbr": 1227,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2024-04-19T12:05:35Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "c87260a1_17f810ff",
      "range": {
        "startLine": 1206,
        "startChar": 0,
        "endLine": 1227,
        "endChar": 2
      },
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4ba67223_f2de7973",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 24
      },
      "lineNbr": 1227,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2024-04-23T15:28:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2058c60c_b79a2fa2",
      "range": {
        "startLine": 1206,
        "startChar": 0,
        "endLine": 1227,
        "endChar": 2
      },
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0e272c0_9812751f",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 24
      },
      "lineNbr": 1263,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-04-19T13:31:27Z",
      "side": 1,
      "message": "move to L0 init",
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ff8129d7_2be2722d",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 24
      },
      "lineNbr": 1263,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2024-04-24T15:26:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d0e272c0_9812751f",
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64541abc_d10deeef",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 24
      },
      "lineNbr": 1330,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-04-19T11:19:30Z",
      "side": 1,
      "message": "This print needs to be part of gpt_init_l0_tables",
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e15edf64_2dfe6767",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 24
      },
      "lineNbr": 1330,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-04-19T13:31:27Z",
      "side": 1,
      "message": "ignore.",
      "parentUuid": "64541abc_d10deeef",
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f894e9b5_4b3da277",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 24
      },
      "lineNbr": 1553,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-04-19T14:34:57Z",
      "side": 1,
      "message": "remove this, I think the caller code can do this.",
      "range": {
        "startLine": 1536,
        "startChar": 0,
        "endLine": 1553,
        "endChar": 17
      },
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9da93cb8_0d09f45a",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 24
      },
      "lineNbr": 1553,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2024-04-24T10:55:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f894e9b5_4b3da277",
      "range": {
        "startLine": 1536,
        "startChar": 0,
        "endLine": 1553,
        "endChar": 17
      },
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90365682_bd0cc860",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 24
      },
      "lineNbr": 1624,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-04-19T14:34:57Z",
      "side": 1,
      "message": "this can be de-nested. Check that src is either realm or Secure first. \n\n\t/* Delegate request can only come from REALM or SECURE */\nif (!(src_sec_state \u003d\u003d SMC_FROM_REALM || src_sec_state \u003d\u003d SMC_FROM_SECURE))\n    return -EINVAL;\n\n---\n\nThe we can assume that src has been checked.",
      "range": {
        "startLine": 1621,
        "startChar": 2,
        "endLine": 1624,
        "endChar": 3
      },
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a86f70ba_fb9f242b",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 24
      },
      "lineNbr": 1624,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2024-04-24T15:43:06Z",
      "side": 1,
      "message": "This was an optimisation for not checking src_sec_state value again when setting other variables. There was assert() in the original code.",
      "parentUuid": "90365682_bd0cc860",
      "range": {
        "startLine": 1621,
        "startChar": 2,
        "endLine": 1624,
        "endChar": 3
      },
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2652a1b7_3cbcd0b1",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 24
      },
      "lineNbr": 1671,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-04-19T14:34:57Z",
      "side": 1,
      "message": "```\n#if (RME_GPT_MAX_BLOCK !\u003d 0)\nif ((gpi_info.gpt_l1_desc \u0026 GPT_L1_TYPE_CONT_DESC_MASK) \u003d\u003d\n\t\t\t\t\tGPT_L1_TYPE_CONT_DESC) {\n    shatter() --\u003e which just shatters the does a tlbi with existing GPI\n}\n#endif\nflush_page_to_popa(base | nse);\nwrite_gpt()\ndsboshst()\ntlbi_page()\nflush_page_to_popa(base | nse);\n....\n```\n\nThis way the core sequence which changes the GPI remains the same and reflects the sequence mentioned in the RME supplement docume nt,",
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d91ae669_5e8938c4",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 24
      },
      "lineNbr": 1671,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2024-04-24T10:55:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2652a1b7_3cbcd0b1",
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69e3b5a7_e00f6820",
        "filename": "lib/gpt_rme/gpt_rme.mk",
        "patchSetId": 24
      },
      "lineNbr": 8,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-04-19T10:42:42Z",
      "side": 1,
      "message": "The option is getting passed twice for every compiler invocation. \n\n\n\"\u0027/work/tools/gcc-arm-10.3-2021.07-x86_64-aarch64-none-elf/bin/aarch64-none-elf-gcc\u0027  -g -gdwarf-4  ... -DRME_GPT_MAX_BLOCK\u003d2 -DRME_GPT_MAX_BLOCK\u003d2  .. -o /work/github/trusted-firmware-a/trusted-firmware-a/build/fvp/debug/libc/memchr.o \"\n\nCould be a problem with TF-A make system, but would be good to resolve this.",
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8823a4f_bfd59f58",
        "filename": "lib/gpt_rme/gpt_rme.mk",
        "patchSetId": 24
      },
      "lineNbr": 8,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2024-04-19T11:42:51Z",
      "side": 1,
      "message": "Yes, it is passed for BL2 \u0026 BL31. Can we put it in main Makefile?",
      "parentUuid": "69e3b5a7_e00f6820",
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a46e6b3d_61cf6de9",
        "filename": "lib/gpt_rme/gpt_rme.mk",
        "patchSetId": 24
      },
      "lineNbr": 8,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-04-19T14:34:57Z",
      "side": 1,
      "message": "The -D option is passed twice. This seems to be the problem.",
      "parentUuid": "d8823a4f_bfd59f58",
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c874fbc_e340be4f",
        "filename": "lib/gpt_rme/gpt_rme.mk",
        "patchSetId": 24
      },
      "lineNbr": 8,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2024-04-19T15:53:40Z",
      "side": 1,
      "message": "Removed\n$(eval $(call add_define,RME_GPT_MAX_BLOCK))\n\u0026 added RME_GPT_MAX_BLOCK in Makefile\u0027s list for\n$(eval $(call add_defines,\\\nit\u0027s passed only once now.",
      "parentUuid": "a46e6b3d_61cf6de9",
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd5758a9_84ff8071",
        "filename": "lib/gpt_rme/gpt_rme_private.h",
        "patchSetId": 24
      },
      "lineNbr": 313,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-04-19T10:42:42Z",
      "side": 1,
      "message": "There are generic helpers __align in TF_A , would be good to reuse them or define this as a generic macro in utils_def.h. When generic, it needs to take the size as parameter.",
      "range": {
        "startLine": 313,
        "startChar": 8,
        "endLine": 313,
        "endChar": 17
      },
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3935c5aa_1798691e",
        "filename": "lib/gpt_rme/gpt_rme_private.h",
        "patchSetId": 24
      },
      "lineNbr": 313,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2024-04-19T11:42:51Z",
      "side": 1,
      "message": "This definition in \\include\\lib\\utils_def.h\n\n#define round_boundary(value, boundary)\t\t\\\n\t((__typeof__(value))((boundary) - 1))\n\nis not MISRA C complian because SZ_2M is UL for aarch64.",
      "parentUuid": "bd5758a9_84ff8071",
      "range": {
        "startLine": 313,
        "startChar": 8,
        "endLine": 313,
        "endChar": 17
      },
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08c3f24a_7bdce953",
        "filename": "lib/gpt_rme/gpt_rme_private.h",
        "patchSetId": 24
      },
      "lineNbr": 313,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2024-04-24T15:30:54Z",
      "side": 1,
      "message": "There are definitions in include\\lib\\libc\\sys\\cdefs.h\n#define __align_down(x, y) __builtin_align_down(x, y)\n#define __is_aligned(x, y) __builtin_is_aligned(x, y)\n, but #include \u003csys/cdefs.h\u003e gives error:\ninclude/lib/libc/sys/cdefs.h:535:9: error: \"__weak_reference\" redefined [-Werror]\n  535 | #define __weak_reference(sym,alias)     \\\n      |         ^~~~~~~~~~~~~~~~\nIn file included from include/lib/libc/assert.h:10,\n                 from lib/gpt_rme/gpt_rme.c:7:\ninclude/lib/libc/cdefs.h:32:9: note: this is the location of the previous definition\n   32 | #define __weak_reference(sym, alias)    \\\n      |         ^~~~~~~~~~~~~~~~",
      "parentUuid": "3935c5aa_1798691e",
      "range": {
        "startLine": 313,
        "startChar": 8,
        "endLine": 313,
        "endChar": 17
      },
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca1ce95e_370a77ae",
        "filename": "make_helpers/defaults.mk",
        "patchSetId": 24
      },
      "lineNbr": 143,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-04-19T14:34:57Z",
      "side": 1,
      "message": "nit: remove the tab.",
      "range": {
        "startLine": 143,
        "startChar": 19,
        "endLine": 143,
        "endChar": 20
      },
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a9a9eca6_4eba2425",
        "filename": "make_helpers/defaults.mk",
        "patchSetId": 24
      },
      "lineNbr": 143,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2024-04-24T10:55:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ca1ce95e_370a77ae",
      "range": {
        "startLine": 143,
        "startChar": 19,
        "endLine": 143,
        "endChar": 20
      },
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4fe3f132_6f9b90a7",
        "filename": "plat/arm/board/fvp/platform.mk",
        "patchSetId": 24
      },
      "lineNbr": 31,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-04-19T09:35:16Z",
      "side": 1,
      "message": "This would be a breaking change for all CIs which do not specify this option. We cannot merge this without notifying affected stakeholders. \n\nNeed to understand more details as in :\n\n1. Which BL image has increased in size and by how much ? \n2. Is there further optimization that need to be done to reduce the code size ?",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 31,
        "endChar": 4
      },
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85f9ff22_48ce2842",
        "filename": "plat/arm/board/fvp/platform.mk",
        "patchSetId": 24
      },
      "lineNbr": 31,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2024-04-19T11:42:51Z",
      "side": 1,
      "message": "\"all CIs which do not specify this option\":\nIf ENABLE_RME \u003d\u003d 0, then these platforms aren\u0027t effected and will use original 256KB value. I can revert this change to see if CI fails.",
      "parentUuid": "4fe3f132_6f9b90a7",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 31,
        "endChar": 4
      },
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35bec637_fa869aa0",
        "filename": "plat/arm/board/fvp/platform.mk",
        "patchSetId": 24
      },
      "lineNbr": 31,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-04-19T14:34:57Z",
      "side": 1,
      "message": "I was referring to the RME builds. If the regular default FVP config is not affected by the patch, lets not change this.",
      "parentUuid": "85f9ff22_48ce2842",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 31,
        "endChar": 4
      },
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ac875eb_36f5007a",
        "filename": "plat/arm/board/fvp/platform.mk",
        "patchSetId": 24
      },
      "lineNbr": 31,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2024-04-24T10:55:51Z",
      "side": 1,
      "message": "Removed from the new patch. Needs to test in CI.",
      "parentUuid": "35bec637_fa869aa0",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 31,
        "endChar": 4
      },
      "revId": "31a8fcdf061a9cf599a610be62d6a11195d25608",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}