{
  "comments": [
    {
      "key": {
        "uuid": "2742a1cd_7c7692b0",
        "filename": "include/lib/cpus/aarch64/neoverse_n1.h",
        "patchSetId": 7
      },
      "lineNbr": 73,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2020-06-01T15:58:11Z",
      "side": 1,
      "message": "Changing to \"NEOVERSE_N1_CPUCFR_EL1\" will be inline with other registers defnition.\n\nInstead of using SCU_SHIFT you can create a mask, which will help in simplifying the implementation of is_scu_present_in_dsu()\nNEOVERSE_N1_SCU_MASK    (U(1) \u003c\u003c 2)",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 73,
        "endChar": 22
      },
      "revId": "cb7c5970ba111b5214b79c8c2454f3dbb4e0dcda",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd222289_11d0e041",
        "filename": "lib/cpus/aarch64/dsu_helpers.S",
        "patchSetId": 7
      },
      "lineNbr": 95,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-06-08T02:18:54Z",
      "side": 1,
      "message": "Looks like this function clobbers x19 that was saved by cortex_a75_reset_func() before calling the errata. Moreover, errata_dsu_936184_wa() says that it can clobber x0 - x17 only.\n\nSo this step is not right. Another destination register needs to be used instead of x19.",
      "range": {
        "startLine": 95,
        "startChar": 1,
        "endLine": 95,
        "endChar": 13
      },
      "revId": "cb7c5970ba111b5214b79c8c2454f3dbb4e0dcda",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "410166e2_438d3315",
        "filename": "lib/cpus/aarch64/dsu_helpers.S",
        "patchSetId": 7
      },
      "lineNbr": 95,
      "author": {
        "id": 1000327
      },
      "writtenOn": "2020-06-08T15:53:31Z",
      "side": 1,
      "message": "I\u0027ll check and upate you.",
      "parentUuid": "dd222289_11d0e041",
      "range": {
        "startLine": 95,
        "startChar": 1,
        "endLine": 95,
        "endChar": 13
      },
      "revId": "cb7c5970ba111b5214b79c8c2454f3dbb4e0dcda",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27a24514_7a6d107a",
        "filename": "lib/cpus/aarch64/neoverse_n1.S",
        "patchSetId": 7
      },
      "lineNbr": 30,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2020-06-01T15:58:11Z",
      "side": 1,
      "message": "From function name its obvious that it will return 1 if present and 0 if not, IMHO its worth mentioning that as per TRM, SCU bit is \u00270\u0027 if SCU is present and \u00271\u0027 if not.",
      "range": {
        "startLine": 29,
        "startChar": 1,
        "endLine": 30,
        "endChar": 22
      },
      "revId": "cb7c5970ba111b5214b79c8c2454f3dbb4e0dcda",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4c7a27c_c7b71bce",
        "filename": "lib/cpus/aarch64/neoverse_n1.S",
        "patchSetId": 7
      },
      "lineNbr": 35,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2020-06-01T15:58:11Z",
      "side": 1,
      "message": "simply can write \neor  x0, x0, NEOVERSE_N1_SCU_MASK",
      "range": {
        "startLine": 34,
        "startChar": 1,
        "endLine": 35,
        "endChar": 15
      },
      "revId": "cb7c5970ba111b5214b79c8c2454f3dbb4e0dcda",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7699649_0defb0d0",
        "filename": "lib/cpus/aarch64/neoverse_n1.S",
        "patchSetId": 7
      },
      "lineNbr": 35,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2020-06-01T21:37:46Z",
      "side": 1,
      "message": "Ignore above comment, just realized that its not the correct way.",
      "parentUuid": "f4c7a27c_c7b71bce",
      "range": {
        "startLine": 34,
        "startChar": 1,
        "endLine": 35,
        "endChar": 15
      },
      "revId": "cb7c5970ba111b5214b79c8c2454f3dbb4e0dcda",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    }
  ]
}