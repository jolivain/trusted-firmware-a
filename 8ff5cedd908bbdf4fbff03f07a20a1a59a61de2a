{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f10c8cd4_9a78dfae",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000018
      },
      "writtenOn": "2022-09-21T09:57:35Z",
      "side": 1,
      "message": "Some comments from the internal gerrit:\n\nThis change would most likely need a documentation update describing how the openssl build process is integrated.\nNot sure wat level of detail would be needed as the TF-A docs are a bit sparse on the same matter related to e.g. MbedTLS.\n\nI am not sure if it is a good idea to add this build support in general. Maintaining this might not be worth for a host side only component needed for a single tool.\n\nAnyway this patch + a repo manifest fetching openssl too is a perfect solution for my short term needs. (I just needed a place from where repo can fetch the needed TF-A change.) The other option to extend our build environment with openssl3 would not align that well with our dependency handling methodology, as the build environment would have to work different based on the TF-A version.",
      "revId": "8ff5cedd908bbdf4fbff03f07a20a1a59a61de2a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "592e7b56_aaae9c01",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000750
      },
      "writtenOn": "2022-12-05T15:39:52Z",
      "side": 1,
      "message": "Hi Gy√∂rgy, are you still interested in merging this patch? I\u0027m OK with the changes in defaults.mk, but I don\u0027t think that the rest is necessary, since we don\u0027t want to add more responsibilities to the project.",
      "revId": "8ff5cedd908bbdf4fbff03f07a20a1a59a61de2a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7ea66e6a_ecf56935",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000018
      },
      "writtenOn": "2022-12-05T17:33:05Z",
      "side": 1,
      "message": "Hi Juan, the new fix makes this change obsolete, hence I abandon this. If there are issues with your fix, I will start a new conversation or push a new patch in the future.\n\nI leave it to TF-A maintainers if default option hanging strategy is to be changed or not. From my side the need for that has been eliminated by the backwards compatibility change you made.",
      "parentUuid": "592e7b56_aaae9c01",
      "revId": "8ff5cedd908bbdf4fbff03f07a20a1a59a61de2a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bbb90400_cfc79895",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000018
      },
      "writtenOn": "2022-12-05T17:34:28Z",
      "side": 1,
      "message": "Thanks everyone for looking into this! üòÄüëç",
      "revId": "8ff5cedd908bbdf4fbff03f07a20a1a59a61de2a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4444a2a4_c5b01056",
        "filename": "Makefile",
        "patchSetId": 1
      },
      "lineNbr": 1448,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2022-09-21T11:44:20Z",
      "side": 1,
      "message": "Hi Gy√∂rgy,\nCouldn\u0027t we have that protected by a dedicated flag?\nWe could have openssl somewhere else than /usr, but do not want to rebuild it.",
      "revId": "8ff5cedd908bbdf4fbff03f07a20a1a59a61de2a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa26c884_3d9e023e",
        "filename": "Makefile",
        "patchSetId": 1
      },
      "lineNbr": 1448,
      "author": {
        "id": 1000018
      },
      "writtenOn": "2022-09-21T12:58:35Z",
      "side": 1,
      "message": "Good point! But before starting to fix, I think we shall take a step back.\nLet me drop an email to the mailing list to include wider audience.",
      "parentUuid": "4444a2a4_c5b01056",
      "revId": "8ff5cedd908bbdf4fbff03f07a20a1a59a61de2a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "692fd04c_6d5412e5",
        "filename": "Makefile",
        "patchSetId": 1
      },
      "lineNbr": 1448,
      "author": {
        "id": 1000750
      },
      "writtenOn": "2022-09-27T21:03:30Z",
      "side": 1,
      "message": "Hi Gy√∂rgy, \n\nI think that the best way to decide whether to override OPENSSL_DIR is by checking if OpenSSL 3.0 is installed in the system (e.g.: by checking the result of command \u0027openssl version\u0027)",
      "parentUuid": "aa26c884_3d9e023e",
      "revId": "8ff5cedd908bbdf4fbff03f07a20a1a59a61de2a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb4b54d6_411bfd86",
        "filename": "Makefile",
        "patchSetId": 1
      },
      "lineNbr": 1448,
      "author": {
        "id": 1000018
      },
      "writtenOn": "2022-09-28T06:09:06Z",
      "side": 1,
      "message": "Hi,\n\ngood idea, but I do have some concerns. Usually makefiles do not implement system discovery and instead use static configuration. Discovery is usually implemented in a higher layer like autoconf (or cmake). Of course we can go our own ways, but aligning to well established patterns might make maintenance easier by avoiding surprises. Moreover static configuration adapts to the the \"KISS\" principle better. \n\nFor me Yanns suggestion to use static configuration but avoid mixing the \"location of openssl\" with the \"please build openssl\" setting seems to be a better choice. Only my two cent\u0027s tough.",
      "parentUuid": "692fd04c_6d5412e5",
      "revId": "8ff5cedd908bbdf4fbff03f07a20a1a59a61de2a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59b7318c_3a2d6cbb",
        "filename": "Makefile",
        "patchSetId": 1
      },
      "lineNbr": 1448,
      "author": {
        "id": 1000750
      },
      "writtenOn": "2022-10-27T16:11:24Z",
      "side": 1,
      "message": "Adding to this conversation, I implemented a patch that adds backwards compatibility for v1.x. The OpenSSL version is checked for the package selected and then the corresponding API (v3.0 or v1.x) is selected accordingly using a macro. Here\u0027s the link: https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/17455",
      "parentUuid": "cb4b54d6_411bfd86",
      "revId": "8ff5cedd908bbdf4fbff03f07a20a1a59a61de2a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5f9cc6aa_d160fdd2",
        "filename": "Makefile",
        "patchSetId": 1
      },
      "lineNbr": 1454,
      "author": {
        "id": 1000018
      },
      "writtenOn": "2022-09-21T10:01:34Z",
      "side": 1,
      "message": "\"configure\" uses the CROSS_COMPILE variable from the environment. Unset it to avoid configure discovering a cross-compilation scenario while that is not what we need.",
      "range": {
        "startLine": 1454,
        "startChar": 24,
        "endLine": 1454,
        "endChar": 44
      },
      "revId": "8ff5cedd908bbdf4fbff03f07a20a1a59a61de2a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b46ff85_bbd62b37",
        "filename": "Makefile",
        "patchSetId": 1
      },
      "lineNbr": 1476,
      "author": {
        "id": 1000018
      },
      "writtenOn": "2022-09-21T10:01:34Z",
      "side": 1,
      "message": "TF-A build-flow has a lot of steps depending on openssl. Either on the .so file or on the openssl binary. It is very hard to come up with a robust dependency for all use-cases. E.g. if an openssl call is added to a make macro any target the macro is used from shall depend on the openssl target. Although this change works as-is for the FVP platform, it implements a wrong design.\n\nEither some generic target executed early in the build flow shall depend on the openssl target, or a new target for this \"early todo\" shall be added.",
      "revId": "8ff5cedd908bbdf4fbff03f07a20a1a59a61de2a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79855552_48a89eb2",
        "filename": "make_helpers/defaults.mk",
        "patchSetId": 1
      },
      "lineNbr": 423,
      "author": {
        "id": 1000018
      },
      "writtenOn": "2022-09-21T10:01:34Z",
      "side": 1,
      "message": "Allow specifying build environment specific variable from the environment. Without this OPSSL_DIR needs to be passed to TF-A as a parameter, which needs special treatment in upper layers (yocto recipe of top level makefile). Either the upper layer needs to implement taking over environment variable value for this parameter, or will need file modification. \n\nHow this works?\nUsing :\u003d will override environment variable values. ?\u003d allows setting the value from the environment.\n\nNotes:\n1. There are high chances more (or even all) variable assignments in this file shall be changed. That would perhaps require a dedicated PR.\n2. This modifies the interface of the TF-A build system and may cause side effects. (e.g. risk of environment variable name collision).",
      "revId": "8ff5cedd908bbdf4fbff03f07a20a1a59a61de2a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e8b04b2_08bd173d",
        "filename": "make_helpers/defaults.mk",
        "patchSetId": 1
      },
      "lineNbr": 423,
      "author": {
        "id": 1000750
      },
      "writtenOn": "2022-10-26T15:30:54Z",
      "side": 1,
      "message": "Hi Gy√∂rgy, I guess that setting OPENSSL_DIR inside a Makefile (other that assigning a default value) or by running \"make OPENSSL_DIR\u003d... \u003coptions\u003e \u003ctargets\u003e\" will still have the priority with respect to an environment variable. Am I right?",
      "parentUuid": "79855552_48a89eb2",
      "revId": "8ff5cedd908bbdf4fbff03f07a20a1a59a61de2a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0425d9fe_8bc23b36",
        "filename": "make_helpers/defaults.mk",
        "patchSetId": 1
      },
      "lineNbr": 423,
      "author": {
        "id": 1000018
      },
      "writtenOn": "2022-10-27T07:20:08Z",
      "side": 1,
      "message": "In short this is how make works (see docs here [1]):\n  - make will convert all environment variables to make variables.\n  - when using :\u003d or \u003d in a makefile, this will define a make variable and override environment variables\n  - ?\u003d can be used to avoid overriding values taken over from the environment\n  - command line params (e.g. variable\u003dvalue) will override the variable values set with the above methods.\n  - makefile can use the override directive to override any value set with the methods above. But IHMO this is not used in TF-A makefiles.\n\nTo answer your question, yes, the command line parameter has the highest precedence (as TF-A makefiles do not use the override directive, and assuming you are not running make with -e).\nThe biggest risk IMHO is name collision when using ?\u003d. If anything in the build environment uses an environment variable with the same name as a TF-A makefile variable set with ?\u003d, there is a collision. The same environment variable will be used for two different purposes, which will not work. To be on the safe side, the best might be to use a project specific prefix for such variables (e.g. CFGTFA_ for this project).\n\n1: https://ftp.gnu.org/old-gnu/Manuals/make-3.79.1/html_chapter/make_6.html#SEC63",
      "parentUuid": "7e8b04b2_08bd173d",
      "revId": "8ff5cedd908bbdf4fbff03f07a20a1a59a61de2a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b1ee7f2_86aa57e1",
        "filename": "make_helpers/defaults.mk",
        "patchSetId": 1
      },
      "lineNbr": 423,
      "author": {
        "id": 1000750
      },
      "writtenOn": "2022-10-27T16:11:24Z",
      "side": 1,
      "message": "OK. I think this is a good idea then.",
      "parentUuid": "0425d9fe_8bc23b36",
      "revId": "8ff5cedd908bbdf4fbff03f07a20a1a59a61de2a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}