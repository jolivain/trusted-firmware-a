{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "13897415_06732e14",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2023-04-25T20:27:58Z",
      "side": 1,
      "message": "spmd\nhttps://git.trustedfirmware.org/TF-A/trusted-firmware-a.git/tree/changelog.yaml#n649",
      "range": {
        "startLine": 7,
        "startChar": 5,
        "endLine": 7,
        "endChar": 13
      },
      "revId": "f10fce9a6ee2b5ebc13e5e0ec199f1a9446524de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ad56fc2_85d7a077",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2023-04-25T20:27:58Z",
      "side": 1,
      "message": "nitpick: since SPMD is strictly a EL3 component, can we simplify the name to\nENABLE_SPMD_LSP",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 14,
        "endChar": 18
      },
      "revId": "f10fce9a6ee2b5ebc13e5e0ec199f1a9446524de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74e52d26_ccf883af",
        "filename": "Makefile",
        "patchSetId": 1
      },
      "lineNbr": 1144,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2023-05-09T14:11:42Z",
      "side": 1,
      "message": "Can you add a default value (e.g. ENABLE_SPMD_EL3_LP\u003d0) in make_helpers/defaults.mk ?",
      "range": {
        "startLine": 1144,
        "startChar": 8,
        "endLine": 1144,
        "endChar": 26
      },
      "revId": "f10fce9a6ee2b5ebc13e5e0ec199f1a9446524de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a733f16f_bab664ac",
        "filename": "include/common/bl_common.h",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2023-04-25T20:27:58Z",
      "side": 1,
      "message": "nitpick:\n__SPMD_LSP_DESCS_START__",
      "range": {
        "startLine": 89,
        "startChar": 8,
        "endLine": 89,
        "endChar": 35
      },
      "revId": "f10fce9a6ee2b5ebc13e5e0ec199f1a9446524de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "86861578_e4f339d3",
        "filename": "include/common/bl_common.ld.h",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2023-05-09T14:11:42Z",
      "side": 1,
      "message": "Should this be conditioned by SPD\u003dspmd \u0026\u0026 SPMD_SPM_AT_SEL1\u003d\u003d1 ?\n\nSPMD_SPM_AT_SEL1\u003d\u003d0 could be covered if we think SPMD LSPs might exist in context e.g. of OP-TEE SPMC ?..",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 52,
        "endChar": 22
      },
      "revId": "f10fce9a6ee2b5ebc13e5e0ec199f1a9446524de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "871b00aa_092a56b8",
        "filename": "include/common/bl_common.ld.h",
        "patchSetId": 1
      },
      "lineNbr": 113,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2023-05-09T14:11:42Z",
      "side": 1,
      "message": "Should this be exclusive? Either EL3_LP_DESCS or EL3_SPMD_LP_DESCS can be defined but not both..",
      "range": {
        "startLine": 112,
        "startChar": 1,
        "endLine": 113,
        "endChar": 18
      },
      "revId": "f10fce9a6ee2b5ebc13e5e0ec199f1a9446524de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6699188_511c56d2",
        "filename": "include/services/el3_spmd_logical_sp.h",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2023-05-09T14:11:42Z",
      "side": 1,
      "message": "It\u0027s unfortunate to have forked include/services/el3_spmc_logical_sp.h\nAny chance to reconcile common structures/macros between EL3 SPMC LSPs and SPMD LSPs?",
      "revId": "f10fce9a6ee2b5ebc13e5e0ec199f1a9446524de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a40edf1_4ba530d4",
        "filename": "include/services/el3_spmd_logical_sp.h",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2023-05-09T14:11:42Z",
      "side": 1,
      "message": "Missing copyright header.",
      "revId": "f10fce9a6ee2b5ebc13e5e0ec199f1a9446524de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13a1aa9b_8ce3b3ef",
        "filename": "include/services/el3_spmd_logical_sp.h",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2023-04-25T20:27:58Z",
      "side": 1,
      "message": "do you think a CASSERT on the expected value of this would be helpful.",
      "range": {
        "startLine": 42,
        "startChar": 7,
        "endLine": 42,
        "endChar": 38
      },
      "revId": "f10fce9a6ee2b5ebc13e5e0ec199f1a9446524de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e28e7b19_b35e5771",
        "filename": "include/services/el3_spmd_logical_sp.h",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2023-04-25T20:27:58Z",
      "side": 1,
      "message": "Please capture the range of IDs in this comment.\n0xFF9C to 0XFFFE",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 44,
        "endChar": 48
      },
      "revId": "f10fce9a6ee2b5ebc13e5e0ec199f1a9446524de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "410672ba_e2b89637",
        "filename": "include/services/el3_spmd_logical_sp.h",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2023-04-25T20:27:58Z",
      "side": 1,
      "message": "Curious why 63 , not 64 possible LSPs",
      "revId": "f10fce9a6ee2b5ebc13e5e0ec199f1a9446524de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b022fe1c_67604bed",
        "filename": "include/services/el3_spmd_logical_sp.h",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2023-05-09T14:11:42Z",
      "side": 1,
      "message": "I believe this is because 0xffff is already reserved as invalid id?",
      "parentUuid": "410672ba_e2b89637",
      "revId": "f10fce9a6ee2b5ebc13e5e0ec199f1a9446524de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75b68dcd_1f8e6e4a",
        "filename": "services/std_svc/spmd/spmd_logical_sp.c",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2023-04-25T20:27:58Z",
      "side": 1,
      "message": "Would the following directory be better suited to hold the source code for a logical secure partition?\nservices/lsp/spmd_logical_sp.c",
      "revId": "f10fce9a6ee2b5ebc13e5e0ec199f1a9446524de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12bcd9ea_7f706f6b",
        "filename": "services/std_svc/spmd/spmd_logical_sp.c",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2023-05-09T14:11:42Z",
      "side": 1,
      "message": "What is the purpose?",
      "range": {
        "startLine": 16,
        "startChar": 12,
        "endLine": 16,
        "endChar": 29
      },
      "revId": "f10fce9a6ee2b5ebc13e5e0ec199f1a9446524de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55d85574_d05f6d39",
        "filename": "services/std_svc/spmd/spmd_logical_sp.c",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2023-05-09T14:11:42Z",
      "side": 1,
      "message": "Where is this used?",
      "range": {
        "startLine": 17,
        "startChar": 12,
        "endLine": 17,
        "endChar": 26
      },
      "revId": "f10fce9a6ee2b5ebc13e5e0ec199f1a9446524de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98209e53_6d2f0be7",
        "filename": "services/std_svc/spmd/spmd_logical_sp.c",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2023-05-09T14:11:42Z",
      "side": 1,
      "message": "This logic is similar to EL3 SPMC\u0027s get_el3_lp_array ..\nI sense using a unique way of defining LSPs is worth\nProvided EL3 SPMC managed LSPs and SPMD managed LSPs are exclusive...",
      "range": {
        "startLine": 23,
        "startChar": 32,
        "endLine": 23,
        "endChar": 53
      },
      "revId": "f10fce9a6ee2b5ebc13e5e0ec199f1a9446524de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4eaecc1d_8f480813",
        "filename": "services/std_svc/spmd/spmd_logical_sp.c",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2023-05-09T14:11:42Z",
      "side": 1,
      "message": "Unfortunate code duplication with el3_sp_desc_validate, again is there a way to commonalize?",
      "range": {
        "startLine": 33,
        "startChar": 11,
        "endLine": 33,
        "endChar": 36
      },
      "revId": "f10fce9a6ee2b5ebc13e5e0ec199f1a9446524de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a8c962a_7c555385",
        "filename": "services/std_svc/spmd/spmd_logical_sp.c",
        "patchSetId": 1
      },
      "lineNbr": 116,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2023-04-25T20:27:58Z",
      "side": 1,
      "message": "https://trustedfirmware-a.readthedocs.io/en/latest/process/coding-style.html#conditional-statement-bodies",
      "revId": "f10fce9a6ee2b5ebc13e5e0ec199f1a9446524de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15ff0a05_b1f19775",
        "filename": "services/std_svc/spmd/spmd_logical_sp.c",
        "patchSetId": 1
      },
      "lineNbr": 119,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2023-05-01T22:27:19Z",
      "side": 1,
      "message": "The function spmd_logical_sp_init() is invoked exactly in one spmd function(spmd_init), that too after spmd_logical_sp_set_spmc_inited(). Is there any chance \"is_spmc_inited\" is false?",
      "range": {
        "startLine": 119,
        "startChar": 5,
        "endLine": 119,
        "endChar": 28
      },
      "revId": "f10fce9a6ee2b5ebc13e5e0ec199f1a9446524de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "271a5844_96a70149",
        "filename": "services/std_svc/spmd/spmd_logical_sp.c",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2023-04-25T20:27:58Z",
      "side": 1,
      "message": "nitpick: verbose",
      "range": {
        "startLine": 131,
        "startChar": 1,
        "endLine": 131,
        "endChar": 5
      },
      "revId": "f10fce9a6ee2b5ebc13e5e0ec199f1a9446524de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "872d75f3_93c6fff1",
        "filename": "services/std_svc/spmd/spmd_logical_sp.c",
        "patchSetId": 1
      },
      "lineNbr": 135,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2023-04-25T20:27:58Z",
      "side": 1,
      "message": "nitpick:\nfailed to initialize",
      "range": {
        "startLine": 135,
        "startChar": 33,
        "endLine": 135,
        "endChar": 53
      },
      "revId": "f10fce9a6ee2b5ebc13e5e0ec199f1a9446524de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50f3a525_7984b770",
        "filename": "services/std_svc/spmd/spmd_logical_sp.c",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2023-05-01T22:27:19Z",
      "side": 1,
      "message": "https://trustedfirmware-a.readthedocs.io/en/latest/process/coding-style.html#conditional-statement-bodies",
      "revId": "f10fce9a6ee2b5ebc13e5e0ec199f1a9446524de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50235cbc_d02b54fd",
        "filename": "services/std_svc/spmd/spmd_logical_sp.c",
        "patchSetId": 1
      },
      "lineNbr": 152,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2023-04-25T20:27:58Z",
      "side": 1,
      "message": "please use initialized. At first glance, inited expanded to initiated in my brain.",
      "range": {
        "startLine": 152,
        "startChar": 30,
        "endLine": 152,
        "endChar": 36
      },
      "revId": "f10fce9a6ee2b5ebc13e5e0ec199f1a9446524de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbeb926a_c1160fed",
        "filename": "services/std_svc/spmd/spmd_logical_sp.c",
        "patchSetId": 1
      },
      "lineNbr": 159,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2023-04-25T20:27:58Z",
      "side": 1,
      "message": "this doesnt seem to be invoked/used anywhere",
      "range": {
        "startLine": 159,
        "startChar": 5,
        "endLine": 159,
        "endChar": 37
      },
      "revId": "f10fce9a6ee2b5ebc13e5e0ec199f1a9446524de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "86a78701_c6a6d32c",
        "filename": "services/std_svc/spmd/spmd_main.c",
        "patchSetId": 1
      },
      "lineNbr": 195,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2023-05-09T14:11:42Z",
      "side": 1,
      "message": "Why does this happen after the SPMC has been entered for init?\n\nI wonder that LSP init should happen at spmd_setup or spmd_spmc_init?",
      "range": {
        "startLine": 195,
        "startChar": 1,
        "endLine": 195,
        "endChar": 29
      },
      "revId": "f10fce9a6ee2b5ebc13e5e0ec199f1a9446524de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}