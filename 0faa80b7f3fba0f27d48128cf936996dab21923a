{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "cc71506a_067c5a4d",
        "filename": "include/arch/aarch32/arch.h",
        "patchSetId": 18
      },
      "lineNbr": 2,
      "author": {
        "id": 1000124
      },
      "writtenOn": "2024-02-23T20:55:14Z",
      "side": 1,
      "message": "2024",
      "range": {
        "startLine": 2,
        "startChar": 22,
        "endLine": 2,
        "endChar": 26
      },
      "revId": "0faa80b7f3fba0f27d48128cf936996dab21923a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "311dd332_78aea405",
        "filename": "include/arch/aarch32/arch.h",
        "patchSetId": 18
      },
      "lineNbr": 2,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2024-02-26T10:36:14Z",
      "side": 1,
      "message": "Since the patch originally became public in 2023, i am keeping it that way.",
      "parentUuid": "cc71506a_067c5a4d",
      "range": {
        "startLine": 2,
        "startChar": 22,
        "endLine": 2,
        "endChar": 26
      },
      "revId": "0faa80b7f3fba0f27d48128cf936996dab21923a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "466389f1_35acab0b",
        "filename": "include/arch/aarch32/arch_features.h",
        "patchSetId": 18
      },
      "lineNbr": 131,
      "author": {
        "id": 1000660
      },
      "writtenOn": "2024-02-27T12:08:14Z",
      "side": 1,
      "message": "FEAT_PAN is already converted/migrated to ENABLE_FEAT_XXX mechanism, to cover three states(0,1,2).\n[ https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/19277] \nWhy aren\u0027t we using is_feat_pan_supported( ) api instead in the above patches, as it does the same thing?",
      "revId": "0faa80b7f3fba0f27d48128cf936996dab21923a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a1969904_4b25dc9b",
        "filename": "include/arch/aarch32/arch_features.h",
        "patchSetId": 18
      },
      "lineNbr": 131,
      "author": {
        "id": 1000660
      },
      "writtenOn": "2024-02-27T14:41:55Z",
      "side": 1,
      "message": "Had an offline discussion.\nFor future reference: \n\nWe have two cases here: \nCase 1)\nWhen a feature needs enablement from EL3 ( USE -\u003e is_feat_xxx_supported( ) api), to read the ID register, and then set the bits necessary for feature enablement. Also the feature flag plays the part here. We use is_feat_xxx_supported( ) api in scenarios, wherein user has to explicitly set the build flag for feature enablement in EL3. ( Eg: ENABLE_FEAT_SME, ENABLE_FEAT_PAN etc.)\n\n\nCase 2)\nWhen we need to use is_feat_xxx_present( ).\nThis API need to be used in scenarios, wherein we are not dependent on feature flags, nor enabling any feature, rather more interested in independently reading ID_registers to verify the presence on feature. Eg: ( Undef injection ) \n\nNOTE: Even through is_feat_xxx_supported( ) \u0026 is_feat_xxx_present( ), ultimately read the ID_register, there is subtle difference in the way they are suppose to be used.\n\nWhen we are in the path of feature enablement iN el3, here we use is_feat_xxx_supported( ),\nin other cases, is_feat_xxx_present( ) is needed.",
      "parentUuid": "466389f1_35acab0b",
      "revId": "0faa80b7f3fba0f27d48128cf936996dab21923a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c2fc368_9003cf8e",
        "filename": "include/arch/aarch32/arch_helpers.h",
        "patchSetId": 18
      },
      "lineNbr": 3,
      "author": {
        "id": 1000124
      },
      "writtenOn": "2024-02-23T20:55:14Z",
      "side": 1,
      "message": "2024",
      "range": {
        "startLine": 3,
        "startChar": 31,
        "endLine": 3,
        "endChar": 35
      },
      "revId": "0faa80b7f3fba0f27d48128cf936996dab21923a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1d1fc317_a4c0371e",
        "filename": "include/arch/aarch32/arch_helpers.h",
        "patchSetId": 18
      },
      "lineNbr": 3,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2024-02-26T10:36:14Z",
      "side": 1,
      "message": "ditto",
      "parentUuid": "5c2fc368_9003cf8e",
      "range": {
        "startLine": 3,
        "startChar": 31,
        "endLine": 3,
        "endChar": 35
      },
      "revId": "0faa80b7f3fba0f27d48128cf936996dab21923a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "945ab29a_cd543afc",
        "filename": "include/arch/aarch64/arch.h",
        "patchSetId": 18
      },
      "lineNbr": 2,
      "author": {
        "id": 1000124
      },
      "writtenOn": "2024-02-23T20:55:14Z",
      "side": 1,
      "message": "2024",
      "range": {
        "startLine": 2,
        "startChar": 22,
        "endLine": 2,
        "endChar": 26
      },
      "revId": "0faa80b7f3fba0f27d48128cf936996dab21923a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8d67a25b_15b60bf3",
        "filename": "include/arch/aarch64/arch.h",
        "patchSetId": 18
      },
      "lineNbr": 2,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2024-02-26T10:36:14Z",
      "side": 1,
      "message": "ditto",
      "parentUuid": "945ab29a_cd543afc",
      "range": {
        "startLine": 2,
        "startChar": 22,
        "endLine": 2,
        "endChar": 26
      },
      "revId": "0faa80b7f3fba0f27d48128cf936996dab21923a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b83df65_39f0b663",
        "filename": "include/arch/aarch64/arch.h",
        "patchSetId": 18
      },
      "lineNbr": 781,
      "author": {
        "id": 1000660
      },
      "writtenOn": "2024-02-27T12:08:14Z",
      "side": 1,
      "message": "tab instead of space.",
      "revId": "0faa80b7f3fba0f27d48128cf936996dab21923a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9169c827_463211cb",
        "filename": "include/arch/aarch64/arch.h",
        "patchSetId": 18
      },
      "lineNbr": 781,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2024-02-27T14:59:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4b83df65_39f0b663",
      "revId": "0faa80b7f3fba0f27d48128cf936996dab21923a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3eb7fc9_0f75d400",
        "filename": "include/arch/aarch64/arch.h",
        "patchSetId": 18
      },
      "lineNbr": 783,
      "author": {
        "id": 1000660
      },
      "writtenOn": "2024-02-27T12:08:14Z",
      "side": 1,
      "message": "same here. tab please",
      "range": {
        "startLine": 783,
        "startChar": 31,
        "endLine": 783,
        "endChar": 36
      },
      "revId": "0faa80b7f3fba0f27d48128cf936996dab21923a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1c3670f1_cda804bd",
        "filename": "include/arch/aarch64/arch.h",
        "patchSetId": 18
      },
      "lineNbr": 783,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2024-02-27T14:59:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c3eb7fc9_0f75d400",
      "range": {
        "startLine": 783,
        "startChar": 31,
        "endLine": 783,
        "endChar": 36
      },
      "revId": "0faa80b7f3fba0f27d48128cf936996dab21923a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa36d1a8_7daec597",
        "filename": "include/arch/aarch64/arch.h",
        "patchSetId": 18
      },
      "lineNbr": 1443,
      "author": {
        "id": 1000660
      },
      "writtenOn": "2024-02-27T12:08:14Z",
      "side": 1,
      "message": "same here: tab",
      "revId": "0faa80b7f3fba0f27d48128cf936996dab21923a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5cf14a4d_9c9914c4",
        "filename": "include/arch/aarch64/arch.h",
        "patchSetId": 18
      },
      "lineNbr": 1443,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2024-02-27T14:59:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fa36d1a8_7daec597",
      "revId": "0faa80b7f3fba0f27d48128cf936996dab21923a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5445c41_749c5d16",
        "filename": "include/arch/aarch64/arch_helpers.h",
        "patchSetId": 18
      },
      "lineNbr": 2,
      "author": {
        "id": 1000124
      },
      "writtenOn": "2024-02-23T20:55:14Z",
      "side": 1,
      "message": "2024",
      "range": {
        "startLine": 2,
        "startChar": 22,
        "endLine": 2,
        "endChar": 26
      },
      "revId": "0faa80b7f3fba0f27d48128cf936996dab21923a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "30f4ce84_638c07ce",
        "filename": "include/arch/aarch64/arch_helpers.h",
        "patchSetId": 18
      },
      "lineNbr": 2,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2024-02-26T10:36:14Z",
      "side": 1,
      "message": "ditto",
      "parentUuid": "c5445c41_749c5d16",
      "range": {
        "startLine": 2,
        "startChar": 22,
        "endLine": 2,
        "endChar": 26
      },
      "revId": "0faa80b7f3fba0f27d48128cf936996dab21923a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}