{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "39e5da43_b5c3024b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000550
      },
      "writtenOn": "2021-04-21T12:39:03Z",
      "side": 1,
      "message": "Hi Manish,",
      "revId": "8c65c90f646157059c69ad6d92998db5456a2048",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fc7b5500_80184700",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000550
      },
      "writtenOn": "2021-04-21T13:46:21Z",
      "side": 1,
      "message": "Manish,",
      "revId": "8c65c90f646157059c69ad6d92998db5456a2048",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ffc3e356_bfdc56f0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000550
      },
      "writtenOn": "2021-04-22T11:27:24Z",
      "side": 1,
      "message": "Hi,",
      "revId": "8c65c90f646157059c69ad6d92998db5456a2048",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2ff6626f_c37442ab",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2021-07-12T10:46:19Z",
      "side": 1,
      "message": "@Manish/Stas: If you guys agree please abondon this patch",
      "revId": "8c65c90f646157059c69ad6d92998db5456a2048",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02ab84e4_a393bf7c",
        "filename": "plat/arm/board/fvp/fvp_bl1_setup.c",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2021-04-21T11:21:41Z",
      "side": 1,
      "message": "This doesn\u0027t look correct as it breaks firmware update when we don\u0027t use semihosting.\n\nIIUC, semihosting not uses FIP, hence fwu_needed check always returns true in case of semihosting, and hence you added this change.\n\nFor time being, can you avoid doing fwu_needed check in case of semihosting only?",
      "range": {
        "startLine": 128,
        "startChar": 5,
        "endLine": 128,
        "endChar": 28
      },
      "revId": "8c65c90f646157059c69ad6d92998db5456a2048",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fabc8067_3ff3eec7",
        "filename": "plat/arm/board/fvp/fvp_bl1_setup.c",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 1000550
      },
      "writtenOn": "2021-04-21T12:39:03Z",
      "side": 1,
      "message": "I am not sure how to do that\neasily.\nIn plat/arm/board/fvp/fvp_err.c:26\nthe FIP erase procedure happens.\nIt is followed by reboot and by FWU.\nFWU is triggered right at the start,\nif it finds FIP erased.\nTo implement your suggestion, perhaps\nwe need to somehow distinguish the\n\"FIP was found bad, erased and rebooted\"\nfrom \"there was no FIP at all, the\nboot was supposed to happen from\nsemihosting\".\n\nIs FWU on FVP needed at all?\nIf FIP is missing on FVP, then it\nmeans that it wasn\u0027t loaded with\n-C bp.flashloader0.fname\u003d$FIP\nWhich IMHO means a desire to boot\nfrom semihosting.\n\nPlease clarify how exactly you see\nthe check for the semihosting-only\ncase. AFAICS there is no such parameter\nlike \"semihosting-only boot\" on FVP,\nor something else that can allow to\nimplement such check in some simple\nway.",
      "parentUuid": "02ab84e4_a393bf7c",
      "range": {
        "startLine": 128,
        "startChar": 5,
        "endLine": 128,
        "endChar": 28
      },
      "revId": "8c65c90f646157059c69ad6d92998db5456a2048",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8adf2dc7_c307e98c",
        "filename": "plat/arm/board/fvp/fvp_bl1_setup.c",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2021-04-21T13:27:50Z",
      "side": 1,
      "message": "\u003e I am not sure how to do that\n\u003e easily.\n\u003e In plat/arm/board/fvp/fvp_err.c:26\n\u003e the FIP erase procedure happens.\n\u003e It is followed by reboot and by FWU.\n\u003e FWU is triggered right at the start,\n\u003e if it finds FIP erased.\n\u003e To implement your suggestion, perhaps\n\u003e we need to somehow distinguish the\n\u003e \"FIP was found bad, erased and rebooted\"\n\u003e from \"there was no FIP at all, the\n\u003e boot was supposed to happen from\n\u003e semihosting\".\n\nYes, we need a support to distinguish between\n1. No FIP 2. Bad/Erased FIP case.\nUnfortunately, I don\u0027t have any suggestion, how to \ndistinguish between these 2 cases. Let me get back\nto you on this. \n\n\u003e \n\u003e Is FWU on FVP needed at all?\n\nYes, we need FWU on FIP. There is a test case to update\nthe flash with a backup (proper) FIP image when FIP gets\ncorrupted. If we add this implementation, then we never \nable to execute that particular test path for FVP.\n\n\u003e If FIP is missing on FVP, then it\n\u003e means that it wasn\u0027t loaded with\n\u003e -C bp.flashloader0.fname\u003d$FIP\n\u003e Which IMHO means a desire to boot\n\u003e from semihosting.\n\nIdeally, yes but we have a mechanism to recover FIP without\nusing semi-hosting as explained above.\n\n\u003e \n\u003e Please clarify how exactly you see\n\u003e the check for the semihosting-only\n\u003e case. AFAICS there is no such parameter\n\u003e like \"semihosting-only boot\" on FVP,\n\u003e or something else that can allow to\n\u003e implement such check in some simple\n\u003e way.\n\nWe don\u0027t have any simple check as of now. \nThinking loud, may be we need to guard \u0027register_io_dev_sh\u0027 \nwith compile time check, and also relative APIs of \nsemihosting. Update the \u0027plat_arm_bl1_fwu_needed\u0027 \nfunction present in \u0027plat/arm/common/arm_bl1_setup.c\u0027 to \nreturn 0 always in case of semihosting defined.\n\nAdding Soby and Sandrine for more suggestion.",
      "parentUuid": "fabc8067_3ff3eec7",
      "range": {
        "startLine": 128,
        "startChar": 5,
        "endLine": 128,
        "endChar": 28
      },
      "revId": "8c65c90f646157059c69ad6d92998db5456a2048",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2625f31e_4d0ff6c2",
        "filename": "plat/arm/board/fvp/fvp_bl1_setup.c",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 1000550
      },
      "writtenOn": "2021-04-21T13:46:21Z",
      "side": 1,
      "message": "\u003e There is a test case to update\n\u003e the flash with a backup (proper) FIP image when FIP gets\n\u003e corrupted.\n\nLet me suggest a simple hack then.\nWe need to check the integrity of\na backup FIP, along with checking\nthe integrity of a primary one.\nRun the FWU only if the backup one\nis OK.\nHmm, this can even be made generic,\nnot specific to FVP. Can it?\n(but I am not the right person to\nget that implemanted :)",
      "parentUuid": "8adf2dc7_c307e98c",
      "range": {
        "startLine": 128,
        "startChar": 5,
        "endLine": 128,
        "endChar": 28
      },
      "revId": "8c65c90f646157059c69ad6d92998db5456a2048",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48f2e604_a913fb42",
        "filename": "plat/arm/board/fvp/fvp_bl1_setup.c",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2021-04-21T14:36:11Z",
      "side": 1,
      "message": "Firmware update is done by NS-BL1U and NS-BL2U components running at normal world. so, only normal world aware about the back-up image. it copies back-up image to primary FIP (to recover).\nBL1 and BL2 (secure side) always check primary FIP, and do basic sanity of FIP and authentication for boot success and in boot flow, we do not check the integrity of back-up FIP.",
      "parentUuid": "2625f31e_4d0ff6c2",
      "range": {
        "startLine": 128,
        "startChar": 5,
        "endLine": 128,
        "endChar": 28
      },
      "revId": "8c65c90f646157059c69ad6d92998db5456a2048",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aabcd629_8a603b91",
        "filename": "plat/arm/board/fvp/fvp_bl1_setup.c",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2021-04-22T06:06:48Z",
      "side": 1,
      "message": "Hi Stas,\n\nIs it possible to make use of \u0027open_semihosting\u0027 call to check if the file exist on semi-hosting? then that can be used to detect FWU.\n\nThen we need to update check in \u0027plat_arm_bl1_fwu_needed\u0027 as below:\n1. FIP is bad/erased or No FIP  -\u003e this check is already exist in code\n2. \u0026\u0026 No semihosting file exist\nto trigger FWU process.\n\nIs that make sense?",
      "parentUuid": "48f2e604_a913fb42",
      "range": {
        "startLine": 128,
        "startChar": 5,
        "endLine": 128,
        "endChar": 28
      },
      "revId": "8c65c90f646157059c69ad6d92998db5456a2048",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d05024e_d9db0b9d",
        "filename": "plat/arm/board/fvp/fvp_bl1_setup.c",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 1000550
      },
      "writtenOn": "2021-04-22T11:27:24Z",
      "side": 1,
      "message": "Unfortunately the semihosting boot\ninvolves many files. You can see the\nfull list in plat/arm/board/fvp/fvp_io_storage.c.\nSo if we check, say, just 1 arbitrary\nfile from many, and it exists, then\nwe can conclude that the semihosting\nboot is attempting. But if some other\nfile is then found missing, then the\nFIP erase+reboot will happen, and on\nthe boot up, we will again see our\n\"probe\" file in place, and will not\ndo FWU.\nOf course you can check all boot\nfiles in advance... But I don\u0027t think\nthis is a good solution.",
      "parentUuid": "aabcd629_8a603b91",
      "range": {
        "startLine": 128,
        "startChar": 5,
        "endLine": 128,
        "endChar": 28
      },
      "revId": "8c65c90f646157059c69ad6d92998db5456a2048",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d5aaaf2_40e08aef",
        "filename": "plat/arm/board/fvp/fvp_bl1_setup.c",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2021-04-22T11:49:56Z",
      "side": 1,
      "message": "In case of FIP boot flow, if expected files are missing in FIP then that triggers FWU action.\nsimilarly, if expected files are missing for semi-hosting, then what is expected action code need to take here?",
      "parentUuid": "8d05024e_d9db0b9d",
      "range": {
        "startLine": 128,
        "startChar": 5,
        "endLine": 128,
        "endChar": 28
      },
      "revId": "8c65c90f646157059c69ad6d92998db5456a2048",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "236fc979_74a8bb36",
        "filename": "plat/arm/board/fvp/fvp_bl1_setup.c",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 1000550
      },
      "writtenOn": "2021-04-22T12:08:49Z",
      "side": 1,
      "message": "\u003e In case of FIP boot flow, if expected files are missing in FIP then that\n\u003e triggers FWU action.\n\n... or just the FIP itself is\nmissing. Which is a biggest problem.\nBut I think that comes only from\nthe fact that FWU is preceded with\nFIP erasure and reboot.\nIf we could avoid that, things would\nsuddenly become very simple.\n\n\u003e similarly, if expected files are missing for semi-hosting,\n\u003e then what is expected action code need to take here?\n\nI think FWU procedure should\nstart. But instead, you do FIP\nerasure+reboot.\n\nWould it be possible to start\nFWU in-place, when just the file\nis found missing?\nIf you avoid these erase+reboot\nsteps, everything will become trivial.",
      "parentUuid": "9d5aaaf2_40e08aef",
      "range": {
        "startLine": 128,
        "startChar": 5,
        "endLine": 128,
        "endChar": 28
      },
      "revId": "8c65c90f646157059c69ad6d92998db5456a2048",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24cc5a72_8d5840df",
        "filename": "plat/arm/board/fvp/fvp_bl1_setup.c",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 1000550
      },
      "writtenOn": "2021-04-22T12:17:28Z",
      "side": 1,
      "message": "\u003e similarly, if expected files are missing for semi-hosting,\n\u003e then what is expected action code need to take here?\n\nTo answer your question more\nprecisely. There is no such thing\nas \"semihosting-only\" boot, it seems.\nAny file is first searched in a\nprimary store (FIP), and then goes\nto alternatives (whichever the platform\nprovides).\nSo its not as simple as to say\n\"if semihosting file is missing,\nwe execute semihosting exit\".\nWho knows what mix of boot medias\ncan some user come up with...",
      "parentUuid": "236fc979_74a8bb36",
      "range": {
        "startLine": 128,
        "startChar": 5,
        "endLine": 128,
        "endChar": 28
      },
      "revId": "8c65c90f646157059c69ad6d92998db5456a2048",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "626d77f4_f440ff0a",
        "filename": "plat/arm/board/fvp/fvp_bl1_setup.c",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 1000550
      },
      "writtenOn": "2021-04-22T12:44:56Z",
      "side": 1,
      "message": "Another point here is that\nany file can be missing on\nsemihosting. The file that\nis missing on FIP, will be\nsearched on semihosting just\nbecause the FVP platform provides\nit as an alternative media.\nBut there may be no files at\nall, if the semihosting boot\nwas not intended.\nSo it seems very unlikely that\nyou can use the missing file\non semihosting as an indication\nof anything at all.\n\nI really think that the solution\nmay be somewhere in getting rid\nof FIP erase+reboot steps.\nIn that case you will be able\nto use as an indication the\ncondition when the file is missing\nin both FIP, semihosting and\nwhatever else file-providers were\nregistered by the platform or by\nspd (yes, we register the file\nproviders even in spd).",
      "parentUuid": "24cc5a72_8d5840df",
      "range": {
        "startLine": 128,
        "startChar": 5,
        "endLine": 128,
        "endChar": 28
      },
      "revId": "8c65c90f646157059c69ad6d92998db5456a2048",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "56fd3ca5_c9bbc4dc",
        "filename": "plat/arm/board/fvp/fvp_bl1_setup.c",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2021-06-15T17:59:09Z",
      "side": 1,
      "message": "Hi Stas,\n\nfyi, I pushed a patch[1] to remove the missing FIP check for FWU detection in the FVP platform. This patch is in review now. Please have a look. \nIf we agree on patch [1], then we don\u0027t need this patch.\n\n[1]: https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/10286",
      "parentUuid": "626d77f4_f440ff0a",
      "range": {
        "startLine": 128,
        "startChar": 5,
        "endLine": 128,
        "endChar": 28
      },
      "revId": "8c65c90f646157059c69ad6d92998db5456a2048",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}