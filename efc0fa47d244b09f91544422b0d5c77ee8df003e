{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "211331bd_879dbc39",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 2
      },
      "lineNbr": 233,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2022-09-02T17:59:48Z",
      "side": 1,
      "message": "ICC_SRE_EL2 is not banked by security state. it is context switched when moving between worlds. Is there some place in the ARM ARM or GIC Spec that says this is required or is this behavior from experimental results?\nIn general it would be good to quote arm arm or gic spec if this is required.",
      "range": {
        "startLine": 233,
        "startChar": 42,
        "endLine": 233,
        "endChar": 54
      },
      "revId": "efc0fa47d244b09f91544422b0d5c77ee8df003e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80674736_0125e7ef",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 2
      },
      "lineNbr": 233,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2022-09-02T18:54:53Z",
      "side": 1,
      "message": "Correct. This patch gets the code in line with the gicv3 driver where the register is programmed earlier. The original code fails on one NVIDIA platform. This patch fixes that issue.",
      "parentUuid": "211331bd_879dbc39",
      "range": {
        "startLine": 233,
        "startChar": 42,
        "endLine": 233,
        "endChar": 54
      },
      "revId": "efc0fa47d244b09f91544422b0d5c77ee8df003e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7fd3243e_fd8a5e2e",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 2
      },
      "lineNbr": 233,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2022-09-12T08:40:24Z",
      "side": 1,
      "message": "We can check with Soby, but I believe latest context mgt lib. design as a rule to forbid direct PE register writes. If you look at this function only context registers are altered, not ones of the currently running PE.\nCan you check why below code is not already doing what\u0027s expected?\nhttps://git.trustedfirmware.org/TF-A/trusted-firmware-a.git/tree/drivers/arm/gic/v3/gicv3_main.c#n303",
      "parentUuid": "80674736_0125e7ef",
      "range": {
        "startLine": 233,
        "startChar": 42,
        "endLine": 233,
        "endChar": 54
      },
      "revId": "efc0fa47d244b09f91544422b0d5c77ee8df003e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d48b1a9c_919dbc92",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 2
      },
      "lineNbr": 233,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2022-09-12T09:03:30Z",
      "side": 1,
      "message": "Scratch that. I recall ICC_SRE_EL2 is not banked secure/non-secure but has a dependency to SCR_EL3.EEL2 which might have led to a regression on older platform?\n\nExtracts from Arm ARM:\n\nICC_SRE_EL2 read/write accesses:\n [...]\n elsif PSTATE.EL \u003d\u003d EL2 then\n [...]\n     return ICC_SRE_EL2;\n [...]\n elsif PSTATE.EL \u003d\u003d EL3 then\n     if !EL2Enabled() then\n         UNDEFINED;\n\nEL2Enabled()\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nReturns TRUE if:\n- NS EL2 present and SCR_EL3.NS\u003d1\n- NS EL2 present and IsSecureEL2Enabled()\n\n boolean EL2Enabled()\n     return HaveEL(EL2) \u0026\u0026 (!HaveEL(EL3) || SCR_EL3.NS \u003d\u003d \u00271\u0027 || IsSecureEL2Enabled());\n\n\n// IsSecureEL2Enabled()\n// \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n// Returns TRUE if Secure EL2 is enabled, FALSE otherwise.\n boolean IsSecureEL2Enabled()\n     if HaveEL(EL2) \u0026\u0026 HaveSecureEL2Ext() then\n         if HaveEL(EL3) then\n             if !ELUsingAArch32(EL3) \u0026\u0026 SCR_EL3.EEL2 \u003d\u003d \u00271\u0027 then\n                 return TRUE;\n             else\n                 return FALSE;\n         else\n             return IsSecure();\n     else\n         return FALSE;",
      "parentUuid": "7fd3243e_fd8a5e2e",
      "range": {
        "startLine": 233,
        "startChar": 42,
        "endLine": 233,
        "endChar": 54
      },
      "revId": "efc0fa47d244b09f91544422b0d5c77ee8df003e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}