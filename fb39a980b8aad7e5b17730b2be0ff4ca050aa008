{
  "comments": [
    {
      "key": {
        "uuid": "374e7a5e_26341a8e",
        "filename": "plat/rockchip/common/bl31_plat_setup.c",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 1000060
      },
      "writtenOn": "2019-04-24T05:39:41Z",
      "side": 1,
      "message": "Please implement this cleaner... this macro just says that the platform is using a custom linker script, it\u0027s not guaranteed that all future Rockchip platforms that make use of it will use the same custom sections in the same way.\n\nThere\u0027s already a rockchip_plat_mmu_el3() hook, you should put the MMU setup in there. For the copying, I\u0027d introduce a similar per-SoC hook (e.g. rockchip_soc_setup() or something like that) and call it from here.",
      "revId": "fb39a980b8aad7e5b17730b2be0ff4ca050aa008",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7dd1fee9_5f81b132",
        "filename": "plat/rockchip/common/bl31_plat_setup.c",
        "patchSetId": 1
      },
      "lineNbr": 135,
      "author": {
        "id": 1000060
      },
      "writtenOn": "2019-04-24T05:39:41Z",
      "side": 1,
      "message": "This is extremely hacky. Can\u0027t you just use define explicit symbols for the load addresses with e.g. LOADADDR(.pmusram) in the linker script and then use those?\n\nHowever, something is still wrong when you do that. When I objdump the image with your linker script changes, .incbin_sram and .text_sram get assigned the same LMA, even though they\u0027re both non-empty and marked LOAD in the ELF. If you objcopy it into a .bin the .incbin part is gone (as far as I can tell). Not quite sure why this happens, but you may fare better if you combine all the SRAM parts into a single section.",
      "revId": "fb39a980b8aad7e5b17730b2be0ff4ca050aa008",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75761479_bee6ff64",
        "filename": "plat/rockchip/rk3399/include/plat.post.ld.S",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1000060
      },
      "writtenOn": "2019-04-24T05:39:41Z",
      "side": 1,
      "message": "Why do you need this symbol? Why not just use SRAM_BASE in the code?",
      "revId": "fb39a980b8aad7e5b17730b2be0ff4ca050aa008",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5256ad1c_cdcf8f51",
        "filename": "plat/rockchip/rk3399/include/plat.post.ld.S",
        "patchSetId": 1
      },
      "lineNbr": 104,
      "author": {
        "id": 1000060
      },
      "writtenOn": "2019-04-24T05:39:41Z",
      "side": 1,
      "message": "It probably doesn\u0027t make a difference but I\u0027d put these inside the .pmusram section for consistency with the existing symbols (and also because in my experience, that reduces the chance of the linker doing something unexpected with them).",
      "revId": "fb39a980b8aad7e5b17730b2be0ff4ca050aa008",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    }
  ]
}