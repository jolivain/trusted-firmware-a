{
  "comments": [
    {
      "key": {
        "uuid": "7d47e714_3f9c176d",
        "filename": "make_helpers/build_macros.mk",
        "patchSetId": 3
      },
      "lineNbr": 459,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2019-04-26T08:32:00Z",
      "side": 1,
      "message": "If I try to compile using:\n\n make DISABLE_BIN_GENERATION\u003d0 bl1\n\n(or if I directly put the variable assignment in the platform makefile), it looks like the .bin file is not generated, which is a bit confusing. Now, I realise that the use case (as described in the commit message) is for platform makefiles to explicitly define this variable to *1* if they want to, and arguably defining the variable to 0 is perhaps a weird thing to do. But the fact that it\u0027s set to 1 hints that it is a boolean flag and so one might expect 0 to disable this.\n\nIf I am not mistaken, I think it behaves like this because the GNU make function \u0027if\u0027 considers the condition true as long as it expands to a non-empty string. In my example, it does expand to the string \"0\".\n\nPerhaps a better approach would be to use an ifeq statement, like so:\n\n ifeq ($(DISABLE_BIN_GENERATION),1)\n bl$(1): $(ELF) $(DUMP)\n else\n bl$(1): $(BIN) $(DUMP)\n endif\n\nUnfortunately it is less concise than your proposal, there might be better ways to write this.\n\nAlso, perhaps consider setting the variable to 0 by default in make_helpers/defaults.mk?\n\nFinally, regardless of how this gets implemented here, it would be great if you could add a short paragraph documenting this new build option in the user guide (see section \"Summary of build options\" [1]).\n\n[1] https://git.trustedfirmware.org/TF-A/trusted-firmware-a.git/about/docs/user-guide.rst#summary-of-build-options",
      "range": {
        "startLine": 459,
        "startChar": 8,
        "endLine": 459,
        "endChar": 53
      },
      "revId": "ff4b666bb16dc0aedee81b4f29793324b0a83ae6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    }
  ]
}