{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f3e42849_d6320161",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2022-04-20T14:41:12Z",
      "side": 1,
      "message": "This can be extrapolated to NS world. If EL2 is used, then EL1 regs don\u0027t need to be initialized.",
      "revId": "2c0aadd87dcfe1c70313dc82aa24138bd7b421c6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "55ac6eae_7bef402c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000219
      },
      "writtenOn": "2022-04-20T15:55:59Z",
      "side": 1,
      "message": "Would this also apply to ACTLR_EL1? That register is initialized to preserve the reset value.",
      "parentUuid": "f3e42849_d6320161",
      "revId": "2c0aadd87dcfe1c70313dc82aa24138bd7b421c6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "96cf9532_9d948a0a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2022-05-13T10:42:03Z",
      "side": 1,
      "message": "The patch can be progressed after resolution of comment. ",
      "revId": "2c0aadd87dcfe1c70313dc82aa24138bd7b421c6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8af7d353_80c164fd",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 2
      },
      "lineNbr": 143,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2022-04-19T16:40:40Z",
      "side": 1,
      "message": "nit: As of the current implementation, EL1 registers are set up unconditionally without considering this specific case i.e. SPMC running at S-EL2. Is this change indicative of the fact that EL1 registers are now managed by SPMC and that\u0027s why this setup of EL1 registers was avoided?  If yes, then it might be better to highlight the patch in which SPMC managed the EL1 registers at S-EL2 in the commit message.",
      "revId": "2c0aadd87dcfe1c70313dc82aa24138bd7b421c6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6894cd6d_4841d25e",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 2
      },
      "lineNbr": 143,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2022-05-13T09:32:37Z",
      "side": 1,
      "message": "S-El2 will need to initialize the S-EL1 regs before SP is run. So this init here is redundant.",
      "parentUuid": "8af7d353_80c164fd",
      "revId": "2c0aadd87dcfe1c70313dc82aa24138bd7b421c6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b4944376_a34f1f08",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 2
      },
      "lineNbr": 143,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2022-05-13T09:35:48Z",
      "side": 1,
      "message": "Ack, thanks!",
      "parentUuid": "6894cd6d_4841d25e",
      "revId": "2c0aadd87dcfe1c70313dc82aa24138bd7b421c6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a031503_5bf016fd",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 2
      },
      "lineNbr": 579,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2022-04-20T14:41:12Z",
      "side": 1,
      "message": "If CTX_INCLUDE_EL2_REGS is defined, all of the EL2 setting should be written to EL2 context. The direct write of reg should be only otherwise.\n\nalso perhaps these can be done setup_ns_context() and this function can just restore EL2 context.",
      "revId": "2c0aadd87dcfe1c70313dc82aa24138bd7b421c6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fbe1adf4_0f9774d8",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 2
      },
      "lineNbr": 579,
      "author": {
        "id": 1000219
      },
      "writtenOn": "2022-04-20T15:55:59Z",
      "side": 1,
      "message": "If CTX_INCLUDE_EL2_REGS is defined, we can assume EL2 is used right? If that is the case I think we only need to initialize SCTLR_EL2. That is already done in setup_ns_context().",
      "parentUuid": "5a031503_5bf016fd",
      "revId": "2c0aadd87dcfe1c70313dc82aa24138bd7b421c6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce52bc2c_3471d11c",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 2
      },
      "lineNbr": 579,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2022-05-13T09:32:37Z",
      "side": 1,
      "message": "Good point. yes, only sctlr_el2 needs to be initialized. so cm_prepare_el3_exit() will only be called #ifndef CTX_INCLUDE_EL2_REGS, which should be fine.",
      "parentUuid": "fbe1adf4_0f9774d8",
      "revId": "2c0aadd87dcfe1c70313dc82aa24138bd7b421c6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4e34f53_9a72c16d",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 2
      },
      "lineNbr": 842,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2022-05-13T09:32:37Z",
      "side": 1,
      "message": "would be good to add an assertion for (scr_el3.hce\u003d\u003d1 \u0026\u0026 el_implemented(2) !\u003d EL_IMPL_NONE) to ensure no platform would have el2_unused in this config.",
      "revId": "2c0aadd87dcfe1c70313dc82aa24138bd7b421c6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}