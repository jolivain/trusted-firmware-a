{
  "comments": [
    {
      "key": {
        "uuid": "3e2bbc88_b70b5304",
        "filename": "bl31/bl31.ld.S",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2020-03-26T13:05:51Z",
      "side": 1,
      "message": "The #if ENABLE_PMF guard got lost on the way...",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 54,
        "endChar": 14
      },
      "revId": "9dc9cf9ee16acbb7e2074d1018f9a0d76e9663aa",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f748b636_f2a8efb3",
        "filename": "include/arch/aarch32/linkage.h",
        "patchSetId": 2
      },
      "lineNbr": 2,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2020-03-26T13:05:51Z",
      "side": 1,
      "message": "The project\u0027s contribution guidelines (https://trustedfirmware-a.readthedocs.io/en/latest/process/contributing.html) say that new files should have copyrights attributed to the patch author so feel free to replace \u0027ARM Limited and Contributors\u0027 by your name or company name instead.",
      "range": {
        "startLine": 2,
        "startChar": 3,
        "endLine": 2,
        "endChar": 73
      },
      "revId": "9dc9cf9ee16acbb7e2074d1018f9a0d76e9663aa",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8dee9f81_b16c6a0f",
        "filename": "include/arch/aarch32/linkage.h",
        "patchSetId": 2
      },
      "lineNbr": 2,
      "author": {
        "id": 1000173
      },
      "writtenOn": "2020-03-31T04:13:52Z",
      "side": 1,
      "message": "I do not mind much for this tiny header.\n\nI was just more worried about copyrights under plat/socionext/uniphier/, but the guideline was different at that time. So, I decide to not care about this much.\n\nFollowing your comment, if we use \u0027REGSZ\u0027 or some macro.\nThen, this header was unneeded in the first place.",
      "parentUuid": "f748b636_f2a8efb3",
      "range": {
        "startLine": 2,
        "startChar": 3,
        "endLine": 2,
        "endChar": 73
      },
      "revId": "9dc9cf9ee16acbb7e2074d1018f9a0d76e9663aa",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72a5a59d_261be51e",
        "filename": "include/arch/aarch32/linkage.h",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2020-03-26T13:05:51Z",
      "side": 1,
      "message": "I wonder whether we need such a new macro or whether it would be appropriate to reuse the existing REGSZ macro from utils_def.h, what do you think?",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 22
      },
      "revId": "9dc9cf9ee16acbb7e2074d1018f9a0d76e9663aa",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9da931d_72ff2d60",
        "filename": "include/arch/aarch32/linkage.h",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1000173
      },
      "writtenOn": "2020-03-31T04:13:52Z",
      "side": 1,
      "message": "I am not sure if the register size and the struct alignment are coupled.\n\nAnother idea might be to use __SIZEOF_POINTER__ from the compiler.\n\nThis is 4 for arm-linux-gnueabihf-gcc, and 8 for aarch64-linux-gnu-gcc.\nClang also defines it.\n\n\n  #define STRUCT_ALIGN     (__SIZEOF_POINTER__)\n  #define BSS_ALIGN        (2 * __SIZEOF_POINTER__)\n\nIf this is fine with you, I can go this way.",
      "parentUuid": "72a5a59d_261be51e",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 22
      },
      "revId": "9dc9cf9ee16acbb7e2074d1018f9a0d76e9663aa",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f005ef46_23efc30d",
        "filename": "include/common/bl_common.ld.h",
        "patchSetId": 2
      },
      "lineNbr": 85,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2020-03-26T13:05:51Z",
      "side": 1,
      "message": "This is provided by platform.h so would need to include it at the top of this file. PLAT_PERCPU_BAKERY_LOCK_SIZE above also requires it, I think.",
      "range": {
        "startLine": 85,
        "startChar": 11,
        "endLine": 85,
        "endChar": 34
      },
      "revId": "9dc9cf9ee16acbb7e2074d1018f9a0d76e9663aa",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b12283db_86e53df5",
        "filename": "include/common/bl_common.ld.h",
        "patchSetId": 2
      },
      "lineNbr": 85,
      "author": {
        "id": 1000173
      },
      "writtenOn": "2020-03-31T04:13:52Z",
      "side": 1,
      "message": "I think you meant platform_def.h, not platform.h\n\nOK, will include \u003cplatform.h\u003e",
      "parentUuid": "f005ef46_23efc30d",
      "range": {
        "startLine": 85,
        "startChar": 11,
        "endLine": 85,
        "endChar": 34
      },
      "revId": "9dc9cf9ee16acbb7e2074d1018f9a0d76e9663aa",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    }
  ]
}