{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d348992f_129c673f",
        "filename": "services/std_svc/spmd/spmd_main.c",
        "patchSetId": 3
      },
      "lineNbr": 275,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2023-04-12T08:22:19Z",
      "side": 1,
      "message": "0U instead?",
      "range": {
        "startLine": 275,
        "startChar": 48,
        "endLine": 275,
        "endChar": 49
      },
      "revId": "e02150ba0bf25f35dbca21849d67da0d0952c01d",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "494616a9_b2dcf90e",
        "filename": "services/std_svc/spmd/spmd_main.c",
        "patchSetId": 3
      },
      "lineNbr": 275,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2023-04-12T08:25:14Z",
      "side": 1,
      "message": "Ignore this!",
      "parentUuid": "d348992f_129c673f",
      "range": {
        "startLine": 275,
        "startChar": 48,
        "endLine": 275,
        "endChar": 49
      },
      "revId": "e02150ba0bf25f35dbca21849d67da0d0952c01d",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0a4ebb6_bd650750",
        "filename": "services/std_svc/spmd/spmd_main.c",
        "patchSetId": 3
      },
      "lineNbr": 277,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2023-04-12T08:22:19Z",
      "side": 1,
      "message": "It seems this \u0027panic\u0027 gets replaced soon with the proper error code to justify why this function returns error code, right? It might make sense to add a TODO comment here.",
      "range": {
        "startLine": 277,
        "startChar": 2,
        "endLine": 277,
        "endChar": 10
      },
      "revId": "e02150ba0bf25f35dbca21849d67da0d0952c01d",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3dea0120_fe3298ac",
        "filename": "services/std_svc/spmd/spmd_main.c",
        "patchSetId": 3
      },
      "lineNbr": 277,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2023-04-13T19:59:13Z",
      "side": 1,
      "message": "Hi Manish\nI didnt understand your comment. If the platform is unable to handle the Group0 interrupt, we consider it fatal and this function(spmd_group0_interrupt_handler_nwd) doesn\u0027t return from panic. Can you clarify?",
      "parentUuid": "c0a4ebb6_bd650750",
      "range": {
        "startLine": 277,
        "startChar": 2,
        "endLine": 277,
        "endChar": 10
      },
      "revId": "e02150ba0bf25f35dbca21849d67da0d0952c01d",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8021c8d0_0e9bff4b",
        "filename": "services/std_svc/spmd/spmd_main.c",
        "patchSetId": 3
      },
      "lineNbr": 277,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2023-04-19T06:32:30Z",
      "side": 1,
      "message": "Hi Madhukar,\n\n\u003e I didnt understand your comment.\n\nMy understanding was that you added \u0027panic\u0027 temporarily and it will be replaced soon by error code. Otherwise, it makes sense to not return anything (void) from this function with the current implementation, IOW, change the prototype of this function to \u0027void spmd_group0_interrupt_handler_nwd(...)\u0027or \u0027uint64_t __unused spmd_group0_interrupt_handler_nwd(...)\u0027 to abide with the interrupt handler prototype declaration. Any thoughts?\n\n\u003e If the platform is unable to handle the Group0 interrupt, we consider it fatal and this function(spmd_group0_interrupt_handler_nwd) doesn\u0027t return from panic. Can you clarify?\n\nAck, this makes sense.",
      "parentUuid": "3dea0120_fe3298ac",
      "range": {
        "startLine": 277,
        "startChar": 2,
        "endLine": 277,
        "endChar": 10
      },
      "revId": "e02150ba0bf25f35dbca21849d67da0d0952c01d",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1b0e4dda_437c8c70",
        "filename": "services/std_svc/spmd/spmd_main.c",
        "patchSetId": 3
      },
      "lineNbr": 277,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2023-04-19T15:26:06Z",
      "side": 1,
      "message": "This function, spmd_group0_interrupt_handler_nwd, is the implementation of the callback[1] whose prototype has uint64_t as the return value. Hence this function currently returns 0. You are right about specifying __unused but it seems no other functions do that. So I thought its better to be consistent.\n\n[1] https://git.trustedfirmware.org/TF-A/trusted-firmware-a.git/tree/include/bl31/interrupt_mgmt.h#n137",
      "parentUuid": "8021c8d0_0e9bff4b",
      "range": {
        "startLine": 277,
        "startChar": 2,
        "endLine": 277,
        "endChar": 10
      },
      "revId": "e02150ba0bf25f35dbca21849d67da0d0952c01d",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fcdd38a3_5660e372",
        "filename": "services/std_svc/spmd/spmd_main.c",
        "patchSetId": 3
      },
      "lineNbr": 277,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2023-04-20T11:14:25Z",
      "side": 1,
      "message": "OK, feel free to ignore this. JFYI I saw a few references in TF-A where __unused was mentioned. [1] is one of the instances.\n\nI\u0027m also curious to know whether this return value from the handler is **really** verified. If not, then returning void makes more sense in callback[2].\n\n[1]: https://git.trustedfirmware.org/TF-A/trusted-firmware-a.git/tree/plat/xilinx/zynqmp/pm_service/zynqmp_pm_svc_main.c#n138\n[2] https://git.trustedfirmware.org/TF-A/trusted-firmware-a.git/tree/include/bl31/interrupt_mgmt.h#n137",
      "parentUuid": "1b0e4dda_437c8c70",
      "range": {
        "startLine": 277,
        "startChar": 2,
        "endLine": 277,
        "endChar": 10
      },
      "revId": "e02150ba0bf25f35dbca21849d67da0d0952c01d",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5082f30_10a7359a",
        "filename": "services/std_svc/spmd/spmd_main.c",
        "patchSetId": 3
      },
      "lineNbr": 280,
      "author": {
        "id": 1000099
      },
      "writtenOn": "2023-04-11T21:13:01Z",
      "side": 1,
      "message": "Looks like we expect platform to handle all interrupt sources forwarded to it through this call. Is this a contract? Will this be the case always or possibilities to have platform don\u0027t support in some instances (and expect interrupt to be handled elsewhere in the stack) whereas the platform supports for some other interrupt sources? Just curious.",
      "range": {
        "startLine": 280,
        "startChar": 1,
        "endLine": 280,
        "endChar": 11
      },
      "revId": "e02150ba0bf25f35dbca21849d67da0d0952c01d",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ff7695c_eb42da1b",
        "filename": "services/std_svc/spmd/spmd_main.c",
        "patchSetId": 3
      },
      "lineNbr": 280,
      "author": {
        "id": 1000099
      },
      "writtenOn": "2023-04-11T21:20:10Z",
      "side": 1,
      "message": "Ignore this. \nI got the required info from the docu update. \"In the\ncurrent design, SPMD expects the platform not to delegate handling to the\nNWd (such as through SDEI) while processing Group0 interrupts.\"",
      "parentUuid": "f5082f30_10a7359a",
      "range": {
        "startLine": 280,
        "startChar": 1,
        "endLine": 280,
        "endChar": 11
      },
      "revId": "e02150ba0bf25f35dbca21849d67da0d0952c01d",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "59bd1ffd_f5181dc7",
        "filename": "services/std_svc/spmd/spmd_main.c",
        "patchSetId": 3
      },
      "lineNbr": 280,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2023-04-13T19:59:13Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "2ff7695c_eb42da1b",
      "range": {
        "startLine": 280,
        "startChar": 1,
        "endLine": 280,
        "endChar": 11
      },
      "revId": "e02150ba0bf25f35dbca21849d67da0d0952c01d",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33170f06_bc78bd31",
        "filename": "services/std_svc/spmd/spmd_main.c",
        "patchSetId": 3
      },
      "lineNbr": 530,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2023-04-12T08:22:19Z",
      "side": 1,
      "message": "0U instead?",
      "range": {
        "startLine": 530,
        "startChar": 9,
        "endLine": 530,
        "endChar": 10
      },
      "revId": "e02150ba0bf25f35dbca21849d67da0d0952c01d",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3ecfe556_13984ee4",
        "filename": "services/std_svc/spmd/spmd_main.c",
        "patchSetId": 3
      },
      "lineNbr": 530,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2023-04-13T19:59:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "33170f06_bc78bd31",
      "range": {
        "startLine": 530,
        "startChar": 9,
        "endLine": 530,
        "endChar": 10
      },
      "revId": "e02150ba0bf25f35dbca21849d67da0d0952c01d",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4a95543_af71a407",
        "filename": "services/std_svc/spmd/spmd_private.h",
        "patchSetId": 3
      },
      "lineNbr": 96,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2023-04-12T08:22:19Z",
      "side": 1,
      "message": "I think this declaration should go as a part of this patch: https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/19899/3",
      "range": {
        "startLine": 96,
        "startChar": 0,
        "endLine": 96,
        "endChar": 51
      },
      "revId": "e02150ba0bf25f35dbca21849d67da0d0952c01d",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9c465be0_255011d3",
        "filename": "services/std_svc/spmd/spmd_private.h",
        "patchSetId": 3
      },
      "lineNbr": 96,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2023-04-13T19:59:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f4a95543_af71a407",
      "range": {
        "startLine": 96,
        "startChar": 0,
        "endLine": 96,
        "endChar": 51
      },
      "revId": "e02150ba0bf25f35dbca21849d67da0d0952c01d",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}