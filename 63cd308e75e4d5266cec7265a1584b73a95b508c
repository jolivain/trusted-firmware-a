{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1ea6befb_525cf41a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2023-05-31T19:29:38Z",
      "side": 1,
      "message": "Can you help to clarify? Are you saying that compiler mistook entrypoint as a 32bit value?\nI feel there is a bug in compiler in the logic that determines if the logical OR operations in a condition are truly exhaustive.",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 19,
        "endChar": 48
      },
      "revId": "63cd308e75e4d5266cec7265a1584b73a95b508c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbc2c189_86f99fc0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1000469
      },
      "writtenOn": "2023-06-02T10:47:41Z",
      "side": 1,
      "message": "when I run \nmake realclean; make -j PLAT\u003dzynqmp DEBUG\u003d1 RESET_TO_BL31\u003d1 SPD\u003dtspd SDEI_SUPPORT\u003d1 ZYNQMP_ATF_MEM_BASE\u003d0xFFFC0000 ZYNQMP_ATF_MEM_SIZE\u003d0x0003f000 all -Werror\u003dlogical-op\nit works fine.\nwhen size is 0x40000 it fails.\n\nAnd recently with Ilias we fixed that size calculation by\nhttps://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/21079\n\nIt means I don\u0027t think it is the issue with the code itself. It is issue with addr+size is 4GB.",
      "parentUuid": "1ea6befb_525cf41a",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 19,
        "endChar": 48
      },
      "revId": "63cd308e75e4d5266cec7265a1584b73a95b508c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ceeed877_e07e5e10",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2023-06-02T17:04:03Z",
      "side": 1,
      "message": "If I understand you correctly, you are inferring the issue is that BL31_LIMIT is 0x100000000 (which overflows 32bit). But the fix you pushed still does the comparison between entrypoint and BL31_LIMIT(instead of \"greater than\", it now does \"less than\"). I am still not sure how that fixes the error. May be I am missing something obvious.",
      "parentUuid": "dbc2c189_86f99fc0",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 19,
        "endChar": 48
      },
      "revId": "63cd308e75e4d5266cec7265a1584b73a95b508c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1dc026d4_51a4a250",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1000469
      },
      "writtenOn": "2023-06-06T13:09:55Z",
      "side": 1,
      "message": "At least for me this is fixing the issue too. Is this better?\nIt looks like that tool thinks that they are u32 types not u64 types.\n\n # define BL31_LIMIT                    U(0x80000)\n #endif\n #else\n-# define BL31_BASE                     (ZYNQMP_ATF_MEM_BASE)\n-# define BL31_LIMIT                    (ZYNQMP_ATF_MEM_BASE + ZYNQMP_ATF_MEM_SIZE)\n+# define BL31_BASE                     U(ZYNQMP_ATF_MEM_BASE)\n+# define BL31_LIMIT                    U(ZYNQMP_ATF_MEM_BASE + ZYNQMP_ATF_MEM_SIZE)\n # ifdef ZYNQMP_ATF_MEM_PROGBITS_SIZE\n-#  define BL31_PROGBITS_LIMIT          (ZYNQMP_ATF_MEM_BASE + ZYNQMP_ATF_MEM_PROGBITS_SIZE)\n+#  define BL31_PROGBITS_LIMIT          U(ZYNQMP_ATF_MEM_BASE + ZYNQMP_ATF_MEM_PROGBITS_SIZE)\n # endif\n #endif",
      "parentUuid": "ceeed877_e07e5e10",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 19,
        "endChar": 48
      },
      "revId": "63cd308e75e4d5266cec7265a1584b73a95b508c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "008e90ab_b468430c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2023-06-06T14:00:56Z",
      "side": 1,
      "message": "I tried your change above(appending U). I see the same build error. Did you intend to use UL?",
      "parentUuid": "1dc026d4_51a4a250",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 19,
        "endChar": 48
      },
      "revId": "63cd308e75e4d5266cec7265a1584b73a95b508c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75927ef3_3c032709",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1000469
      },
      "writtenOn": "2023-06-06T15:02:07Z",
      "side": 1,
      "message": "Sorry that was fix for this compilation line:\nmake realclean; make -j PLAT\u003dzynqmp DEBUG\u003d1 RESET_TO_BL31\u003d1 ZYNQMP_ATF_MEM_BASE\u003d0x70000000 ZYNQMP_ATF_MEM_SIZE\u003d0x10000000 all XILINX_OF_BOARD_DTB_ADDR\u003d0x10000\n\nWhat about recast it to tell compiler that it has to be 64bit value.\n\ndiff --git a/plat/xilinx/zynqmp/include/platform_def.h b/plat/xilinx/zynqmp/include/platform_def.h\nindex f6d9ce184dcc..88163c24f140 100644\n--- a/plat/xilinx/zynqmp/include/platform_def.h\n+++ b/plat/xilinx/zynqmp/include/platform_def.h\n@@ -41,19 +41,21 @@\n #ifndef ZYNQMP_ATF_MEM_BASE\n #if !DEBUG \u0026\u0026 defined(SPD_none) \u0026\u0026 !SDEI_SUPPORT\n # define BL31_BASE                     U(0xfffea000)\n-# define BL31_LIMIT                    U(0x100000000)\n+# define BL31_SIZE                     U(0x16000)\n #else\n # define BL31_BASE                     U(0x1000)\n-# define BL31_LIMIT                    U(0x80000)\n+# define BL31_SIZE                     U(0x7f000)\n #endif\n #else\n # define BL31_BASE                     (ZYNQMP_ATF_MEM_BASE)\n-# define BL31_LIMIT                    (ZYNQMP_ATF_MEM_BASE + ZYNQMP_ATF_MEM_SIZE)\n+# define BL31_SIZE                     (ZYNQMP_ATF_MEM_SIZE)\n # ifdef ZYNQMP_ATF_MEM_PROGBITS_SIZE\n #  define BL31_PROGBITS_LIMIT          (ZYNQMP_ATF_MEM_BASE + ZYNQMP_ATF_MEM_PROGBITS_SIZE)\n # endif\n #endif\n \n+#define BL31_LIMIT                     (BL31_BASE + BL31_SIZE)\n+\n /*******************************************************************************\n  * BL32 specific defines.\n  ******************************************************************************/\ndiff --git a/plat/xilinx/zynqmp/zynqmp_sdei.c b/plat/xilinx/zynqmp/zynqmp_sdei.c\nindex 8a6d894b5825..8c6d07c75c7f 100644\n--- a/plat/xilinx/zynqmp/zynqmp_sdei.c\n+++ b/plat/xilinx/zynqmp/zynqmp_sdei.c\n@@ -16,7 +16,7 @@\n \n int arm_validate_ns_entrypoint(uintptr_t entrypoint)\n {\n-       return (entrypoint \u003c BL31_BASE || entrypoint \u003e BL31_LIMIT) ? 0 : -1;\n+       return (entrypoint \u003c BL31_BASE || entrypoint \u003e ((uint64_t)BL31_BASE + (uint64_t)BL31_SIZE)) ? 0 : -1;\n }\n \n /* Private event mappings */",
      "parentUuid": "008e90ab_b468430c",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 19,
        "endChar": 48
      },
      "revId": "63cd308e75e4d5266cec7265a1584b73a95b508c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dba15894_4cccc28e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2023-06-06T15:57:31Z",
      "side": 1,
      "message": "Yes, its a good idea to use ((uint64_t)BL31_BASE + (uint64_t)BL31_SIZE)). I believe it works.",
      "parentUuid": "75927ef3_3c032709",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 19,
        "endChar": 48
      },
      "revId": "63cd308e75e4d5266cec7265a1584b73a95b508c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a68c2a9_70fc138a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1000469
      },
      "writtenOn": "2023-06-07T07:12:59Z",
      "side": 1,
      "message": "I sent v2 version with using variable which is also working for me.",
      "parentUuid": "dba15894_4cccc28e",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 19,
        "endChar": 48
      },
      "revId": "63cd308e75e4d5266cec7265a1584b73a95b508c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a6ff7a6_9b108734",
        "filename": "plat/xilinx/zynqmp/zynqmp_sdei.c",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1000923
      },
      "writtenOn": "2023-05-30T14:56:33Z",
      "side": 1,
      "message": "still thinking should this be: (entrypoint \u003c\u003d BL31_LIMIT)",
      "range": {
        "startLine": 19,
        "startChar": 50,
        "endLine": 19,
        "endChar": 51
      },
      "revId": "63cd308e75e4d5266cec7265a1584b73a95b508c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2bc0e909_26e31452",
        "filename": "plat/xilinx/zynqmp/zynqmp_sdei.c",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1000469
      },
      "writtenOn": "2023-06-02T10:35:35Z",
      "side": 1,
      "message": "BL31_LIMIT is address + size which is on the next address behind TF-A. For more details please take a look.",
      "parentUuid": "8a6ff7a6_9b108734",
      "range": {
        "startLine": 19,
        "startChar": 50,
        "endLine": 19,
        "endChar": 51
      },
      "revId": "63cd308e75e4d5266cec7265a1584b73a95b508c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}