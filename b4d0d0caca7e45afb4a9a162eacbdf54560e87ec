{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "715d6902_83d8e5b2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2021-06-21T08:13:35Z",
      "side": 1,
      "message": "nit: FF-A",
      "range": {
        "startLine": 13,
        "startChar": 43,
        "endLine": 13,
        "endChar": 46
      },
      "revId": "b4d0d0caca7e45afb4a9a162eacbdf54560e87ec",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "480bf6a2_6bd6aea0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000655
      },
      "writtenOn": "2021-06-15T15:22:08Z",
      "side": 1,
      "message": "More changes to enable Kinibi and FFA.\nIt would be required together with the PR here: https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/10235",
      "revId": "b4d0d0caca7e45afb4a9a162eacbdf54560e87ec",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3f112723_710ad23e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2021-06-21T08:54:49Z",
      "side": 1,
      "message": "\u003e Patch Set 1:\n\u003e \n\u003e Build created: 746 (https://qa-reports.linaro.org/tf/tf-gerrit-tforg-l1/build/746/)\n\nThere is a known build failure on zynqmp platform, unrelated to this change.",
      "revId": "b4d0d0caca7e45afb4a9a162eacbdf54560e87ec",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b09c53e9_ce2489dc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000289
      },
      "writtenOn": "2021-06-22T10:48:06Z",
      "side": 1,
      "message": "Hi Lukas,\n\nThanks for posting this patch. I agree with the intent but have some questions and concerns about the implementation.\n\nDoes this patch cover a configuration where SPMC is in S-EL1 and the platform service is in EL3? If so, then a couple of concerns in this regard.\n\n1. FF-A does not expect the SPMC and SPMD components to send and interpret partition messages sent using DIRECT_REQ/RESP. So, I am trying to understand why the source of the message is the SPMC. It should be the ID of the logical SP in S-EL1. It is logically distinct from the SPMC component in S-EL1 even though they are a part of the same image. Basically, the SPMC and SPMD should be able to just forward these messages to the correct target (logical or physical SP) without having to interpret them in any way.\n\n2. The SPMC component in FF-A is responsible for initialising and managing all SPs. With a S-EL1 SPMC, FF-A assumes that there is a single logical SP in S-EL1 and there could be other S-EL0 SPs. It does not currently cater for a logical SP to be deployed in EL3 for a platform service. This would be a SP that the SPMC did not initialise and does not manage. So, there are questions around who initialises these SPs (SPMD?), how does the SPMC discover their presence (use FFA_PARTITION_INFO_GET at the S-EL1/EL3 boundary?) etc.  \n\nI think 1) can be solved by using source and destination IDs that are not SPMC and SPMD IDs. 2) requires spec changes. Before considering that, I would like to get your take on placing the SPMC in EL3 instead of S-EL1. In this case, the above scenario would map naturally to two SPs talking to each other via the SPMC instead of via the SPMD. Their initialisation, management and discovery would be as per the FF-A spec.\n\nPlease let me know what you think.\n\ncheers,\nAchin",
      "revId": "b4d0d0caca7e45afb4a9a162eacbdf54560e87ec",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "019c451c_caddafd1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2021-06-23T00:35:23Z",
      "side": 1,
      "message": "Achin, slightly off topic, but #2 solves other problems too like we discussed. For example, a logical SP co-resident with the SPMD used to handle and forward RAS direct messages. Seems like the same solution can be used to solve multiple problems and allowing for this in the spec is a +1 from me.",
      "parentUuid": "b09c53e9_ce2489dc",
      "revId": "b4d0d0caca7e45afb4a9a162eacbdf54560e87ec",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cc62d0b2_53e14679",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000289
      },
      "writtenOn": "2021-06-23T07:18:23Z",
      "side": 1,
      "message": "Hi Raghu,\n\nI am not sure I see the benefit of making the SPMD perform the same duties as the SPMC i.e. initialise logical SPs and route messages to them. A logical SP in EL3 can co-reside with a SPMC in EL3 as well. \n\nRAS communication between the SPMD and SPMC should be done through a set of generic/framework messages (if we go down this path). The semantics would be that EL3 receives an exception and uses a generic mechanism to transmit the exception information to the SPMC. The SPMC could forward it to a partition for platform specific handling.\n\nThis discussion is about creating logical SPs in EL3 for platform services that should ideally migrate to a SP with S-EL2 or to S-EL2 if the former is not possible. The idea is to remove as much platform specific code from EL3 as possible.\n\nSo yeah, I am not sure we should change the fundamental rules of FF-A to accommodate what is effectively a legacy configuration.\n\nWhat do you reckon?",
      "parentUuid": "019c451c_caddafd1",
      "revId": "b4d0d0caca7e45afb4a9a162eacbdf54560e87ec",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "991bb683_20a270de",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2021-06-23T12:34:24Z",
      "side": 1,
      "message": "Makes sense. I think i may have misunderstood what we discussed last week. Can we not use framework messages between SPMC and SPMD to get the linear id then? \nWont placing the SPMC in EL3 instead of S-EL1 change the model that is being used(model being TOS has the SPMC similar to OPTEE).",
      "parentUuid": "cc62d0b2_53e14679",
      "revId": "b4d0d0caca7e45afb4a9a162eacbdf54560e87ec",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "de515156_e8a5290c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000289
      },
      "writtenOn": "2021-06-23T12:59:41Z",
      "side": 1,
      "message": "Hi Raghu,\n\nLets revisit our discussion on the RAS topic next time we meet. It would be good to realign and apologies for any confusion.\n\nFFA_ID_GET effectively uses a framework message to send the ID from the SPMD to the SPMC. The spec treats the content returned in the registers as a Framework message.\n\nThe same could be done by defining a separate message for obtaining the linear ID using DIRECT_REQ and RESP. This is what we do with PM messages.\n\nI think we can discuss the pros and cons of each approach which might be a matter of taste. \n\nThe bit I want to establish first is whether we are agreeing that using an SMC is the best way for the SPMC and an SP to obtain the linear ID. I think Trustonic\u0027s feedback in this regard is critical since they have the most pressing requirement. @Lukas, what do you think? I will check with other partners to see if they have an opinion on this.\n\nPlacing the SPMC in EL3 does change the model. But then it depends upon what we are trying to achieve. The reason why the SPMC was placed in OP-TEE was to enable use of FF-A based S-EL0 SPs e.g. StMM. IIUC, Trustonic do not have the same requirement. But happy to be corrected if I have misunderstood the requirement. \n\nI hope this sounds reasonable.\n\ncheers,\nAchin",
      "parentUuid": "991bb683_20a270de",
      "revId": "b4d0d0caca7e45afb4a9a162eacbdf54560e87ec",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3f0e24bf_6b20fba0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2021-06-23T13:09:27Z",
      "side": 1,
      "message": "ack.",
      "parentUuid": "de515156_e8a5290c",
      "revId": "b4d0d0caca7e45afb4a9a162eacbdf54560e87ec",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "49d6f551_cd046102",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000655
      },
      "writtenOn": "2021-06-24T12:40:46Z",
      "side": 1,
      "message": "Hi Achin,\n\u003e So, I am trying to understand why the source of the message is the SPMC. It should be the ID of the logical SP in S-EL1.\nYou got me. I do not yet think of the SPMC and the SEL1-TEE as something different. I understand better now why you make two boxes in the spec.\n\n\u003e Before considering that, I would like to get your take on placing the SPMC in EL3 instead of S-EL1.\nSPMC in EL3 is the preferred solution for Trustonic.\nThe proposed patch is about making things work on today\u0027s code base.\n\n\u003e Placing the SPMC in EL3 does change the model. But then it depends upon what we are trying to achieve. The reason why the SPMC was placed in OP-TEE was to enable use of FF-A based S-EL0 SPs\nTo be honest, I am not a fan of the SPMC/SPMD split.\nTo me, all components in EL3, SEL2 and SEL1 should be able to spawn several SPs or SPMs. I would like to have two SPs in SEL1 but also SPs in SEL0 (managed by the TEE).\n\n\u003e The bit I want to establish first is whether we are agreeing that using an SMC is the best way for the SPMC and an SP to obtain the linear ID.\nAfter discussing this in the other thread (https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/10235), I think Raghu\u0027s idea (using an SMC) can work. To some extend, our requirement is to not break compatibility, for that, linear id must be received in x3 on boot. On the other hand, as you say, we are changing so many things, we might as well do an SMC in the early instructions to get our real boot parameters from the platform-specific EL3 service.",
      "parentUuid": "3f0e24bf_6b20fba0",
      "revId": "b4d0d0caca7e45afb4a9a162eacbdf54560e87ec",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c35091b4_38ed8ff7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2021-07-29T13:59:22Z",
      "side": 1,
      "message": "Do we reach an agreement here? If this change is meant to progress at a later time, can we mark it WIP (3 dots menu on the top right \"Mark as work in progress\") until it has to be actively reviewed again? Thanks.",
      "parentUuid": "49d6f551_cd046102",
      "revId": "b4d0d0caca7e45afb4a9a162eacbdf54560e87ec",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69b1e20f_80aff47b",
        "filename": "include/services/spmd_plat.h",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2021-06-21T08:13:35Z",
      "side": 1,
      "message": "nit: 2021 as this is a new file",
      "range": {
        "startLine": 2,
        "startChar": 17,
        "endLine": 2,
        "endChar": 26
      },
      "revId": "b4d0d0caca7e45afb4a9a162eacbdf54560e87ec",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d84d7bb0_c69b581d",
        "filename": "plat/common/plat_spmd_service.c",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2021-06-21T08:13:35Z",
      "side": 1,
      "message": "Tbc if this is the right response to a direct message request.\nDEN0077A FF-Av1.1 Alpha0 section 13.2 says the response to direct message request can be FFA_SUCCESS although all parameters MBZ.",
      "range": {
        "startLine": 20,
        "startChar": 18,
        "endLine": 20,
        "endChar": 35
      },
      "revId": "b4d0d0caca7e45afb4a9a162eacbdf54560e87ec",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12f4b351_00ecfb3a",
        "filename": "plat/nvidia/tegra/soc/t194/platform_t194.mk",
        "patchSetId": 1
      },
      "lineNbr": 81,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2021-06-21T09:07:06Z",
      "side": 1,
      "message": "Why does T194 require this service?",
      "range": {
        "startLine": 81,
        "startChar": 4,
        "endLine": 81,
        "endChar": 35
      },
      "revId": "b4d0d0caca7e45afb4a9a162eacbdf54560e87ec",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a01e8da1_daba180a",
        "filename": "plat/nvidia/tegra/soc/t194/platform_t194.mk",
        "patchSetId": 1
      },
      "lineNbr": 81,
      "author": {
        "id": 1000655
      },
      "writtenOn": "2021-06-24T12:12:50Z",
      "side": 1,
      "message": "Because the symbol spmd_handle_platform_message() must be defined for all platforms that activate SPMD. I looked through all the makefiles and found only FVP and T194 that activate SPMD. Otherwise this configuration would not build anymore.",
      "parentUuid": "12f4b351_00ecfb3a",
      "range": {
        "startLine": 81,
        "startChar": 4,
        "endLine": 81,
        "endChar": 35
      },
      "revId": "b4d0d0caca7e45afb4a9a162eacbdf54560e87ec",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e96da6b_1d74f22c",
        "filename": "services/std_svc/spmd/spmd_main.c",
        "patchSetId": 1
      },
      "lineNbr": 425,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2021-06-21T08:13:35Z",
      "side": 1,
      "message": "Rather than creating a new \"platform message\" dispatcher would it be possible to just re-use the spmc-to-spmd handler above. It\u0027s currently unused and would be a better fit to keep the implementation generic.\n\nSee DEN0077A FF-A v1.1 Alpha0 section 2.8 SPMC and SPMD are assigned implementation defined IDs. But there is no such SPM_PLAT_DIRECT_MSG_ENDPOINT_ID.\n\nThe intent to pass a platform specific message in the higher level SPMC-to-SPMD handler can be conveyed into one of x3-x7.",
      "range": {
        "startLine": 425,
        "startChar": 12,
        "endLine": 425,
        "endChar": 36
      },
      "revId": "b4d0d0caca7e45afb4a9a162eacbdf54560e87ec",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c8ade05_871f3c0e",
        "filename": "services/std_svc/spmd/spmd_main.c",
        "patchSetId": 1
      },
      "lineNbr": 587,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2021-06-21T08:13:35Z",
      "side": 1,
      "message": "This may be revisited to return FFA_MSG_SEND_DIRECT_RESP.",
      "range": {
        "startLine": 583,
        "startChar": 3,
        "endLine": 587,
        "endChar": 19
      },
      "revId": "b4d0d0caca7e45afb4a9a162eacbdf54560e87ec",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "797f0326_e5c89cf4",
        "filename": "services/std_svc/spmd/spmd_main.c",
        "patchSetId": 1
      },
      "lineNbr": 592,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2021-06-21T08:13:35Z",
      "side": 1,
      "message": "Preferably re-use the above condition (spmd_is_spmc message).",
      "range": {
        "startLine": 588,
        "startChar": 2,
        "endLine": 592,
        "endChar": 46
      },
      "revId": "b4d0d0caca7e45afb4a9a162eacbdf54560e87ec",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90e84cf9_7f3c484f",
        "filename": "services/std_svc/spmd/spmd_private.h",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2021-06-21T08:13:35Z",
      "side": 1,
      "message": "Prefer using a generic ID defined by the spec e.g. SPMD_DIRECT_MSG_ENDPOINT_ID for a SPMC-to-SPMD message.",
      "revId": "b4d0d0caca7e45afb4a9a162eacbdf54560e87ec",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}