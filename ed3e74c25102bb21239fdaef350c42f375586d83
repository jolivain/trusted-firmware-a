{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d0f682b7_79619f49",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2022-06-24T08:58:07Z",
      "side": 1,
      "message": "just stm32mp1",
      "range": {
        "startLine": 7,
        "startChar": 5,
        "endLine": 7,
        "endChar": 18
      },
      "revId": "ed3e74c25102bb21239fdaef350c42f375586d83",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ee07da6_00a49d71",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000342
      },
      "writtenOn": "2022-06-27T16:02:26Z",
      "side": 1,
      "message": "fixed",
      "parentUuid": "d0f682b7_79619f49",
      "range": {
        "startLine": 7,
        "startChar": 5,
        "endLine": 7,
        "endChar": 18
      },
      "revId": "ed3e74c25102bb21239fdaef350c42f375586d83",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dcef57c9_2519ba50",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2022-06-24T09:25:18Z",
      "side": 1,
      "message": "Split the line to have less that 72 characters.\nThis warning (as  well as the one to change plat/stm32mp1 to stm32mp1) can be found there:\nhttps://ci.trustedfirmware.org/job/tf-a-commitlint/2405/console\n\nThe rule to have the length of the first line less than 50 characters is not mandatory.",
      "revId": "ed3e74c25102bb21239fdaef350c42f375586d83",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f7cda949_bc1a6a7d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1000342
      },
      "writtenOn": "2022-06-27T16:02:26Z",
      "side": 1,
      "message": "fixed",
      "parentUuid": "dcef57c9_2519ba50",
      "revId": "ed3e74c25102bb21239fdaef350c42f375586d83",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "55facca9_adca8d9d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2022-06-24T08:58:07Z",
      "side": 1,
      "message": "Hi Igor,\nThanks for your patch.\nEtienne forwarded me your mail explaining your change.\n\nOverall, the patch the patch looks OK excepts the place you use in the register (I\u0027ve made some remarks inline), and some minor other things.\nBe also aware, that by default, this register is writable by non-secure world. But this can of course be configured, as Etienne said.\n\nBest regards,\nYann",
      "revId": "ed3e74c25102bb21239fdaef350c42f375586d83",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "318d0e86_46306f2f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000342
      },
      "writtenOn": "2022-06-24T14:44:05Z",
      "side": 1,
      "message": "Yann,\nThanks for review, will push a second patch set soon (the only open question is about function declarations and naming).\n\nThanks",
      "revId": "ed3e74c25102bb21239fdaef350c42f375586d83",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1cec1498_cc284415",
        "filename": "plat/st/stm32mp1/stm32mp1_private.c",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2022-06-24T08:58:07Z",
      "side": 1,
      "message": "When seeing your path, I think I should update this to use GENMSAK, and introduce the shifts and masks for sub-fields (interface type and instance). That will avoid magic numbers inside the code. I can push a patch for this. Or could you do that?",
      "revId": "ed3e74c25102bb21239fdaef350c42f375586d83",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7f9fd8c7_43885712",
        "filename": "plat/st/stm32mp1/stm32mp1_private.c",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1000342
      },
      "writtenOn": "2022-06-24T14:44:05Z",
      "side": 1,
      "message": "sure, I will do that",
      "parentUuid": "1cec1498_cc284415",
      "revId": "ed3e74c25102bb21239fdaef350c42f375586d83",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e5b8d3bb_b5842690",
        "filename": "plat/st/stm32mp1/stm32mp1_private.c",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1000342
      },
      "writtenOn": "2022-06-27T16:02:26Z",
      "side": 1,
      "message": "fixed",
      "parentUuid": "7f9fd8c7_43885712",
      "revId": "ed3e74c25102bb21239fdaef350c42f375586d83",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "246e445f_da806283",
        "filename": "plat/st/stm32mp1/stm32mp1_private.c",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2022-06-24T08:58:07Z",
      "side": 1,
      "message": "Keep BOOT_MODE (TAMP_BOOT_MODE_AUTH_MASK) as it is the name we\u0027ve given to this TAMP backup register. Its definition can be seen there:\nhttps://wiki.st.com/stm32mpu/wiki/STM32MP15_backup_registers#Boot_mode_selection_feature\n\nWe already use the first byte, as explained in the wiki, for forcing reboot. But I\u0027ve just seen this part of code wasn\u0027t yet upstreamed.\nWould you mind changing the byte you use to [23:16]?",
      "revId": "ed3e74c25102bb21239fdaef350c42f375586d83",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5dd0bac7_91597254",
        "filename": "plat/st/stm32mp1/stm32mp1_private.c",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1000342
      },
      "writtenOn": "2022-06-24T14:44:05Z",
      "side": 1,
      "message": "will fix",
      "parentUuid": "246e445f_da806283",
      "revId": "ed3e74c25102bb21239fdaef350c42f375586d83",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d079c5f7_5de62d94",
        "filename": "plat/st/stm32mp1/stm32mp1_private.c",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1000342
      },
      "writtenOn": "2022-06-27T16:02:26Z",
      "side": 1,
      "message": "fixed",
      "parentUuid": "5dd0bac7_91597254",
      "revId": "ed3e74c25102bb21239fdaef350c42f375586d83",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3625c80_0e70212e",
        "filename": "plat/st/stm32mp1/stm32mp1_private.c",
        "patchSetId": 1
      },
      "lineNbr": 753,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2022-06-24T08:58:07Z",
      "side": 1,
      "message": "minor: I used itf in the previous function as it was dealing with boot interface. Here the variable (and other ones with itf) do no more correspond to what it is. But as the byte you use contains 2 pieces of information not directly related, the correct name might not be easy to find. Maybe just replace all occurrences of itf in the 2 functions with boot_status?",
      "range": {
        "startLine": 753,
        "startChar": 15,
        "endLine": 753,
        "endChar": 18
      },
      "revId": "ed3e74c25102bb21239fdaef350c42f375586d83",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1e56e4c_f5123ce7",
        "filename": "plat/st/stm32mp1/stm32mp1_private.c",
        "patchSetId": 1
      },
      "lineNbr": 753,
      "author": {
        "id": 1000342
      },
      "writtenOn": "2022-06-24T14:44:05Z",
      "side": 1,
      "message": "I think we can also put everything into one function (which will also help to avoid code duplication) and have one pair of funtions instead ofstm32_save_boot_auth()/stm32_save_boot_interface(), for example:\n\nvoid stm32_save_boot_status(uint32_t interface, uint32_t instance, uint32_t auth_status, uint32_t boot_partition);\nvoid stm32_get_boot_status(uint32_t interface, uint32_t instance, uint32_t *auth_status, uint32_t *boot_partition);\n\nor even provide boot_api_context_t* pointer (for example \"void stm32_save_boot_status(struct boot_api_context_t* boot_ctx)\") and decide what to save to TAMP backup register implicitly in the function implementation. The only concern from my side is if \"boot_api_context_t\" is going to be supported in other SoCs? I assume the structure definition was deliberately put to \"st/stm32mp1\" instead of \"st/common\", correct?",
      "parentUuid": "c3625c80_0e70212e",
      "range": {
        "startLine": 753,
        "startChar": 15,
        "endLine": 753,
        "endChar": 18
      },
      "revId": "ed3e74c25102bb21239fdaef350c42f375586d83",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fdfb5e96_487261d1",
        "filename": "plat/st/stm32mp1/stm32mp1_private.c",
        "patchSetId": 1
      },
      "lineNbr": 753,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2022-06-24T16:35:31Z",
      "side": 1,
      "message": "Your idea to change stm32_save_boot_interface() to stm32_save_boot_status(), saving the 4 parameters at once, sounds good. And you can directly use the boot_ctx pointer. For the get function, that may not be needed, and with Manish comment, it seems the stm32_get_boot_auth() is not used. Was it for debug purposes?\n\nThe backup registers may not be managed the same way on other platforms, so I\u0027m not sure this can be moved to common code. For the moment, keep it here. I\u0027ll check when we have a new SoC if it can be moved easily to common part.",
      "parentUuid": "d1e56e4c_f5123ce7",
      "range": {
        "startLine": 753,
        "startChar": 15,
        "endLine": 753,
        "endChar": 18
      },
      "revId": "ed3e74c25102bb21239fdaef350c42f375586d83",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e3613fb7_89d62b82",
        "filename": "plat/st/stm32mp1/stm32mp1_private.c",
        "patchSetId": 1
      },
      "lineNbr": 753,
      "author": {
        "id": 1000342
      },
      "writtenOn": "2022-06-27T16:02:26Z",
      "side": 1,
      "message": "fixed",
      "parentUuid": "fdfb5e96_487261d1",
      "range": {
        "startLine": 753,
        "startChar": 15,
        "endLine": 753,
        "endChar": 18
      },
      "revId": "ed3e74c25102bb21239fdaef350c42f375586d83",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba13210a_066f910a",
        "filename": "plat/st/stm32mp1/stm32mp1_private.c",
        "patchSetId": 1
      },
      "lineNbr": 765,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2022-06-24T16:07:04Z",
      "side": 1,
      "message": "Out of curiosity, in the patch I don\u0027t see this function being called anywhere. Where is it supposed to be called?",
      "range": {
        "startLine": 765,
        "startChar": 5,
        "endLine": 765,
        "endChar": 24
      },
      "revId": "ed3e74c25102bb21239fdaef350c42f375586d83",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3eb5c38d_6a2208af",
        "filename": "plat/st/stm32mp1/stm32mp1_private.c",
        "patchSetId": 1
      },
      "lineNbr": 765,
      "author": {
        "id": 1000342
      },
      "writtenOn": "2022-06-27T16:02:26Z",
      "side": 1,
      "message": "removed",
      "parentUuid": "ba13210a_066f910a",
      "range": {
        "startLine": 765,
        "startChar": 5,
        "endLine": 765,
        "endChar": 24
      },
      "revId": "ed3e74c25102bb21239fdaef350c42f375586d83",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}