{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1f51c433_844ba20f",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 2
      },
      "lineNbr": 259,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2022-10-27T08:45:26Z",
      "side": 1,
      "message": "Is this not already covered here: https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/17440/2/lib/el3_runtime/aarch64/context_mgmt.c#757? or am I missing something?",
      "range": {
        "startLine": 254,
        "startChar": 0,
        "endLine": 259,
        "endChar": 65
      },
      "revId": "c0a30ac05b03263cca632f84be1bb3babcaca926",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf0aa524_4677491a",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 2
      },
      "lineNbr": 259,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2022-10-27T08:55:51Z",
      "side": 1,
      "message": "From the comment on line 603, that\u0027s for the case where EL2 is present but unused. The patch is for the case where EL2 is in use.",
      "parentUuid": "1f51c433_844ba20f",
      "range": {
        "startLine": 254,
        "startChar": 0,
        "endLine": 259,
        "endChar": 65
      },
      "revId": "c0a30ac05b03263cca632f84be1bb3babcaca926",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33939cdd_37572fa4",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 2
      },
      "lineNbr": 259,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2022-10-27T09:07:14Z",
      "side": 1,
      "message": "Ah okay! Can [1] be moved in such a way that it is applicable for EL2 used and unused case? duplicating same thing at 2 places might be the maintenance issue in future.\n \n[1]: https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/17440/2/lib/el3_runtime/aarch64/context_mgmt.c#757",
      "parentUuid": "bf0aa524_4677491a",
      "range": {
        "startLine": 254,
        "startChar": 0,
        "endLine": 259,
        "endChar": 65
      },
      "revId": "c0a30ac05b03263cca632f84be1bb3babcaca926",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "735b5fc2_db0e0ed5",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 2
      },
      "lineNbr": 259,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2022-10-27T10:00:25Z",
      "side": 1,
      "message": "In theory, yes. My change could be moved so that it happens unconditionally and this bit of code would probably be redundant as that\u0027s the default. \n\nIn practice though this bit of code has a lot of special cases and needs some refactoring. I don\u0027t want to do this because PMU support is incomplete and kind of fragmented. The proper implementation should make some global decision about this registers. EL2 registers are also indiscriminately zeroed out and some global decisions need making again.",
      "parentUuid": "33939cdd_37572fa4",
      "range": {
        "startLine": 254,
        "startChar": 0,
        "endLine": 259,
        "endChar": 65
      },
      "revId": "c0a30ac05b03263cca632f84be1bb3babcaca926",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3b3091d5_47c4b829",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 2
      },
      "lineNbr": 259,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2022-10-28T12:54:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "735b5fc2_db0e0ed5",
      "range": {
        "startLine": 254,
        "startChar": 0,
        "endLine": 259,
        "endChar": 65
      },
      "revId": "c0a30ac05b03263cca632f84be1bb3babcaca926",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}