{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "83634786_7db6d14d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 13,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2021-04-02T06:08:12Z",
      "side": 1,
      "message": "At first, I thought it seemed like a waste to pull the whole zlib just for the CRC code. But on further thoughts, I guess you\u0027re relying on the linker\u0027s garbage collection to discard what\u0027s not used?",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 13,
        "endChar": 40
      },
      "revId": "2c6f6a9cb8399ba35b013bd6e3eff915063a2294",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c32d6f9d_4ebe0aa4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 13,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2021-04-04T21:46:53Z",
      "side": 1,
      "message": "Yes, relying on \u0027gc-sections\u0027 or \u0027--remove --info\u003dunused,unusedsymbols\u0027 on these linker options.",
      "parentUuid": "83634786_7db6d14d",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 13,
        "endChar": 40
      },
      "revId": "2c6f6a9cb8399ba35b013bd6e3eff915063a2294",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7a03cb4f_e3395388",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000125
      },
      "writtenOn": "2021-04-01T20:16:39Z",
      "side": 1,
      "message": "Looks pretty straight-forward to me.  Crank through CI?",
      "revId": "2c6f6a9cb8399ba35b013bd6e3eff915063a2294",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b49dc205_ebd0eabb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2021-04-02T16:50:41Z",
      "side": 1,
      "message": "\nIt seems Juno relies on crc32 intrinsics for TRNG support.\n\nIs this worth adopting same strategy?\n\nhttps://git.trustedfirmware.org/TF-A/trusted-firmware-a.git/tree/plat/arm/board/juno/juno_trng.c#n84\n\nhttps://gcc.gnu.org/onlinedocs/gcc-4.9.0/gcc/ARM-ACLE-Intrinsics.html\n\nIntroduced by Andre at commit eb18ce3283dd67014e4b63d009cbbce83d6d9eb0\n    \n",
      "revId": "2c6f6a9cb8399ba35b013bd6e3eff915063a2294",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fc00f522_f8635f31",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2021-04-04T21:46:53Z",
      "side": 1,
      "message": "For armclang -\nhttps://developer.arm.com/documentation/100067/0608/armclang-Command-line-Options/-mcpu\n\nwe need to enable this option per cpu.\n\nfor armasm - \nhttps://developer.arm.com/documentation/dui0801/g/A32-and-T32-Instructions/CRC32\n\nCRC feature is optionally supported in ARMv8-A as per below note:\nSupported in architecture ARMv8.1 and later. Optionally supported in ARMv8-A.\n\nfor clang-\nhttps://clang.llvm.org/docs/UsersManual.html, CRC instruction is available on ARMv8 onwards.\n\nWe mainly use armclang, clang and GCC where CRC instruction is available on ARMv8-A onwards so we have an option to add this feature support, but that needs to be enabled differently for every compiler.\n\nIf everybody agrees, we can go ahead with compiler option to add support for CRC instruction, otherwise will go ahead with library support.",
      "parentUuid": "b49dc205_ebd0eabb",
      "revId": "2c6f6a9cb8399ba35b013bd6e3eff915063a2294",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "57993bfa_7bd29a28",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2021-04-06T13:03:07Z",
      "side": 1,
      "message": "I don\u0027t really mind. Just mentioned this option if growing BL2 with zlib becomes a concern in terms of footprint. Also I see crc instruction is a bare primitive and computing crc for a whole buffer might require a bit more code.",
      "parentUuid": "fc00f522_f8635f31",
      "revId": "2c6f6a9cb8399ba35b013bd6e3eff915063a2294",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}