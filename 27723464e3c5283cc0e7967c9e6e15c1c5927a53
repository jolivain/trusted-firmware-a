{
  "comments": [
    {
      "key": {
        "uuid": "fd7070ab_02cecc58",
        "filename": "lib/libc/memset.c",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2020-09-24T15:33:03Z",
      "side": 1,
      "message": "!\u003d 0",
      "revId": "27723464e3c5283cc0e7967c9e6e15c1c5927a53",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49421ac4_04488e7c",
        "filename": "lib/libc/memset.c",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2020-09-24T15:45:49Z",
      "side": 1,
      "message": "Why? count is unsigned, so it should be identical? The MISRA rule is about \"essentially boolean types\", which \"\u003e\" is as well as \"!\u003d\". The resulting object files are identical, so what is this about?",
      "parentUuid": "fd7070ab_02cecc58",
      "revId": "27723464e3c5283cc0e7967c9e6e15c1c5927a53",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a865d4e4_dd2841a3",
        "filename": "lib/libc/memset.c",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2020-09-24T15:54:43Z",
      "side": 1,
      "message": "count is unsigned and cannot be \u003c 0 and there is no point to check with \"\u003e\", so just !\u003d0",
      "parentUuid": "49421ac4_04488e7c",
      "revId": "27723464e3c5283cc0e7967c9e6e15c1c5927a53",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2685b2ce_21a33874",
        "filename": "lib/libc/memset.c",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2020-09-24T17:45:42Z",
      "side": 1,
      "message": "But that doesn\u0027t answer my question: Why is this a problem if it\u0027s the same?\nIf I count down, it\u0027s generally safer to compare using an operator containing less or greater, that\u0027s how you won\u0027t miss the target if the counter skips, for whatever reason (that should be a MISRA rule!)",
      "parentUuid": "a865d4e4_dd2841a3",
      "revId": "27723464e3c5283cc0e7967c9e6e15c1c5927a53",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87b6a6fa_2752f122",
        "filename": "lib/libc/memset.c",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2020-09-24T17:57:46Z",
      "side": 1,
      "message": "Comparing with greater in case of unsigned counter is not safer, because \"\u003c\" case will never happen, only \u003d\u003d 0.",
      "parentUuid": "2685b2ce_21a33874",
      "revId": "27723464e3c5283cc0e7967c9e6e15c1c5927a53",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c055d01_d9f22428",
        "filename": "lib/libc/memset.c",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2020-09-25T15:46:03Z",
      "side": 1,
      "message": "https://coverity.cambridge.arm.com:8443/reports.htm#v28575/p10092/fileInstanceId\u003d640683844\u0026defectInstanceId\u003d373894532\u0026mergedDefectId\u003d208195\n\n\"CID 208195 (#14 of 15): MISRA C-2012 The Essential Type Model (MISRA C-2012 Rule 10.3)1. misra_c_2012_rule_10_3_violation: Implicit conversion of val from essential type signed 32-bit int to different or narrower essential type character.\"",
      "revId": "27723464e3c5283cc0e7967c9e6e15c1c5927a53",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    }
  ]
}