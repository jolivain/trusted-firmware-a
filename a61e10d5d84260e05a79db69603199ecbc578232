{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "19184fc1_60588a3c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000660
      },
      "writtenOn": "2024-03-02T20:41:35Z",
      "side": 1,
      "message": "No real failures. Passed on rebuild. Manually providing +1",
      "revId": "a61e10d5d84260e05a79db69603199ecbc578232",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20de257a_4a7902aa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-03-07T12:00:04Z",
      "side": 1,
      "message": "Just minor header reorg comment pending",
      "revId": "a61e10d5d84260e05a79db69603199ecbc578232",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f94661b3_4ed6fe19",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000660
      },
      "writtenOn": "2024-03-07T15:18:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "20de257a_4a7902aa",
      "revId": "a61e10d5d84260e05a79db69603199ecbc578232",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dffc1996_cae0113d",
        "filename": "include/lib/el3_runtime/aarch64/context.h",
        "patchSetId": 10
      },
      "lineNbr": 298,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-03-07T11:12:48Z",
      "side": 1,
      "message": "minor: It would be good to keep this in a separate header and include it in this one, (like el2_context.h).",
      "revId": "a61e10d5d84260e05a79db69603199ecbc578232",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "77ae4761_dfe73496",
        "filename": "include/lib/el3_runtime/aarch64/context.h",
        "patchSetId": 10
      },
      "lineNbr": 298,
      "author": {
        "id": 1000660
      },
      "writtenOn": "2024-03-07T12:07:00Z",
      "side": 1,
      "message": "ok",
      "parentUuid": "dffc1996_cae0113d",
      "revId": "a61e10d5d84260e05a79db69603199ecbc578232",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4e98465_baa255f7",
        "filename": "include/lib/el3_runtime/aarch64/context.h",
        "patchSetId": 10
      },
      "lineNbr": 475,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-03-07T11:12:48Z",
      "side": 1,
      "message": "I still think this can be written in a better way. Finally I found some time to try some experiment.\n\n#define read_el2_ctx(x, y)   (((x) \u003e 0)? y: 0)\n\n#define read_el2_ctx_fgt(ctx, reg) read_el2_ctx(ENABLE_FEAT_FGT,(((ctx)-\u003efgt).reg))\n\n....\n\nSimilarly something can be done for write as well perhaps.",
      "revId": "a61e10d5d84260e05a79db69603199ecbc578232",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9524f74a_3138d299",
        "filename": "include/lib/el3_runtime/aarch64/context.h",
        "patchSetId": 10
      },
      "lineNbr": 475,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-03-07T11:15:25Z",
      "side": 1,
      "message": "Actually all the arguments have to be passed to the read_el2_ctx and this one should construct the deference.",
      "parentUuid": "d4e98465_baa255f7",
      "revId": "a61e10d5d84260e05a79db69603199ecbc578232",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8ab6bfd7_153db46e",
        "filename": "include/lib/el3_runtime/aarch64/context.h",
        "patchSetId": 10
      },
      "lineNbr": 475,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-03-07T12:00:04Z",
      "side": 1,
      "message": "Ignore this comment, the structure fields missing due to conditional compilation will not allow the compiler to proceed.\n\nWe can solve this in a hacky way by introducing a union of all the possible fields (and allocate 1 64 bit word). But it is not worth the trouble here.",
      "parentUuid": "9524f74a_3138d299",
      "revId": "a61e10d5d84260e05a79db69603199ecbc578232",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2eac036e_ec825a9a",
        "filename": "include/lib/el3_runtime/aarch64/context.h",
        "patchSetId": 10
      },
      "lineNbr": 481,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2024-03-04T09:49:05Z",
      "side": 1,
      "message": "last nit: shouldn\u0027t the write macros expand to something or other? Does expanding to nothing really not produce a warning? Shouldn\u0027t we get ahead of that warning even if we don\u0027t have it enabled?",
      "revId": "a61e10d5d84260e05a79db69603199ecbc578232",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "928edf9d_db980a41",
        "filename": "include/lib/el3_runtime/aarch64/context.h",
        "patchSetId": 10
      },
      "lineNbr": 481,
      "author": {
        "id": 1000660
      },
      "writtenOn": "2024-03-04T17:40:11Z",
      "side": 1,
      "message": "I dont see any warnings with any of the CI builds. Tested it locally too. \nWe had the same discussion earlier and I had posted an alternative version for write_macros.\n(https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/26416/4/include/lib/el3_runtime/aarch64/context.h)\nDidn\u0027t receive any comments from other reviewers. Hence reverted back.\n\nHave similar coding style here (macro not expanding):\nhttps://git.trustedfirmware.org/TF-A/trusted-firmware-a.git/tree/include/common/debug.h#n67\nSo I presume, not an issue.\n\nLet me know your thoughts. If required will modify accordingly.",
      "parentUuid": "2eac036e_ec825a9a",
      "revId": "a61e10d5d84260e05a79db69603199ecbc578232",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "523434fa_3ab79479",
        "filename": "include/lib/el3_runtime/aarch64/context.h",
        "patchSetId": 10
      },
      "lineNbr": 481,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2024-03-05T09:49:42Z",
      "side": 1,
      "message": "I see. Okay I\u0027ll drop it, if it ever becomes a problem it can be fixed then",
      "parentUuid": "928edf9d_db980a41",
      "revId": "a61e10d5d84260e05a79db69603199ecbc578232",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}