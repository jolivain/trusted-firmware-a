{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "52a647d3_bf3b5c42",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2022-09-28T21:59:04Z",
      "side": 1,
      "message": "Patch looks good to me. I am curious if you saw any issues when these files were not included.",
      "revId": "c5862af72d5c2f2b637d9d54c29d2d5e43a3b991",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0a7cc2d8_6ec3133d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1000695
      },
      "writtenOn": "2022-09-28T22:06:31Z",
      "side": 1,
      "message": "We ran into compiler errors when we started unit testing the `libc` library",
      "parentUuid": "52a647d3_bf3b5c42",
      "revId": "c5862af72d5c2f2b637d9d54c29d2d5e43a3b991",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "191571c8_3c26c769",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2022-09-29T15:07:43Z",
      "side": 1,
      "message": "Thanks!",
      "parentUuid": "0a7cc2d8_6ec3133d",
      "revId": "c5862af72d5c2f2b637d9d54c29d2d5e43a3b991",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c63b5beb_615959bb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1000695
      },
      "writtenOn": "2022-09-30T00:04:19Z",
      "side": 1,
      "message": "This is the error we were seeing if you\u0027re curious\n```\nIn file included from lib/libc/printf.c:7:\nlib/libc/printf.c: In function ‘string_print’:\nlib/libc/printf.c:26:23: error: ‘NULL’ undeclared (first use in this function)\n   26 |         assert(str !\u003d NULL);\n      |                       ^~~~\nlib/libc/printf.c:11:1: note: ‘NULL’ is defined in header ‘\u003cstddef.h\u003e’; did you forget to ‘#include \u003cstddef.h\u003e’?\n   10 | #include \u003cstdint.h\u003e\n  +++ |+#include \u003cstddef.h\u003e\n   11 |\nlib/libc/printf.c:26:23: note: each undeclared identifier is reported only once for each function it appears in\n   26 |         assert(str !\u003d NULL);\n      |                       ^~~~\nlib/libc/printf.c:29:23: warning: implicit declaration of function ‘putchar’ [-Wimplicit-function-declaration]\n   29 |                 (void)putchar(*str);\n      |                       ^~~~~~~\nlib/libc/printf.c:11:1: note: include ‘\u003cstdio.h\u003e’ or provide a declaration of ‘putchar’\n   10 | #include \u003cstdint.h\u003e\n  +++ |+#include \u003cstdio.h\u003e\n   11 |\nlib/libc/printf.c: In function ‘vprintf’:\nlib/libc/printf.c:151:44: error: ‘size_t’ undeclared (first use in this function)\n  151 |                                 if (sizeof(size_t) \u003d\u003d 8U)\n      |                                            ^~~~~~\nlib/libc/printf.c:151:44: note: ‘size_t’ is defined in header ‘\u003cstddef.h\u003e’; did you forget to ‘#include \u003cstddef.h\u003e’?\n```\nIt\u0027s easy to reproduce. Just run `gcc -c lib/libc/printf.c`",
      "parentUuid": "191571c8_3c26c769",
      "revId": "c5862af72d5c2f2b637d9d54c29d2d5e43a3b991",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2a1b7eb8_fe105905",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000695
      },
      "writtenOn": "2022-09-28T18:23:35Z",
      "side": 1,
      "message": "Can I get code review for this?",
      "revId": "c5862af72d5c2f2b637d9d54c29d2d5e43a3b991",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "46ab6411_e93f4e90",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000049
      },
      "writtenOn": "2022-09-29T07:29:12Z",
      "side": 1,
      "message": "Just curious, are you using any particular unit test solution to test libc? Its technical debt on the project to provide more test coverage with libc unit testing a known gap so anything suitable for use in the OpenCI would be of interest to the project.",
      "revId": "c5862af72d5c2f2b637d9d54c29d2d5e43a3b991",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "71f59402_1b9a1492",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000695
      },
      "writtenOn": "2022-09-30T00:04:19Z",
      "side": 1,
      "message": "We\u0027re using googletest for unit testing but it\u0027s a bit difficult to port to upstream trusted-firmware-a because it relies on the bazel build system",
      "parentUuid": "46ab6411_e93f4e90",
      "revId": "c5862af72d5c2f2b637d9d54c29d2d5e43a3b991",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "502ff035_075bf61e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000695
      },
      "writtenOn": "2022-09-30T00:04:19Z",
      "side": 1,
      "message": "What is the next step for submitting this change?",
      "revId": "c5862af72d5c2f2b637d9d54c29d2d5e43a3b991",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3488c87d_2e7013ab",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000049
      },
      "writtenOn": "2022-09-30T08:29:26Z",
      "side": 1,
      "message": "For any patch we need positive scores (+1) on Verified, Maintainer and Code-Owner labels.\n\nVerified is normally set by the CI system and that can be run on the patch/patchstack by setting the Allow-CI to +1. I\u0027ll set a run going and I have ensured you can do this yourself as people need adding to a gerrit access list to help protect the CI system. If its felt the CI system is in error we can override and manually set the Verified+1.\n\nCode-Owner is normally set by one of the project specialists in that code area.\n\nMaintainer is set by one of the general project maintainers.\n\nMaintainers and Code Owners are listed here: https://trustedfirmware-a.readthedocs.io/en/latest/about/maintainers.html#project-maintenance\n\nMultiple Code-Review setting is good to see as it means multiple eyes have looked at the patch.",
      "parentUuid": "502ff035_075bf61e",
      "revId": "c5862af72d5c2f2b637d9d54c29d2d5e43a3b991",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "596c9d3e_6ae5206a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000049
      },
      "writtenOn": "2022-09-30T08:53:21Z",
      "side": 1,
      "message": "Slight correction Allow-CI can take tow values +1 for light tests (inc Static checks, docs build and platform builds only) and +2 for full tests (inc lots of functional tests on FVP models and physical boards). \n\nI did an Allow-CI+2 for safety sake.",
      "parentUuid": "3488c87d_2e7013ab",
      "revId": "c5862af72d5c2f2b637d9d54c29d2d5e43a3b991",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}