{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5006ce1d_ec6bac08",
        "filename": "/COMMIT_MSG",
        "patchSetId": 22
      },
      "lineNbr": 11,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2023-09-26T02:53:26Z",
      "side": 1,
      "message": "might or will? if might, it might be worth calling out when it will and when it wont..\n\nAlso looking through rest of the patch set, have we effectively abandoned the use of ESB at all in TF-A? sounds like the two choices are use DSB + ISB or IESB, and use a method which will never consume the error.",
      "range": {
        "startLine": 11,
        "startChar": 55,
        "endLine": 11,
        "endChar": 61
      },
      "revId": "4d791a25df25f32d3dc1f180a0417a82348f7cc9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d26e700d_f4d8ddda",
        "filename": "/COMMIT_MSG",
        "patchSetId": 22
      },
      "lineNbr": 11,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2023-09-26T13:37:30Z",
      "side": 1,
      "message": "I took this wording from arm ARM \n\"In addition to generating an Error synchronization event, the ESB instruction might additionally record and then clear a masked pending asynchronous SError interrupt exception.\" So if consumes the error then it also updates DISR registers.\n\nYes, you are right the purpose of this patch is to get away from esb usage from EL3 and the reason being, the EL\u0027s which has capability to inject a virtual SError should esb so that it can consume the error but then it virtually inject it to be handled at later point. Considering EL3 does not have capability to do so its better not to use this instruction.",
      "parentUuid": "5006ce1d_ec6bac08",
      "range": {
        "startLine": 11,
        "startChar": 55,
        "endLine": 11,
        "endChar": 61
      },
      "revId": "4d791a25df25f32d3dc1f180a0417a82348f7cc9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e06d7266_1463e020",
        "filename": "/COMMIT_MSG",
        "patchSetId": 22
      },
      "lineNbr": 11,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2023-09-26T15:24:33Z",
      "side": 1,
      "message": "Thanks Manish. Will resolve the comment, but if we can add clarity on the \"might\" portion (i.e see what the spec says on when it does and doesnt, and add some workds, or pointers to sections), that would be useful i think. Will leave to you, if you think that is worth doing.",
      "parentUuid": "d26e700d_f4d8ddda",
      "range": {
        "startLine": 11,
        "startChar": 55,
        "endLine": 11,
        "endChar": 61
      },
      "revId": "4d791a25df25f32d3dc1f180a0417a82348f7cc9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18bc9e22_bdeb7336",
        "filename": "include/arch/aarch64/asm_macros.S",
        "patchSetId": 22
      },
      "lineNbr": 297,
      "author": {
        "id": 1000744
      },
      "writtenOn": "2023-09-21T15:47:47Z",
      "side": 1,
      "message": "nit: With",
      "range": {
        "startLine": 297,
        "startChar": 4,
        "endLine": 297,
        "endChar": 9
      },
      "revId": "4d791a25df25f32d3dc1f180a0417a82348f7cc9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ef1cb20_57fac0ad",
        "filename": "include/arch/aarch64/asm_macros.S",
        "patchSetId": 22
      },
      "lineNbr": 299,
      "author": {
        "id": 1000744
      },
      "writtenOn": "2023-09-21T15:47:47Z",
      "side": 1,
      "message": "nit: provides an",
      "range": {
        "startLine": 299,
        "startChar": 14,
        "endLine": 299,
        "endChar": 32
      },
      "revId": "4d791a25df25f32d3dc1f180a0417a82348f7cc9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a68d469c_7e8dad53",
        "filename": "include/arch/aarch64/asm_macros.S",
        "patchSetId": 22
      },
      "lineNbr": 300,
      "author": {
        "id": 1000744
      },
      "writtenOn": "2023-09-21T15:47:47Z",
      "side": 1,
      "message": "nit: there\u0027s no need",
      "range": {
        "startLine": 300,
        "startChar": 32,
        "endLine": 300,
        "endChar": 37
      },
      "revId": "4d791a25df25f32d3dc1f180a0417a82348f7cc9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fde9a788_570267fc",
        "filename": "include/arch/aarch64/asm_macros.S",
        "patchSetId": 22
      },
      "lineNbr": 308,
      "author": {
        "id": 1000744
      },
      "writtenOn": "2023-09-21T15:47:47Z",
      "side": 1,
      "message": "Why not just `#if ENABLE_FEAT_RAS !\u003d 1`?",
      "range": {
        "startLine": 308,
        "startChar": 0,
        "endLine": 308,
        "endChar": 1
      },
      "revId": "4d791a25df25f32d3dc1f180a0417a82348f7cc9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f100a437_ef16bc94",
        "filename": "include/arch/aarch64/el3_common_macros.S",
        "patchSetId": 22
      },
      "lineNbr": 258,
      "author": {
        "id": 1000744
      },
      "writtenOn": "2023-09-21T15:47:47Z",
      "side": 1,
      "message": "Is this safe to assume? FEAT_IESB is only present from 8.2 on-wards, might this lead to undefined behavior on some systems?",
      "range": {
        "startLine": 256,
        "startChar": 24,
        "endLine": 258,
        "endChar": 29
      },
      "revId": "4d791a25df25f32d3dc1f180a0417a82348f7cc9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d9388d7_407b5de7",
        "filename": "lib/el3_runtime/aarch64/context.S",
        "patchSetId": 22
      },
      "lineNbr": 590,
      "author": {
        "id": 1000744
      },
      "writtenOn": "2023-09-21T15:47:47Z",
      "side": 1,
      "message": "Do we mean to add an extra `isb` here?",
      "range": {
        "startLine": 590,
        "startChar": 0,
        "endLine": 590,
        "endChar": 3
      },
      "revId": "4d791a25df25f32d3dc1f180a0417a82348f7cc9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}