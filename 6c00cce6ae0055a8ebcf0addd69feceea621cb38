{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "662d29d7_c2a103a2",
        "filename": "Makefile",
        "patchSetId": 1
      },
      "lineNbr": 1622,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2023-04-21T13:28:13Z",
      "side": 1,
      "message": "This target should be phony because it doesn\u0027t actually create the `dumpdefines` file:\n\n    .PHONY: dumpdefines\n    dumpdefines:",
      "range": {
        "startLine": 1622,
        "startChar": 0,
        "endLine": 1622,
        "endChar": 12
      },
      "revId": "6c00cce6ae0055a8ebcf0addd69feceea621cb38",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2df4f44_458adb9d",
        "filename": "Makefile",
        "patchSetId": 1
      },
      "lineNbr": 1623,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-04-21T10:01:23Z",
      "side": 1,
      "message": "This might be out of scope, but around line 710 a bunch of defines are in BLx_CPPFLAGS. Would it be worth including that too? Or refactoring that bit?",
      "revId": "6c00cce6ae0055a8ebcf0addd69feceea621cb38",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15f6191a_c6169578",
        "filename": "Makefile",
        "patchSetId": 1
      },
      "lineNbr": 1623,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2023-04-21T13:28:13Z",
      "side": 1,
      "message": "`BLx_DEFINES` also specifies BL-specific definitions.",
      "parentUuid": "c2df4f44_458adb9d",
      "revId": "6c00cce6ae0055a8ebcf0addd69feceea621cb38",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29ad5c50_39eea034",
        "filename": "Makefile",
        "patchSetId": 1
      },
      "lineNbr": 1623,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2023-04-21T13:35:24Z",
      "side": 1,
      "message": "This worked locally for me:\n\n    .PHONY: dump-defines-%\n    dump-defines-%:\n    \t@echo \"$(DEFINES)\" | tr \u0027 \u0027 \u0027\\n\u0027\n    \t@echo \"$(addprefix -D,$($(call uppercase,$*)_DEFINES))\" | tr \u0027 \u0027 \u0027\\n\u0027\n    \t@echo \"$(filter -D,$(CPPFLAGS))\" | tr \u0027 \u0027 \u0027\\n\u0027\n\nPretty helpful - it sure beats scouring V\u003d1 output.",
      "parentUuid": "15f6191a_c6169578",
      "revId": "6c00cce6ae0055a8ebcf0addd69feceea621cb38",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d42f110e_36d2bcdb",
        "filename": "Makefile",
        "patchSetId": 1
      },
      "lineNbr": 1623,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2023-04-26T13:27:34Z",
      "side": 1,
      "message": "ACK for .PHONY, forgot about that.\nI tried the other expressions, but they didn\u0027t output anything for me (for fvp).\nIf my makefile knowledge doesn\u0027t let me down, your idea was to say \"make dump-defines-bl1\", and it would also dump $BL1_DEFINES? But I don\u0027t see anything using that prefixed DEFINES pattern.\nAlso CPPFLAGS is constructed using $DEFINES, so that wouldn\u0027t add anything, unless I miss something. The filter expression doesn\u0027t seem to work at all for me anyway.\n\nIn general I am a bit wary of requiring to specify the bootloader stage explicitly on the command line. The relevant -D options seem to be invariant for the BL stages, at least from what I saw. So do we really need that?",
      "parentUuid": "29ad5c50_39eea034",
      "revId": "6c00cce6ae0055a8ebcf0addd69feceea621cb38",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a99bf0e_eeb9de9f",
        "filename": "Makefile",
        "patchSetId": 1
      },
      "lineNbr": 1623,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-04-26T14:16:37Z",
      "side": 1,
      "message": "well IMAGE_AT_EL3 and IMAGE_AT_EL1 are image dependent (Makefile:710) which is why I brought it up in the first place",
      "parentUuid": "d42f110e_36d2bcdb",
      "revId": "6c00cce6ae0055a8ebcf0addd69feceea621cb38",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}