{
  "comments": [
    {
      "key": {
        "uuid": "fe84ce31_e11f97fa",
        "filename": "lib/fconf/fconf.c",
        "patchSetId": 12
      },
      "lineNbr": 31,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2020-02-07T08:50:36Z",
      "side": 1,
      "message": "Do we actually need the full image_desc_t structure? It looks like only the image_info field is used by the rest of the function so I am wondering if we could simply declare that, as in:\n\n struct image_info arm_tb_fw_info \u003d {\n   .image_base \u003d ARM_TB_FW_CONFIG_BASE,\n   .image_max_size \u003d (uint32_t) (ARM_TB_FW_CONFIG_LIMIT - ARM_TB_FW_CONFIG_BASE)\n };",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 31,
        "endChar": 3
      },
      "revId": "c66127590333361eae3bad590239c4a3991a3c63",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1e7a87e_925471ff",
        "filename": "lib/fconf/fconf.c",
        "patchSetId": 12
      },
      "lineNbr": 31,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2020-02-07T08:58:33Z",
      "side": 1,
      "message": "Actually I forgot the SET_STATIC_PARAM_HEAD() line, which we would still need to keep to set the header of the image_info_t but that does not invalidate my comment I think.",
      "parentUuid": "fe84ce31_e11f97fa",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 31,
        "endChar": 3
      },
      "revId": "c66127590333361eae3bad590239c4a3991a3c63",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3eb9c7ca_31d1d5c1",
        "filename": "lib/fconf/fconf.c",
        "patchSetId": 12
      },
      "lineNbr": 31,
      "author": {
        "id": 1000086
      },
      "writtenOn": "2020-02-07T11:02:01Z",
      "side": 1,
      "message": "Yes it makes sense.\nI will probably have to set each field of the header, as the macro can\u0027t be used in this case.",
      "parentUuid": "f1e7a87e_925471ff",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 31,
        "endChar": 3
      },
      "revId": "c66127590333361eae3bad590239c4a3991a3c63",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0aeba455_d45d88b6",
        "filename": "lib/fconf/fconf.c",
        "patchSetId": 12
      },
      "lineNbr": 44,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2020-02-07T08:53:27Z",
      "side": 1,
      "message": "Don\u0027t we want to retrieve the actual file size (instead of the max size)?",
      "range": {
        "startLine": 44,
        "startChar": 55,
        "endLine": 44,
        "endChar": 70
      },
      "revId": "c66127590333361eae3bad590239c4a3991a3c63",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a87d062_ee5019c9",
        "filename": "lib/fconf/fconf.c",
        "patchSetId": 12
      },
      "lineNbr": 44,
      "author": {
        "id": 1000086
      },
      "writtenOn": "2020-02-07T11:02:01Z",
      "side": 1,
      "message": "yes good point",
      "parentUuid": "0aeba455_d45d88b6",
      "range": {
        "startLine": 44,
        "startChar": 55,
        "endLine": 44,
        "endChar": 70
      },
      "revId": "c66127590333361eae3bad590239c4a3991a3c63",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    }
  ]
}