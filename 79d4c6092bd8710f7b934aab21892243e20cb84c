{
  "comments": [
    {
      "key": {
        "uuid": "b7356e5e_86a4e698",
        "filename": "docs/design/trusted-board-boot-build.rst",
        "patchSetId": 14
      },
      "lineNbr": 44,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2020-01-24T10:45:44Z",
      "side": 1,
      "message": "Did you really mean Juno model? Or Juno board?",
      "range": {
        "startLine": 44,
        "startChar": 6,
        "endLine": 44,
        "endChar": 19
      },
      "revId": "79d4c6092bd8710f7b934aab21892243e20cb84c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f45cfa8b_66ffaece",
        "filename": "docs/design/trusted-board-boot-build.rst",
        "patchSetId": 14
      },
      "lineNbr": 44,
      "author": {
        "id": 1000279
      },
      "writtenOn": "2020-01-27T11:41:06Z",
      "side": 1,
      "message": "It was stated as Juno model before, so I have just removed the FVP option. Should it be board?",
      "parentUuid": "b7356e5e_86a4e698",
      "range": {
        "startLine": 44,
        "startChar": 6,
        "endLine": 44,
        "endChar": 19
      },
      "revId": "79d4c6092bd8710f7b934aab21892243e20cb84c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54af5fb6_820fa908",
        "filename": "docs/design/trusted-board-boot-build.rst",
        "patchSetId": 14
      },
      "lineNbr": 44,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2020-01-27T13:57:28Z",
      "side": 1,
      "message": "\u003e It was stated as Juno model before\n\nThe exact text was, \"On both Juno and FVP models\", which I read as on Juno (Juno board, that is) and on FVP models. But I might be wrong, I don\u0027t actually know what was originally meant.",
      "parentUuid": "f45cfa8b_66ffaece",
      "range": {
        "startLine": 44,
        "startChar": 6,
        "endLine": 44,
        "endChar": 19
      },
      "revId": "79d4c6092bd8710f7b934aab21892243e20cb84c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54e351ed_82949289",
        "filename": "docs/design/trusted-board-boot-build.rst",
        "patchSetId": 14
      },
      "lineNbr": 44,
      "author": {
        "id": 1000279
      },
      "writtenOn": "2020-01-27T17:02:02Z",
      "side": 1,
      "message": "Let\u0027s change to board. I believe we can\u0027t simulate Juno, so it\u0027s a board.",
      "parentUuid": "54af5fb6_820fa908",
      "range": {
        "startLine": 44,
        "startChar": 6,
        "endLine": 44,
        "endChar": 19
      },
      "revId": "79d4c6092bd8710f7b934aab21892243e20cb84c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "13155f63_e3817299",
        "filename": "docs/design/trusted-board-boot-build.rst",
        "patchSetId": 14
      },
      "lineNbr": 44,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2020-01-28T07:42:06Z",
      "side": 1,
      "message": "\u003e I believe we can\u0027t simulate Juno, so it\u0027s a board.\n\nNo, there is a Juno model actually. But we have not used it a lot in the TF-A project and quickly switched to the hardware board. So yes I think it is more likely that this referred to the board itself.",
      "parentUuid": "54e351ed_82949289",
      "range": {
        "startLine": 44,
        "startChar": 6,
        "endLine": 44,
        "endChar": 19
      },
      "revId": "79d4c6092bd8710f7b934aab21892243e20cb84c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e33f2ba5_62d51a4b",
        "filename": "include/plat/common/common_def.h",
        "patchSetId": 14
      },
      "lineNbr": 51,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2020-01-24T10:45:44Z",
      "side": 1,
      "message": "These macros look misplaced to me because the size of the ROTPK hash might defer from platform to platform. Here, ROTPK_HASH_LEN is set to 256 bits but it could be bigger. AFAICS, only Arm platforms use that value right now, perhaps consider moving it to arm_def.h?",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 51,
        "endChar": 28
      },
      "revId": "79d4c6092bd8710f7b934aab21892243e20cb84c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df85b2b4_f7387a9f",
        "filename": "include/plat/common/common_def.h",
        "patchSetId": 14
      },
      "lineNbr": 51,
      "author": {
        "id": 1000279
      },
      "writtenOn": "2020-01-27T11:41:06Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e33f2ba5_62d51a4b",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 51,
        "endChar": 28
      },
      "revId": "79d4c6092bd8710f7b934aab21892243e20cb84c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97712935_5f68c96a",
        "filename": "plat/arm/board/common/board_common.mk",
        "patchSetId": 14
      },
      "lineNbr": 31,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2020-01-24T10:45:44Z",
      "side": 1,
      "message": "I think we should document ARM_ROTPK_HASH build option in arm-build-options.rst.",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 31,
        "endChar": 67
      },
      "revId": "79d4c6092bd8710f7b934aab21892243e20cb84c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa13b4d1_0d295b94",
        "filename": "plat/arm/board/common/board_common.mk",
        "patchSetId": 14
      },
      "lineNbr": 31,
      "author": {
        "id": 1000279
      },
      "writtenOn": "2020-01-27T11:41:06Z",
      "side": 1,
      "message": "This is not a build option, for now, just a makefile variable. We are either generating a hash from  ROT_KEY if present or using the default one. I don\u0027t think it is necessary to add this as a build option since we would require ROT_KEY anyway and specifying both is prone to user-error (of pointing to non-related private-key/hash pair)",
      "parentUuid": "97712935_5f68c96a",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 31,
        "endChar": 67
      },
      "revId": "79d4c6092bd8710f7b934aab21892243e20cb84c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c0c991e_38dd9c07",
        "filename": "plat/arm/board/common/board_common.mk",
        "patchSetId": 14
      },
      "lineNbr": 31,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2020-01-27T13:57:28Z",
      "side": 1,
      "message": "As far as I can see, arm-build-options.rst documents both actual build options and makefile variables. For example, I think ARM_PLAT_MT is a makefile variable, I would not expect the user to select the MT capabilities of its platform on the build command line. So I still think ARM_ROTPK_HASH is worth mentioning there.",
      "parentUuid": "fa13b4d1_0d295b94",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 31,
        "endChar": 67
      },
      "revId": "79d4c6092bd8710f7b934aab21892243e20cb84c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a363e0d2_6fef4700",
        "filename": "plat/arm/board/common/board_common.mk",
        "patchSetId": 14
      },
      "lineNbr": 31,
      "author": {
        "id": 1000279
      },
      "writtenOn": "2020-01-27T17:02:02Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1c0c991e_38dd9c07",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 31,
        "endChar": 67
      },
      "revId": "79d4c6092bd8710f7b934aab21892243e20cb84c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8842f732_3b11e16c",
        "filename": "plat/arm/board/common/rotpk/arm_dev_rotpk.S",
        "patchSetId": 14
      },
      "lineNbr": 26,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2020-01-24T10:45:44Z",
      "side": 1,
      "message": "Why is the header embedded twice, here and at line 18? Can we not have only 1 instance?",
      "range": {
        "startLine": 26,
        "startChar": 1,
        "endLine": 26,
        "endChar": 10
      },
      "revId": "79d4c6092bd8710f7b934aab21892243e20cb84c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f078c7c3_c4b6e5bc",
        "filename": "plat/arm/board/common/rotpk/arm_dev_rotpk.S",
        "patchSetId": 14
      },
      "lineNbr": 26,
      "author": {
        "id": 1000279
      },
      "writtenOn": "2020-01-27T11:41:06Z",
      "side": 1,
      "message": "Since we are defining header in separate section, it is not guaranteed that hash is right next to it in memory. We have to define header separately as there are functions that require only a header. We CAN have only one instance, but implementation would be a bit hacky and not straight-forward to understand in .c file.",
      "parentUuid": "8842f732_3b11e16c",
      "range": {
        "startLine": 26,
        "startChar": 1,
        "endLine": 26,
        "endChar": 10
      },
      "revId": "79d4c6092bd8710f7b934aab21892243e20cb84c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c682fb67_54e892f7",
        "filename": "plat/arm/board/common/rotpk/arm_dev_rotpk.S",
        "patchSetId": 14
      },
      "lineNbr": 26,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2020-01-27T13:57:28Z",
      "side": 1,
      "message": "In this case, would it be possible to put both the header and the hash in the same section? Why do we need 2 separate sections?",
      "parentUuid": "f078c7c3_c4b6e5bc",
      "range": {
        "startLine": 26,
        "startChar": 1,
        "endLine": 26,
        "endChar": 10
      },
      "revId": "79d4c6092bd8710f7b934aab21892243e20cb84c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c7c4e18_530c1dac",
        "filename": "plat/arm/board/common/rotpk/arm_dev_rotpk.S",
        "patchSetId": 14
      },
      "lineNbr": 26,
      "author": {
        "id": 1000279
      },
      "writtenOn": "2020-01-27T17:02:02Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c682fb67_54e892f7",
      "range": {
        "startLine": 26,
        "startChar": 1,
        "endLine": 26,
        "endChar": 10
      },
      "revId": "79d4c6092bd8710f7b934aab21892243e20cb84c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d4014791_b302cf89",
        "filename": "plat/arm/board/fvp/fvp_trusted_boot.c",
        "patchSetId": 14
      },
      "lineNbr": 33,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2020-01-24T10:45:44Z",
      "side": 1,
      "message": "I think we need to pass the cookie down to the arm_get_rotpk_info_*() functions. Although it\u0027s not used in the current implementation, it\u0027s meant to identify which specific key (if there are several of them) we want to retrieve. I\u0027d rather keep that flexibility.",
      "range": {
        "startLine": 33,
        "startChar": 7,
        "endLine": 33,
        "endChar": 52
      },
      "revId": "79d4c6092bd8710f7b934aab21892243e20cb84c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f5f39251_67eb742c",
        "filename": "plat/arm/board/fvp/fvp_trusted_boot.c",
        "patchSetId": 14
      },
      "lineNbr": 33,
      "author": {
        "id": 1000279
      },
      "writtenOn": "2020-01-27T11:41:06Z",
      "side": 1,
      "message": "Why not add this when we will be using it actually? I feel like adding an unused parameter is confusing and leads someone to believe we are actually using it. (I haven\u0027t noticed for a long time we are not actually using the parameter)",
      "parentUuid": "d4014791_b302cf89",
      "range": {
        "startLine": 33,
        "startChar": 7,
        "endLine": 33,
        "endChar": 52
      },
      "revId": "79d4c6092bd8710f7b934aab21892243e20cb84c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8123ab36_b3456e36",
        "filename": "plat/arm/board/fvp/fvp_trusted_boot.c",
        "patchSetId": 14
      },
      "lineNbr": 33,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2020-01-27T13:57:28Z",
      "side": 1,
      "message": "Alright.",
      "parentUuid": "f5f39251_67eb742c",
      "range": {
        "startLine": 33,
        "startChar": 7,
        "endLine": 33,
        "endChar": 52
      },
      "revId": "79d4c6092bd8710f7b934aab21892243e20cb84c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4e9275b_4bd3fee9",
        "filename": "plat/arm/board/fvp/fvp_trusted_boot.c",
        "patchSetId": 14
      },
      "lineNbr": 33,
      "author": {
        "id": 1000279
      },
      "writtenOn": "2020-01-27T17:02:02Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "8123ab36_b3456e36",
      "range": {
        "startLine": 33,
        "startChar": 7,
        "endLine": 33,
        "endChar": 52
      },
      "revId": "79d4c6092bd8710f7b934aab21892243e20cb84c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37d51637_f7aa1be6",
        "filename": "plat/arm/board/juno/juno_trusted_boot.c",
        "patchSetId": 14
      },
      "lineNbr": 120,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2020-01-24T10:45:44Z",
      "side": 1,
      "message": "Could this be moved to the build system instead? First of all, it would unclutter this function code a bit (I find it quite difficult to read with all these preprocessor conditionals right now). Also, I think it\u0027s best if build options dependencies are handled in the build system, as it will simplify the transition to a Kconfig-like system in the future. If some dependencies are buried into the code instead, it will them harder to identify.",
      "range": {
        "startLine": 117,
        "startChar": 0,
        "endLine": 120,
        "endChar": 0
      },
      "revId": "79d4c6092bd8710f7b934aab21892243e20cb84c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0a5dd58_077415f2",
        "filename": "plat/arm/board/juno/juno_trusted_boot.c",
        "patchSetId": 14
      },
      "lineNbr": 120,
      "author": {
        "id": 1000279
      },
      "writtenOn": "2020-01-27T11:41:06Z",
      "side": 1,
      "message": "I suggest we remove this check in general. We are defining this constant in makefile anyways and there is no way it is not defined if we are not using a cryptocell. Seems like unnecessary check for me.",
      "parentUuid": "37d51637_f7aa1be6",
      "range": {
        "startLine": 117,
        "startChar": 0,
        "endLine": 120,
        "endChar": 0
      },
      "revId": "79d4c6092bd8710f7b934aab21892243e20cb84c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "162fd97c_a423ab1d",
        "filename": "plat/arm/board/juno/juno_trusted_boot.c",
        "patchSetId": 14
      },
      "lineNbr": 120,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2020-01-27T13:57:28Z",
      "side": 1,
      "message": "Sounds good to me!",
      "parentUuid": "d0a5dd58_077415f2",
      "range": {
        "startLine": 117,
        "startChar": 0,
        "endLine": 120,
        "endChar": 0
      },
      "revId": "79d4c6092bd8710f7b934aab21892243e20cb84c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ccbe1ec9_d9c73ac1",
        "filename": "plat/arm/board/juno/juno_trusted_boot.c",
        "patchSetId": 14
      },
      "lineNbr": 120,
      "author": {
        "id": 1000279
      },
      "writtenOn": "2020-01-27T17:02:02Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "162fd97c_a423ab1d",
      "range": {
        "startLine": 117,
        "startChar": 0,
        "endLine": 120,
        "endChar": 0
      },
      "revId": "79d4c6092bd8710f7b934aab21892243e20cb84c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    }
  ]
}