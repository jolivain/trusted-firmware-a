{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4fb42a47_54f3bc76",
        "filename": "drivers/st/io/io_mmc.c",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 1000337
      },
      "writtenOn": "2021-03-30T09:15:01Z",
      "side": 1,
      "message": "Should be #ifdef, but I think this is out-of-place for generic code. Couldn\u0027t you add a second mmc_boot_block_read and leave it to SoC-specific code to decide whether to call it or not?",
      "revId": "9ece311061379d0dca126606c8d8a560cf52a27c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24879b76_025adc16",
        "filename": "drivers/st/io/io_mmc.c",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 1000578
      },
      "writtenOn": "2021-03-30T10:25:14Z",
      "side": 1,
      "message": "I\u0027m not sure what you mean here. This is not a generic code, but ST driver. Where would you expect another version of mmc_boot_block_read to be called",
      "parentUuid": "4fb42a47_54f3bc76",
      "revId": "9ece311061379d0dca126606c8d8a560cf52a27c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64011f85_ea2e6a25",
        "filename": "drivers/st/io/io_mmc.c",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 1000337
      },
      "writtenOn": "2021-03-30T10:30:58Z",
      "side": 1,
      "message": "Ah, didn\u0027t notice the /st/ part in the path. Apologies. I still think it would be better to leave the decision of whether to read from user or boot partition to the boot code, so both can co-exist. See my comment on the Makefile.",
      "parentUuid": "24879b76_025adc16",
      "revId": "9ece311061379d0dca126606c8d8a560cf52a27c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c3bb0e1_3eec4bde",
        "filename": "drivers/st/io/io_mmc.c",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2021-03-31T16:31:11Z",
      "side": 1,
      "message": "Same here, I\u0027d prefer this code is under a feature flag and not an offset flag.",
      "parentUuid": "64011f85_ea2e6a25",
      "revId": "9ece311061379d0dca126606c8d8a560cf52a27c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "87ce7305_0b714e3b",
        "filename": "drivers/st/io/io_mmc.c",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 1000578
      },
      "writtenOn": "2021-04-03T17:05:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8c3bb0e1_3eec4bde",
      "revId": "9ece311061379d0dca126606c8d8a560cf52a27c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b604d1e6_df59b297",
        "filename": "plat/st/common/bl2_io_storage.c",
        "patchSetId": 1
      },
      "lineNbr": 280,
      "author": {
        "id": 1000337
      },
      "writtenOn": "2021-03-30T09:15:01Z",
      "side": 1,
      "message": "Should be ifndef. I assume this would generate a preprocessor warning for configurations that don\u0027t have this defined.",
      "revId": "9ece311061379d0dca126606c8d8a560cf52a27c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d4427d5_07c82593",
        "filename": "plat/st/common/bl2_io_storage.c",
        "patchSetId": 1
      },
      "lineNbr": 280,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2021-03-31T16:31:11Z",
      "side": 1,
      "message": "If you change to a feature flag, then the #if should be OK, if the flag is also in \"$(eval $(call assert_booleans,\" list.\nThat said, I\u0027d prefer you put __unused here instead of having this under flag.",
      "parentUuid": "b604d1e6_df59b297",
      "revId": "9ece311061379d0dca126606c8d8a560cf52a27c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3310aa4a_31ab8dd4",
        "filename": "plat/st/common/bl2_io_storage.c",
        "patchSetId": 1
      },
      "lineNbr": 280,
      "author": {
        "id": 1000578
      },
      "writtenOn": "2021-04-03T17:05:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6d4427d5_07c82593",
      "revId": "9ece311061379d0dca126606c8d8a560cf52a27c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92163196_4560abd9",
        "filename": "plat/st/common/bl2_io_storage.c",
        "patchSetId": 1
      },
      "lineNbr": 328,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2021-03-31T16:31:11Z",
      "side": 1,
      "message": "I\u0027d prefer the \"#if STM32MP_SSBL_OFFSET\" part first",
      "revId": "9ece311061379d0dca126606c8d8a560cf52a27c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5a9c5b18_127633e6",
        "filename": "plat/st/common/bl2_io_storage.c",
        "patchSetId": 1
      },
      "lineNbr": 328,
      "author": {
        "id": 1000578
      },
      "writtenOn": "2021-04-03T17:05:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "92163196_4560abd9",
      "revId": "9ece311061379d0dca126606c8d8a560cf52a27c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27dd0ae4_5d6a4ec6",
        "filename": "plat/st/stm32mp1/platform.mk",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1000337
      },
      "writtenOn": "2021-03-30T09:15:01Z",
      "side": 1,
      "message": "I\u0027d prefer this not be configurable. The TF-A is known to be always 256K big on this platform, because that\u0027s a limit enforced by SRAM size. Why not assume SSBL_OFFSET to be 256K?\n\nUsers should still be able to decide whether they want to boot from eMMC boot partition or not. STM32MP_EMMC_BOOT could be the new option to select this. If it\u0027s selected, the boot code would check the header at SSBL_OFFSET and if not valid header is found, it would continue with STM32MP_EMMC if defined.\n\nDoing it this way would make life easier for SSBL and later stages: need to update bootloader?\njust round up TF-A size to 256K and append SSBL and write both to the start of the inactive boot partition.",
      "revId": "9ece311061379d0dca126606c8d8a560cf52a27c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "285dab1f_ea744e7a",
        "filename": "plat/st/stm32mp1/platform.mk",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1000578
      },
      "writtenOn": "2021-03-30T12:01:34Z",
      "side": 1,
      "message": "I agree on a fixed offset. I made it configurable in order to be able to place OPTEE there too, if someone has that use case.\n\nAs for the fallback part, that sounds reasonable, but easier said than done. Current implementation of EMMC boot (in plat/st/common/bl2_io_storage.c) always expects a GPT partition with label \"ssbl\", which makes suggested boot workflow (when SSBL in the same boot partition) mutually exclusive.",
      "parentUuid": "27dd0ae4_5d6a4ec6",
      "revId": "9ece311061379d0dca126606c8d8a560cf52a27c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a58b4abc_cc3df348",
        "filename": "plat/st/stm32mp1/platform.mk",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1000578
      },
      "writtenOn": "2021-04-03T17:05:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "285dab1f_ea744e7a",
      "revId": "9ece311061379d0dca126606c8d8a560cf52a27c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4f725f4_327b8875",
        "filename": "plat/st/stm32mp1/platform.mk",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2021-03-31T16:31:11Z",
      "side": 1,
      "message": "Put the flag here as well (if it is not an offset)",
      "revId": "9ece311061379d0dca126606c8d8a560cf52a27c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ee65ba9c_02e749a1",
        "filename": "plat/st/stm32mp1/platform.mk",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1000578
      },
      "writtenOn": "2021-04-03T17:05:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b4f725f4_327b8875",
      "revId": "9ece311061379d0dca126606c8d8a560cf52a27c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}