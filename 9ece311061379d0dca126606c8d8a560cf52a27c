{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4fb42a47_54f3bc76",
        "filename": "drivers/st/io/io_mmc.c",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 1000337
      },
      "writtenOn": "2021-03-30T09:15:01Z",
      "side": 1,
      "message": "Should be #ifdef, but I think this is out-of-place for generic code. Couldn\u0027t you add a second mmc_boot_block_read and leave it to SoC-specific code to decide whether to call it or not?",
      "revId": "9ece311061379d0dca126606c8d8a560cf52a27c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24879b76_025adc16",
        "filename": "drivers/st/io/io_mmc.c",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 1000578
      },
      "writtenOn": "2021-03-30T10:25:14Z",
      "side": 1,
      "message": "I\u0027m not sure what you mean here. This is not a generic code, but ST driver. Where would you expect another version of mmc_boot_block_read to be called",
      "parentUuid": "4fb42a47_54f3bc76",
      "revId": "9ece311061379d0dca126606c8d8a560cf52a27c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b604d1e6_df59b297",
        "filename": "plat/st/common/bl2_io_storage.c",
        "patchSetId": 1
      },
      "lineNbr": 280,
      "author": {
        "id": 1000337
      },
      "writtenOn": "2021-03-30T09:15:01Z",
      "side": 1,
      "message": "Should be ifndef. I assume this would generate a preprocessor warning for configurations that don\u0027t have this defined.",
      "revId": "9ece311061379d0dca126606c8d8a560cf52a27c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27dd0ae4_5d6a4ec6",
        "filename": "plat/st/stm32mp1/platform.mk",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1000337
      },
      "writtenOn": "2021-03-30T09:15:01Z",
      "side": 1,
      "message": "I\u0027d prefer this not be configurable. The TF-A is known to be always 256K big on this platform, because that\u0027s a limit enforced by SRAM size. Why not assume SSBL_OFFSET to be 256K?\n\nUsers should still be able to decide whether they want to boot from eMMC boot partition or not. STM32MP_EMMC_BOOT could be the new option to select this. If it\u0027s selected, the boot code would check the header at SSBL_OFFSET and if not valid header is found, it would continue with STM32MP_EMMC if defined.\n\nDoing it this way would make life easier for SSBL and later stages: need to update bootloader?\njust round up TF-A size to 256K and append SSBL and write both to the start of the inactive boot partition.",
      "revId": "9ece311061379d0dca126606c8d8a560cf52a27c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}