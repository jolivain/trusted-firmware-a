{
  "comments": [
    {
      "key": {
        "uuid": "0a3d5eef_5baa6855",
        "filename": "lib/libc/memset.c",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 1000440
      },
      "writtenOn": "2020-10-29T13:25:08Z",
      "side": 1,
      "message": "This should be 8U I think",
      "range": {
        "startLine": 38,
        "startChar": 30,
        "endLine": 38,
        "endChar": 31
      },
      "revId": "15f21d08d38a283cf0fbb0d4de1ebc2bd3a26caf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45c2c728_3c877a78",
        "filename": "lib/libc/memset.c",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2020-10-29T15:50:12Z",
      "side": 1,
      "message": "Well, but this is *subtracting* 8, so I think this is really not the case for the MISRA rule here - at least it sounds quite weird to do essentially \"count -\u003d +8\". Did the checker actually complain about that?\nRule 7.2 seems to speak of \"integer constants represented in an unsigned type\" - whatever that means, really, but I read it as not being the case here.",
      "parentUuid": "0a3d5eef_5baa6855",
      "range": {
        "startLine": 38,
        "startChar": 30,
        "endLine": 38,
        "endChar": 31
      },
      "revId": "15f21d08d38a283cf0fbb0d4de1ebc2bd3a26caf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61b5bd17_0624da1c",
        "filename": "lib/libc/memset.c",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 1000440
      },
      "writtenOn": "2020-10-29T16:06:30Z",
      "side": 1,
      "message": "This would be rule 10.4 \u0027both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category\u0027\nAIUI \u0027count -\u003d 8\u0027 is a shorthand for \u0027count \u003d (count - 8)\u0027, so the \u0027-\u0027 operator should have both operands be unsigned (count and 8)",
      "parentUuid": "45c2c728_3c877a78",
      "range": {
        "startLine": 38,
        "startChar": 30,
        "endLine": 38,
        "endChar": 31
      },
      "revId": "15f21d08d38a283cf0fbb0d4de1ebc2bd3a26caf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    }
  ]
}