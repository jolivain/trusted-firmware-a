{
  "comments": [
    {
      "key": {
        "uuid": "0aa71edc_66d7aa6c",
        "filename": "services/std_svc/std_svc_setup.c",
        "patchSetId": 2
      },
      "lineNbr": 181,
      "author": {
        "id": 1000440
      },
      "writtenOn": "2021-01-07T12:50:33Z",
      "side": 1,
      "message": "MISRA rules 10.1 and 14.4 - this should be:\nif (pci_read_config(...) !\u003d 0U)",
      "revId": "84ae155dcf126188dbc7cb37429e831c26001500",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35babdbc_ce12608f",
        "filename": "services/std_svc/std_svc_setup.c",
        "patchSetId": 2
      },
      "lineNbr": 195,
      "author": {
        "id": 1000440
      },
      "writtenOn": "2021-01-07T12:50:33Z",
      "side": 1,
      "message": "MISRA rule 10.1 - this needs to be:\nif ((x2 !\u003d 0U) || (x3 !\u003d 0U) || (x4 !\u003d 0U)) {\nas the operands of the \u0027||\u0027 must have essentially boolean type.",
      "revId": "84ae155dcf126188dbc7cb37429e831c26001500",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f776b930_12ece149",
        "filename": "services/std_svc/std_svc_setup.c",
        "patchSetId": 2
      },
      "lineNbr": 198,
      "author": {
        "id": 1000440
      },
      "writtenOn": "2021-01-07T12:50:33Z",
      "side": 1,
      "message": "style nit: the \u0027\u003d\u003d\u0027 should be surrounded by spaces - see https://trustedfirmware-a.readthedocs.io/en/latest/process/coding-style.html#spacing",
      "range": {
        "startLine": 198,
        "startChar": 8,
        "endLine": 198,
        "endChar": 10
      },
      "revId": "84ae155dcf126188dbc7cb37429e831c26001500",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "454838a8_158e862b",
        "filename": "services/std_svc/std_svc_setup.c",
        "patchSetId": 2
      },
      "lineNbr": 198,
      "author": {
        "id": 1000503
      },
      "writtenOn": "2021-01-14T18:12:27Z",
      "side": 1,
      "message": "I need to point out that my own testing found a compliance (bug) issue with the spec here. So if anyone is testing/looking at this code. Its wrong, and I need to add another parameter to pci_get_bus_for_seg() and handle the return properly.",
      "revId": "84ae155dcf126188dbc7cb37429e831c26001500",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7e65274_3d8d8d67",
        "filename": "services/std_svc/std_svc_setup.c",
        "patchSetId": 2
      },
      "lineNbr": 206,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2021-01-23T00:24:32Z",
      "side": 1,
      "message": "Hi Jeremy,\nSimilar to other standard services, please wrap these into a new function(something like is_smc_pci_fid()) after creating a new source file which provides the functionality for pci services.\n\nEx: services/std_svc/smc_pci/smc_pci_main.c\n\nIt can be then included in this file as follows:\n\n#if SMC_PCI_SUPPORT\n        if (is_smc_pci_fid(smc_fid)) {\n                return pci_smc_handler(smc_fid, x1, x2, x3, x4, cookie, handle,\n                                flags);\n        }\n#endif",
      "range": {
        "startLine": 159,
        "startChar": 0,
        "endLine": 206,
        "endChar": 0
      },
      "revId": "84ae155dcf126188dbc7cb37429e831c26001500",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    }
  ]
}