{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9b19a0f4_7a6f7125",
        "filename": "plat/st/stm32mp2/bl2_plat_setup.c",
        "patchSetId": 3
      },
      "lineNbr": 236,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2024-08-12T11:36:45Z",
      "side": 1,
      "message": "This is not getting consumed in below code.",
      "range": {
        "startLine": 236,
        "startChar": 1,
        "endLine": 236,
        "endChar": 13
      },
      "revId": "e1f142bd63c0115f200e3f72d0a67715eb484de4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1129027e_abf215fa",
        "filename": "plat/st/stm32mp2/bl2_plat_setup.c",
        "patchSetId": 3
      },
      "lineNbr": 236,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2024-08-12T12:04:54Z",
      "side": 1,
      "message": "Hi Manish,\nThis happens when splitting patches by features. The BL31 \u0026 BL32 parts will be added later. See https://github.com/STMicroelectronics/arm-trusted-firmware/blob/v2.8-stm32mp/plat/st/stm32mp2/bl2_plat_setup.c. I\u0027ll push the other patches when this series is merged. If needed I can rework this patch (removing err), and the one that adds BL31 support (adding back err).",
      "parentUuid": "9b19a0f4_7a6f7125",
      "range": {
        "startLine": 236,
        "startChar": 1,
        "endLine": 236,
        "endChar": 13
      },
      "revId": "e1f142bd63c0115f200e3f72d0a67715eb484de4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "71d3fbaa_1d488b04",
        "filename": "plat/st/stm32mp2/bl2_plat_setup.c",
        "patchSetId": 3
      },
      "lineNbr": 236,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2024-08-12T12:29:46Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "1129027e_abf215fa",
      "range": {
        "startLine": 236,
        "startChar": 1,
        "endLine": 236,
        "endChar": 13
      },
      "revId": "e1f142bd63c0115f200e3f72d0a67715eb484de4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fba0398c_4dd2ed39",
        "filename": "plat/st/stm32mp2/bl2_plat_setup.c",
        "patchSetId": 3
      },
      "lineNbr": 250,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2024-08-12T11:36:45Z",
      "side": 1,
      "message": "I\u0027m curious, why are there only 2 MMC blocks to invalidate?",
      "range": {
        "startLine": 250,
        "startChar": 4,
        "endLine": 250,
        "endChar": 26
      },
      "revId": "e1f142bd63c0115f200e3f72d0a67715eb484de4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17b04c02_b5d8dd89",
        "filename": "plat/st/stm32mp2/bl2_plat_setup.c",
        "patchSetId": 3
      },
      "lineNbr": 250,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2024-08-12T12:04:54Z",
      "side": 1,
      "message": "This was the same for STM32MP1, and discussed there: https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/10663/12/plat/st/stm32mp1/bl2_plat_setup.c ;-)",
      "parentUuid": "fba0398c_4dd2ed39",
      "range": {
        "startLine": 250,
        "startChar": 4,
        "endLine": 250,
        "endChar": 26
      },
      "revId": "e1f142bd63c0115f200e3f72d0a67715eb484de4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5cddadba_6c03a2bf",
        "filename": "plat/st/stm32mp2/bl2_plat_setup.c",
        "patchSetId": 3
      },
      "lineNbr": 250,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2024-08-12T12:29:46Z",
      "side": 1,
      "message": "Thanks for reminding!",
      "parentUuid": "17b04c02_b5d8dd89",
      "range": {
        "startLine": 250,
        "startChar": 4,
        "endLine": 250,
        "endChar": 26
      },
      "revId": "e1f142bd63c0115f200e3f72d0a67715eb484de4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c34d8a3_be0f9e40",
        "filename": "plat/st/stm32mp2/bl2_plat_setup.c",
        "patchSetId": 3
      },
      "lineNbr": 261,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2024-08-12T11:36:45Z",
      "side": 1,
      "message": "I\u0027m curious why this region needs to be mapped and unmapped dynamically. Is it later repurposed for another use case?",
      "range": {
        "startLine": 261,
        "startChar": 0,
        "endLine": 261,
        "endChar": 61
      },
      "revId": "e1f142bd63c0115f200e3f72d0a67715eb484de4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b701563_090d780d",
        "filename": "plat/st/stm32mp2/bl2_plat_setup.c",
        "patchSetId": 3
      },
      "lineNbr": 261,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2024-08-12T12:04:54Z",
      "side": 1,
      "message": "Due to limited size of embedded SRAM, this area will be used by BL31.",
      "parentUuid": "2c34d8a3_be0f9e40",
      "range": {
        "startLine": 261,
        "startChar": 0,
        "endLine": 261,
        "endChar": 61
      },
      "revId": "e1f142bd63c0115f200e3f72d0a67715eb484de4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3482073_44448125",
        "filename": "plat/st/stm32mp2/bl2_plat_setup.c",
        "patchSetId": 3
      },
      "lineNbr": 261,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2024-08-12T12:29:46Z",
      "side": 1,
      "message": "If we map this area statically in BL2, there shouldn\u0027t be any issues (provide DTB base and limit is fixed), correct? BL31 can still map it later for its own use.",
      "parentUuid": "7b701563_090d780d",
      "range": {
        "startLine": 261,
        "startChar": 0,
        "endLine": 261,
        "endChar": 61
      },
      "revId": "e1f142bd63c0115f200e3f72d0a67715eb484de4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eabb9f9a_15d7ff81",
        "filename": "plat/st/stm32mp2/bl2_plat_setup.c",
        "patchSetId": 3
      },
      "lineNbr": 261,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2024-08-12T13:02:18Z",
      "side": 1,
      "message": "The issue is not in BL31, but really the loading of BL31 binary here in BL2.\nWe have:\nBL2 DT from 0x0e01100 to 0x0e01600\nBL2 from 0x0e01600 to 0x0e040000\n\nAnd then we\u0027ll load BL31 binary from 0x0e000000 to 0x0e015780.\nThen at runtime, BL31 will use memory from 0x0e000000 to 0x0e020000.\nThat\u0027s why we need to unmap BL2 DT here, as it is no more used after FW-CONFIG loading, and a part of its area will be used to load BL31, with different access (read-write while it was read-only for BL2 DT).",
      "parentUuid": "f3482073_44448125",
      "range": {
        "startLine": 261,
        "startChar": 0,
        "endLine": 261,
        "endChar": 61
      },
      "revId": "e1f142bd63c0115f200e3f72d0a67715eb484de4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2cdd6a77_15052f87",
        "filename": "plat/st/stm32mp2/bl2_plat_setup.c",
        "patchSetId": 3
      },
      "lineNbr": 261,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2024-08-12T13:11:01Z",
      "side": 1,
      "message": "Acknowledged, that makes sense then!",
      "parentUuid": "eabb9f9a_15d7ff81",
      "range": {
        "startLine": 261,
        "startChar": 0,
        "endLine": 261,
        "endChar": 61
      },
      "revId": "e1f142bd63c0115f200e3f72d0a67715eb484de4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20eb85dd_48b82155",
        "filename": "plat/st/stm32mp2/bl2_plat_setup.c",
        "patchSetId": 3
      },
      "lineNbr": 262,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2024-08-12T11:36:45Z",
      "side": 1,
      "message": "Is explicit invalidation necessary here if ``load_auth_image`` handles the flushing?",
      "range": {
        "startLine": 262,
        "startChar": 0,
        "endLine": 262,
        "endChar": 51
      },
      "revId": "e1f142bd63c0115f200e3f72d0a67715eb484de4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea81ba37_abfc60af",
        "filename": "plat/st/stm32mp2/bl2_plat_setup.c",
        "patchSetId": 3
      },
      "lineNbr": 262,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2024-08-12T12:04:54Z",
      "side": 1,
      "message": "`load_auth_image` will flush the exact size of the DT binary, not all the area. This will be the same issue as for the 2 MMC blocks invalidation. But I wonder if this is really necessary, as this area is read-only, so the cache should not be dirty. I could run some tests to check that.",
      "parentUuid": "20eb85dd_48b82155",
      "range": {
        "startLine": 262,
        "startChar": 0,
        "endLine": 262,
        "endChar": 51
      },
      "revId": "e1f142bd63c0115f200e3f72d0a67715eb484de4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6f3180f_122ab80f",
        "filename": "plat/st/stm32mp2/bl2_plat_setup.c",
        "patchSetId": 3
      },
      "lineNbr": 262,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2024-08-12T12:29:46Z",
      "side": 1,
      "message": "Yes agree! Please let me know your findings. Thanks!",
      "parentUuid": "ea81ba37_abfc60af",
      "range": {
        "startLine": 262,
        "startChar": 0,
        "endLine": 262,
        "endChar": 51
      },
      "revId": "e1f142bd63c0115f200e3f72d0a67715eb484de4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c64b13df_92fa1227",
        "filename": "plat/st/stm32mp2/bl2_plat_setup.c",
        "patchSetId": 3
      },
      "lineNbr": 262,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2024-08-12T13:34:41Z",
      "side": 1,
      "message": "After digging a bit in our internal tree, I found that we had a cache issue, but not properly understood at that time. The real correction for this is in BL31, and will be upstreamed after this series. So this cache invalidation is useless. I\u0027ll remove it.",
      "parentUuid": "a6f3180f_122ab80f",
      "range": {
        "startLine": 262,
        "startChar": 0,
        "endLine": 262,
        "endChar": 51
      },
      "revId": "e1f142bd63c0115f200e3f72d0a67715eb484de4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "88aba72f_1a456024",
        "filename": "plat/st/stm32mp2/bl2_plat_setup.c",
        "patchSetId": 3
      },
      "lineNbr": 262,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2024-08-12T13:57:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c64b13df_92fa1227",
      "range": {
        "startLine": 262,
        "startChar": 0,
        "endLine": 262,
        "endChar": 51
      },
      "revId": "e1f142bd63c0115f200e3f72d0a67715eb484de4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22f4bc53_1947b2f7",
        "filename": "plat/st/stm32mp2/bl2_plat_setup.c",
        "patchSetId": 3
      },
      "lineNbr": 271,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2024-08-12T11:36:45Z",
      "side": 1,
      "message": "return 0 instead?",
      "range": {
        "startLine": 271,
        "startChar": 1,
        "endLine": 271,
        "endChar": 11
      },
      "revId": "e1f142bd63c0115f200e3f72d0a67715eb484de4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6987ea8e_bbbc3965",
        "filename": "plat/st/stm32mp2/bl2_plat_setup.c",
        "patchSetId": 3
      },
      "lineNbr": 271,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2024-08-12T12:04:54Z",
      "side": 1,
      "message": "same as for the first comment.",
      "parentUuid": "22f4bc53_1947b2f7",
      "range": {
        "startLine": 271,
        "startChar": 1,
        "endLine": 271,
        "endChar": 11
      },
      "revId": "e1f142bd63c0115f200e3f72d0a67715eb484de4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6305871a_b199f249",
        "filename": "plat/st/stm32mp2/bl2_plat_setup.c",
        "patchSetId": 3
      },
      "lineNbr": 271,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2024-08-12T13:57:13Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "6987ea8e_bbbc3965",
      "range": {
        "startLine": 271,
        "startChar": 1,
        "endLine": 271,
        "endChar": 11
      },
      "revId": "e1f142bd63c0115f200e3f72d0a67715eb484de4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}