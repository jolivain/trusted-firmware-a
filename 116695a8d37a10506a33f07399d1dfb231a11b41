{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f53b606a_85cd8060",
        "filename": "lib/cpus/aarch64/neoverse_n1.S",
        "patchSetId": 13
      },
      "lineNbr": 239,
      "author": {
        "id": 1000101
      },
      "writtenOn": "2023-08-07T15:40:55Z",
      "side": 1,
      "message": "It\u0027s my understanding we will have to add this option once per power down if apply_erratum is present otherwise by default the revision could be stale in x10, is this correct? If so we need to be aware of this when adding the apply_erratum macro in the future",
      "range": {
        "startLine": 239,
        "startChar": 65,
        "endLine": 239,
        "endChar": 76
      },
      "revId": "116695a8d37a10506a33f07399d1dfb231a11b41",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54b5fa98_f6e5b7dc",
        "filename": "lib/cpus/aarch64/neoverse_n1.S",
        "patchSetId": 13
      },
      "lineNbr": 239,
      "author": {
        "id": 1000744
      },
      "writtenOn": "2023-08-07T16:42:16Z",
      "side": 1,
      "message": "Yes that\u0027s right, our expectation without this option is that the revision has already been cached in x10. Without it the sequence will write a junk or stale value into x0.",
      "parentUuid": "f53b606a_85cd8060",
      "range": {
        "startLine": 239,
        "startChar": 65,
        "endLine": 239,
        "endChar": 76
      },
      "revId": "116695a8d37a10506a33f07399d1dfb231a11b41",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cf08dc1b_f5c91e26",
        "filename": "lib/cpus/aarch64/neoverse_n1.S",
        "patchSetId": 13
      },
      "lineNbr": 239,
      "author": {
        "id": 1000101
      },
      "writtenOn": "2023-08-07T16:52:37Z",
      "side": 1,
      "message": "Ok, we need to be aware of this for the CPU conversions merged, but not yet in master in case they need to use this. Along with when this is used in the future, I wonder if this needs to be more explicit it documentation.\n\nWill mark as resolved, but I would maybe add something in documentation.",
      "parentUuid": "54b5fa98_f6e5b7dc",
      "range": {
        "startLine": 239,
        "startChar": 65,
        "endLine": 239,
        "endChar": 76
      },
      "revId": "116695a8d37a10506a33f07399d1dfb231a11b41",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c0e877b_74a543c6",
        "filename": "lib/cpus/aarch64/neoverse_n1.S",
        "patchSetId": 13
      },
      "lineNbr": 239,
      "author": {
        "id": 1000910
      },
      "writtenOn": "2023-08-07T17:31:04Z",
      "side": 1,
      "message": "yes, I had the same doubt.. because for the merged CPU conversions, the apply erratum macro will have to include the GET_CPU_REV to ensure that the rev and variant check is called once,\nfor e.g. I think in this patch,  https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/21540/13/lib/cpus/aarch64/cortex_a78.S#195 here since the default will be _get_rev\u003dNO_GET_CPU_REV, we will have to ensure we add correct parameter to check.",
      "parentUuid": "cf08dc1b_f5c91e26",
      "range": {
        "startLine": 239,
        "startChar": 65,
        "endLine": 239,
        "endChar": 76
      },
      "revId": "116695a8d37a10506a33f07399d1dfb231a11b41",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}