{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ad2b68e7_811ef123",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2022-12-19T16:11:24Z",
      "side": 1,
      "message": "Although I agree with the rest of the commit message, I am not sure about this part. I don\u0027t think the authentication module enforces that the non-volatile counter extension is parsed after any signature verification. Standard TF-A chains of trust (as provided under drivers/auth/) typically do it in this way (through defining the non-volatile counter check \"authentication method\" last for all images) but platform ports are free to re-define their own chain of trust, which might do things in a different order.\n\nAFAICT, the only guarantee that the authentication module provides is if the non-volatile counter value inside the certificate requires incrementing the value in hardware, then the increment operation itself will be delayed after any signature verification on the certificate ; but the parsing of the non-volatile counter extension may still happen before that.\n\nI don\u0027t think that changes the rest of your conclusions below, though.",
      "range": {
        "startLine": 10,
        "startChar": 20,
        "endLine": 11,
        "endChar": 57
      },
      "revId": "5cf941c83069f051af47121e689fa835535fc65c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b9766a65_0184a618",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1000935
      },
      "writtenOn": "2023-01-01T23:22:04Z",
      "side": 1,
      "message": "I changed the commit message to include a proof that this cannot cause out-of-bounds reads.",
      "parentUuid": "ad2b68e7_811ef123",
      "range": {
        "startLine": 10,
        "startChar": 20,
        "endLine": 11,
        "endChar": 57
      },
      "revId": "5cf941c83069f051af47121e689fa835535fc65c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc72effb_1f448337",
        "filename": "drivers/auth/auth_mod.c",
        "patchSetId": 2
      },
      "lineNbr": 262,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2022-12-19T15:32:13Z",
      "side": 1,
      "message": "Just want to check my understanding here... 3 here is (1 byte for the tag) + (1 byte for the length) + (minimum 1 byte for the value), right?",
      "range": {
        "startLine": 262,
        "startChar": 6,
        "endLine": 262,
        "endChar": 18
      },
      "revId": "5cf941c83069f051af47121e689fa835535fc65c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8da4cad_8fe5d046",
        "filename": "drivers/auth/auth_mod.c",
        "patchSetId": 2
      },
      "lineNbr": 270,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2022-12-19T15:32:13Z",
      "side": 1,
      "message": "Again, just want to check my understanding... Previously the code used to explicity check the sign bit (*p \u0026 0x80) to make sure the length was positive. You\u0027re saying this is not necessary because len is an unsigned int and so any negative value will appear as a very high value near UINT_MAX, which will already be rejected by the (len \u003e 4) check.\n\nIs my understanding correct?",
      "range": {
        "startLine": 270,
        "startChar": 6,
        "endLine": 270,
        "endChar": 13
      },
      "revId": "5cf941c83069f051af47121e689fa835535fc65c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5365ef8d_a7f9fdc4",
        "filename": "drivers/auth/auth_mod.c",
        "patchSetId": 2
      },
      "lineNbr": 270,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2022-12-31T22:21:57Z",
      "side": 1,
      "message": "i\u0027m skeptical about removing the check too..is there a harm in keeping the 0x80 check?",
      "parentUuid": "d8da4cad_8fe5d046",
      "range": {
        "startLine": 270,
        "startChar": 6,
        "endLine": 270,
        "endChar": 13
      },
      "revId": "5cf941c83069f051af47121e689fa835535fc65c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "12e07f6d_2a085852",
        "filename": "drivers/auth/auth_mod.c",
        "patchSetId": 2
      },
      "lineNbr": 270,
      "author": {
        "id": 1000935
      },
      "writtenOn": "2023-01-01T23:22:04Z",
      "side": 1,
      "message": "I made p be ‘unsigned char*’, which avoids this problem entirely.",
      "parentUuid": "5365ef8d_a7f9fdc4",
      "range": {
        "startLine": 270,
        "startChar": 6,
        "endLine": 270,
        "endChar": 13
      },
      "revId": "5cf941c83069f051af47121e689fa835535fc65c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}