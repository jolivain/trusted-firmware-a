{
  "comments": [
    {
      "key": {
        "uuid": "405a98a4_54eb9eca",
        "filename": "plat/arm/common/arm_dyn_cfg.c",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2020-02-26T16:32:24Z",
      "side": 1,
      "message": "Instead of #if MEASURED_BOOT, it might be cleaner to create new file/module arm_measured_boot.c or something with get and set interface functions on these state variables. I see the same thing in arm_dyn_cfg_helpers too with the dtb_root variable. You can unconditionally call the measured boot functions without #if across source files and have the #if only inside arm_measured_boot.",
      "revId": "c5c0130b44896a26d64ed50d5343cc1c78ad7743",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c697699_d54cd84e",
        "filename": "plat/arm/common/arm_dyn_cfg.c",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2020-02-26T17:11:05Z",
      "side": 1,
      "message": "In that case I\u0027d have to use a global variables for dtb \u0026 dtb_root or make the code less optimized. I prefer to have (TB)_FW_CONFIG data set/get functionality in the same file for clarity.",
      "parentUuid": "405a98a4_54eb9eca",
      "revId": "c5c0130b44896a26d64ed50d5343cc1c78ad7743",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c933ec50_80e96d8c",
        "filename": "plat/arm/common/arm_dyn_cfg.c",
        "patchSetId": 1
      },
      "lineNbr": 115,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2020-02-26T16:32:24Z",
      "side": 1,
      "message": "nit: Can you add a comment that flushing happens in arm_bl1_set_bl1_hash when measured boot is enabled ?",
      "revId": "c5c0130b44896a26d64ed50d5343cc1c78ad7743",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1fcc264_e05f918c",
        "filename": "plat/arm/common/arm_dyn_cfg.c",
        "patchSetId": 1
      },
      "lineNbr": 115,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2020-02-26T17:11:05Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c933ec50_80e96d8c",
      "revId": "c5c0130b44896a26d64ed50d5343cc1c78ad7743",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01c42b30_3c3b4acc",
        "filename": "plat/arm/common/arm_dyn_cfg_helpers.c",
        "patchSetId": 1
      },
      "lineNbr": 122,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2020-02-26T16:32:24Z",
      "side": 1,
      "message": "nit:this might generate static analysis warnings. Compare to NULL? Also assert on data ? Might be a good idea for this function to take a size or make \u0027data\u0027 a fixed size array of TCG_DIGEST_SZIE. That way the compiler can enforce the size and also the expected size is clear to the caller.",
      "revId": "c5c0130b44896a26d64ed50d5343cc1c78ad7743",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1aa7cd88_652d690e",
        "filename": "plat/arm/common/arm_dyn_cfg_helpers.c",
        "patchSetId": 1
      },
      "lineNbr": 122,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2020-02-26T17:11:05Z",
      "side": 1,
      "message": "Sorry, I didn\u0027t get it.\nWhat kind of statis analysis warning this assert might generate?\ndtb_root is int, why would it be compared to NULL?\nIf you mean to add assertions for (dtb !\u003d NULL) \u0026\u0026 (data !\u003d NULL), then take a look @arm_set_dtb_mbedtls_heap_info() which doesn\u0027t have assertions dtb \u0026 head_addr.\nAlso see:\nint fdtw_write_inplace_bytes(void *dtb, int node, const char *prop,\n\t\t\t     unsigned int length, const void *data)\n{\n\tconst void *ptr;\n\tint namelen, value_len, err;\n\n\tassert(dtb !\u003d NULL);\n\tassert(prop !\u003d NULL);\n\tassert(data !\u003d NULL);\n\tassert(node \u003e\u003d 0);\n...\nwhich already has these assertions.",
      "parentUuid": "01c42b30_3c3b4acc",
      "revId": "c5c0130b44896a26d64ed50d5343cc1c78ad7743",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7780ef7_277fb65e",
        "filename": "plat/arm/common/arm_dyn_cfg_helpers.c",
        "patchSetId": 1
      },
      "lineNbr": 122,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2020-02-26T17:21:24Z",
      "side": 1,
      "message": "Oops! I thought you were asserting on dtb(the input parameter, not dtb_root) which is a void *. Sorry. My mistake! What about fixed size input for data, something line data[TCG_DIGEST_SIZE]? Is the length checked somewhere for data?",
      "parentUuid": "1aa7cd88_652d690e",
      "revId": "c5c0130b44896a26d64ed50d5343cc1c78ad7743",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a570f2e0_f317c2be",
        "filename": "plat/arm/common/arm_dyn_cfg_helpers.c",
        "patchSetId": 1
      },
      "lineNbr": 122,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2020-02-27T13:22:22Z",
      "side": 1,
      "message": "See\nvoid arm_bl1_set_bl2_hash(image_desc_t *image_desc)\n{\n\tunsigned char hash_data[MBEDTLS_MD_MAX_SIZE];\n\n...\n        err \u003d arm_set_bl2_hash_info(dtb, hash_data);\n\nwith TCG_DIGEST_SIZE \u003c\u003d MBEDTLS_MD_MAX_SIZE",
      "parentUuid": "c7780ef7_277fb65e",
      "revId": "c5c0130b44896a26d64ed50d5343cc1c78ad7743",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    }
  ]
}