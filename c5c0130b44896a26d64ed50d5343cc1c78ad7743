{
  "comments": [
    {
      "key": {
        "uuid": "405a98a4_54eb9eca",
        "filename": "plat/arm/common/arm_dyn_cfg.c",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2020-02-26T16:32:24Z",
      "side": 1,
      "message": "Instead of #if MEASURED_BOOT, it might be cleaner to create new file/module arm_measured_boot.c or something with get and set interface functions on these state variables. I see the same thing in arm_dyn_cfg_helpers too with the dtb_root variable. You can unconditionally call the measured boot functions without #if across source files and have the #if only inside arm_measured_boot.",
      "revId": "c5c0130b44896a26d64ed50d5343cc1c78ad7743",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c933ec50_80e96d8c",
        "filename": "plat/arm/common/arm_dyn_cfg.c",
        "patchSetId": 1
      },
      "lineNbr": 115,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2020-02-26T16:32:24Z",
      "side": 1,
      "message": "nit: Can you add a comment that flushing happens in arm_bl1_set_bl1_hash when measured boot is enabled ?",
      "revId": "c5c0130b44896a26d64ed50d5343cc1c78ad7743",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01c42b30_3c3b4acc",
        "filename": "plat/arm/common/arm_dyn_cfg_helpers.c",
        "patchSetId": 1
      },
      "lineNbr": 122,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2020-02-26T16:32:24Z",
      "side": 1,
      "message": "nit:this might generate static analysis warnings. Compare to NULL? Also assert on data ? Might be a good idea for this function to take a size or make \u0027data\u0027 a fixed size array of TCG_DIGEST_SZIE. That way the compiler can enforce the size and also the expected size is clear to the caller.",
      "revId": "c5c0130b44896a26d64ed50d5343cc1c78ad7743",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    }
  ]
}