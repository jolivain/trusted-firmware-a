{
  "comments": [
    {
      "key": {
        "uuid": "fea08236_68c1fe71",
        "filename": "include/services/pci_svc.h",
        "patchSetId": 4
      },
      "lineNbr": 9,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2021-01-28T11:09:05Z",
      "side": 1,
      "message": "Need to include utils_def.h to get the definition of U() macro.",
      "revId": "de9c3ea169e6d859ff7932b7d96883aa140b8ccf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a9f6ab4_f656a227",
        "filename": "include/services/pci_svc.h",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2021-01-28T11:09:05Z",
      "side": 1,
      "message": "Enclose dev in parentheses.",
      "range": {
        "startLine": 24,
        "startChar": 27,
        "endLine": 24,
        "endChar": 30
      },
      "revId": "de9c3ea169e6d859ff7932b7d96883aa140b8ccf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1034e53_77b92db4",
        "filename": "include/services/pci_svc.h",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2021-01-28T11:09:05Z",
      "side": 1,
      "message": "(style) Use a lower-case \u0027m\u0027: minor.",
      "range": {
        "startLine": 31,
        "startChar": 11,
        "endLine": 31,
        "endChar": 16
      },
      "revId": "de9c3ea169e6d859ff7932b7d96883aa140b8ccf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "144fc1c2_4535256f",
        "filename": "include/services/pci_svc.h",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2021-01-28T11:09:05Z",
      "side": 1,
      "message": "(style) major",
      "range": {
        "startLine": 32,
        "startChar": 11,
        "endLine": 32,
        "endChar": 16
      },
      "revId": "de9c3ea169e6d859ff7932b7d96883aa140b8ccf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0e5129e_88a7e5a4",
        "filename": "include/services/pci_svc.h",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2021-01-28T11:09:05Z",
      "side": 1,
      "message": "Should this be uint32_t? I see that the spec encodes the device address as a 32-bit value in the PCI_READ interface, plus pci_write_config() below already uses a uint32_t, which seems inconsistent.\n\nSame question for the second and third arguments (the offset and the size).",
      "range": {
        "startLine": 43,
        "startChar": 25,
        "endLine": 43,
        "endChar": 33
      },
      "revId": "de9c3ea169e6d859ff7932b7d96883aa140b8ccf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a6fa10f_36da36f1",
        "filename": "include/services/pci_svc.h",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2021-01-28T11:09:05Z",
      "side": 1,
      "message": "I am assuming these functions return an error code (one of SMC_PCI_CALL_*), in which case, does it really matter to use exact-width types (uint32_t)? Could we use a simple int instead?",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 43,
        "endChar": 8
      },
      "revId": "de9c3ea169e6d859ff7932b7d96883aa140b8ccf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    }
  ]
}