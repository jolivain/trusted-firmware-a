{
  "comments": [
    {
      "key": {
        "uuid": "57362a8b_e77948bc",
        "filename": "lib/romlib/Makefile",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 1000051
      },
      "writtenOn": "2019-07-17T11:41:51Z",
      "side": 1,
      "message": "This is not needed since you are just changing the suffix.",
      "range": {
        "startLine": 24,
        "startChar": 40,
        "endLine": 24,
        "endChar": 41
      },
      "revId": "3cee0d3b21ceaafa0c9fab34553370b6e8a03b08",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "efadbdcf_00e99117",
        "filename": "lib/romlib/Makefile",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 1000051
      },
      "writtenOn": "2019-07-17T11:41:51Z",
      "side": 1,
      "message": "Remove that, too.",
      "range": {
        "startLine": 24,
        "startChar": 44,
        "endLine": 24,
        "endChar": 45
      },
      "revId": "3cee0d3b21ceaafa0c9fab34553370b6e8a03b08",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f50a8f0c_a7be5364",
        "filename": "lib/romlib/Makefile",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 1000159
      },
      "writtenOn": "2019-07-17T13:50:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "efadbdcf_00e99117",
      "range": {
        "startLine": 24,
        "startChar": 44,
        "endLine": 24,
        "endChar": 45
      },
      "revId": "3cee0d3b21ceaafa0c9fab34553370b6e8a03b08",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2950191c_74061702",
        "filename": "lib/romlib/Makefile",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 1000159
      },
      "writtenOn": "2019-07-17T13:50:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "57362a8b_e77948bc",
      "range": {
        "startLine": 24,
        "startChar": 40,
        "endLine": 24,
        "endChar": 41
      },
      "revId": "3cee0d3b21ceaafa0c9fab34553370b6e8a03b08",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1e05142_4931b1ee",
        "filename": "lib/romlib/templates/jmptbl_entry_function.S",
        "patchSetId": 2
      },
      "lineNbr": 2,
      "author": {
        "id": 1000051
      },
      "writtenOn": "2019-07-17T11:41:51Z",
      "side": 1,
      "message": "Remove that part from all new files",
      "range": {
        "startLine": 2,
        "startChar": 34,
        "endLine": 2,
        "endChar": 51
      },
      "revId": "3cee0d3b21ceaafa0c9fab34553370b6e8a03b08",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c31c88f_2655da34",
        "filename": "lib/romlib/templates/jmptbl_entry_function.S",
        "patchSetId": 2
      },
      "lineNbr": 2,
      "author": {
        "id": 1000159
      },
      "writtenOn": "2019-07-17T13:50:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f1e05142_4931b1ee",
      "range": {
        "startLine": 2,
        "startChar": 34,
        "endLine": 2,
        "endChar": 51
      },
      "revId": "3cee0d3b21ceaafa0c9fab34553370b6e8a03b08",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cf5d1a2a_ea3ce154",
        "filename": "lib/romlib/templates/jmptbl_entry_reserved_bti.S",
        "patchSetId": 2
      },
      "lineNbr": 6,
      "author": {
        "id": 1000051
      },
      "writtenOn": "2019-07-17T11:41:51Z",
      "side": 1,
      "message": "Since this will be a \"reserved\" entry in the jumptable, we should normally never arrive here, right?\n\nSo, if we land at this instruction that should be an error... I\u0027m thinking that this is a stale bug from before. So, if we have BTI enabled, then we should put some garbage at this line (maybe another .word 0x0?) so if we ever arrive here to get an exception and not continue executing.\n\nWhat do you think?",
      "range": {
        "startLine": 6,
        "startChar": 1,
        "endLine": 6,
        "endChar": 6
      },
      "revId": "3cee0d3b21ceaafa0c9fab34553370b6e8a03b08",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a9ada55_92b26877",
        "filename": "lib/romlib/templates/jmptbl_entry_reserved_bti.S",
        "patchSetId": 2
      },
      "lineNbr": 6,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2019-07-17T12:01:43Z",
      "side": 1,
      "message": "but then it will fall through to the word below and that should fail ? IN that case this is alright and keeps the implementation uniform..\n\nSome comments to this effect in this file will be useful.",
      "parentUuid": "cf5d1a2a_ea3ce154",
      "range": {
        "startLine": 6,
        "startChar": 1,
        "endLine": 6,
        "endChar": 6
      },
      "revId": "3cee0d3b21ceaafa0c9fab34553370b6e8a03b08",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cf5431c8_8bb0912d",
        "filename": "lib/romlib/templates/jmptbl_entry_reserved_bti.S",
        "patchSetId": 2
      },
      "lineNbr": 6,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2019-07-17T12:06:31Z",
      "side": 1,
      "message": "I am guessing that you need a separate file because the template is not invoked by the C pre-processor and hence the code cannot be wrapped in #if ENABLE_BTI build flag ?\n\nSome more comments explaining the model of invocation of these templates will be helpful.",
      "parentUuid": "9a9ada55_92b26877",
      "range": {
        "startLine": 6,
        "startChar": 1,
        "endLine": 6,
        "endChar": 6
      },
      "revId": "3cee0d3b21ceaafa0c9fab34553370b6e8a03b08",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cee865f5_20275228",
        "filename": "lib/romlib/templates/jmptbl_entry_reserved_bti.S",
        "patchSetId": 2
      },
      "lineNbr": 6,
      "author": {
        "id": 1000159
      },
      "writtenOn": "2019-07-17T13:38:45Z",
      "side": 1,
      "message": "The ENABLE_BTI build flag is passed to the romlib_generator.py as a command line argument and it chooses [x].S or [x]_bti.S templates accordingly. I commented this into the script instead of the template files.",
      "parentUuid": "cf5431c8_8bb0912d",
      "range": {
        "startLine": 6,
        "startChar": 1,
        "endLine": 6,
        "endChar": 6
      },
      "revId": "3cee0d3b21ceaafa0c9fab34553370b6e8a03b08",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bbdfb425_8beca566",
        "filename": "lib/romlib/templates/jmptbl_entry_reserved_bti.S",
        "patchSetId": 2
      },
      "lineNbr": 6,
      "author": {
        "id": 1000051
      },
      "writtenOn": "2019-07-18T14:11:23Z",
      "side": 1,
      "message": "I asked Alexei about this. When BTI is enabled then whenever we take a branch we need to \"land\" to a BTI instruction. If we land somewhere where there is *not* a BTI instruction, that will cause an exception.\n\nHere, this template will be used when BTI is enabled. So, if this file is used, we know that BTI is enabled. As such that\u0027s why I asked whether it would be meaningful to make this fail if we land here because we should *never* land on a \"reserved\" space in the jump table. If we precede a reserved space with a BTI instruction we make it a valid target - while it shouldn\u0027t be. And potentially that\u0027s also a security risk?\n\nIf we just fall-through to all zeroes that\u0027s simply a NOP, it won\u0027t cause any exception. When encountering other BTI instructions while falling through also doesn\u0027t cause exceptions (as per Alexei\u0027s clarification). So that\u0027s why I though that when we have BTI enabled, the reserved spaces in the jump table shouldn\u0027t be allowed to be valid landing places.\n\nThat\u0027s not something Imre is doing wrong - it was an additional thought of me while reviewing. Actually it was already like this but after rethinking about it I think we should change it.",
      "parentUuid": "cee865f5_20275228",
      "range": {
        "startLine": 6,
        "startChar": 1,
        "endLine": 6,
        "endChar": 6
      },
      "revId": "3cee0d3b21ceaafa0c9fab34553370b6e8a03b08",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e60e39b0_166d376a",
        "filename": "lib/romlib/templates/jmptbl_entry_reserved_bti.S",
        "patchSetId": 2
      },
      "lineNbr": 6,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2019-07-23T12:47:16Z",
      "side": 1,
      "message": "After discussing with Imre, we thought it is better to have uniform behaviour when BTI is enabled or disabled. Instead of encoding 0x0 for reserved entries, if we do a `b .` then the error will be contained for both the cases and it will behave the same with BTI enabled as well.\n\nHence Imre has reworked the patch to that effect.",
      "parentUuid": "bbdfb425_8beca566",
      "range": {
        "startLine": 6,
        "startChar": 1,
        "endLine": 6,
        "endChar": 6
      },
      "revId": "3cee0d3b21ceaafa0c9fab34553370b6e8a03b08",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a9c64dc_8f597cb8",
        "filename": "lib/romlib/templates/wrapper_bti.S",
        "patchSetId": 2
      },
      "lineNbr": 8,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2019-07-17T12:06:31Z",
      "side": 1,
      "message": "which is the right variant to use, bti jc or bti j? Prefer to stick to one variant that works for all cases rather than trying to differentiate.",
      "range": {
        "startLine": 8,
        "startChar": 1,
        "endLine": 8,
        "endChar": 7
      },
      "revId": "3cee0d3b21ceaafa0c9fab34553370b6e8a03b08",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51fe3643_b161c0b7",
        "filename": "lib/romlib/templates/wrapper_bti.S",
        "patchSetId": 2
      },
      "lineNbr": 8,
      "author": {
        "id": 1000159
      },
      "writtenOn": "2019-07-17T13:38:45Z",
      "side": 1,
      "message": "I think jc is used here because any kind of branch instructions can be used to call the wrapper function. However the entries in the jump table should be accessed only through these wrappers and there the bti j is suitable for br x16 instruction.",
      "parentUuid": "7a9c64dc_8f597cb8",
      "range": {
        "startLine": 8,
        "startChar": 1,
        "endLine": 8,
        "endChar": 7
      },
      "revId": "3cee0d3b21ceaafa0c9fab34553370b6e8a03b08",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    }
  ]
}