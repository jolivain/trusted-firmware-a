{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "666ebda6_8ef679fa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-05-16T15:20:22Z",
      "side": 1,
      "message": "Regarding the CI failures...\n\nBeyond the coding style violations reported - which need to be fixed, the failure of the tf-plat-tests group does not look like a worry. The LAVA log [1] shows that the tests actually passed. I believe the failures are due to me merging patch [2]. These failures should go away if this patch stack is rebased.\n\n[1] https://tf.validation.linaro.org/scheduler/job/1603511\n[2] https://review.trustedfirmware.org/c/ci/tf-a-ci-scripts/+/20828",
      "revId": "20da4cf7445947998850d27bf2115dd18f667dbf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbd5ee28_63df26c9",
        "filename": "plat/arm/board/fvp/fvp_trusted_boot.c",
        "patchSetId": 2
      },
      "lineNbr": 74,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-05-16T12:05:03Z",
      "side": 1,
      "message": "If this local variable was of type uintptr_t, it seems to me that we would avoid a bunch of type casts. We would be able to remove the casts at line:\n* 49, 52 and 56 (provided that plat_get_nv_ctr_addr() takes in input a uintptr_t*)\n* 84 and 90.\nWe might need to adjust the cast at line 112.",
      "range": {
        "startLine": 74,
        "startChar": 1,
        "endLine": 74,
        "endChar": 22
      },
      "revId": "20da4cf7445947998850d27bf2115dd18f667dbf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28d45ced_781ae64a",
        "filename": "plat/arm/board/fvp/fvp_trusted_boot.c",
        "patchSetId": 2
      },
      "lineNbr": 74,
      "author": {
        "id": 1000101
      },
      "writtenOn": "2023-05-16T21:07:35Z",
      "side": 1,
      "message": "My understanding is that plat_get_nv_str_addr() needs to take an input of uint32_t** for plat_get_nv_ctr() so that\u0027s why I changed it in plat_set_nv_ctr() and added the casts so that plat_get_nv_str_addr() could be used for both. Do you disagree? I was getting a boot failure when I tried to change it, but I may have missed something...can look further into it if that doesn\u0027t seem right",
      "parentUuid": "dbd5ee28_63df26c9",
      "range": {
        "startLine": 74,
        "startChar": 1,
        "endLine": 74,
        "endChar": 22
      },
      "revId": "20da4cf7445947998850d27bf2115dd18f667dbf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f657a4ad_fdd89e02",
        "filename": "plat/arm/board/fvp/fvp_trusted_boot.c",
        "patchSetId": 2
      },
      "lineNbr": 74,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-05-17T12:47:28Z",
      "side": 1,
      "message": "\u003e My understanding is that plat_get_nv_ctr_addr() needs to take an input of uint32_t** for plat_get_nv_ctr()\n\nWhy does plat_get_nv_ctr() need to use uint32_t type?\n\nMy reading of the code is as follows...\n1) plat_get_nv_ctr() calls FCONF_GET_PROPERTY(cot, nv_cntr_addr, ...) [1].\n2) Then the fconf getter in this case is [2], which returns an element within the nv_cntr_base_addr[] array.\n3) And as can be seen in the same header file 2 lines below [3], nv_cntr_base_addr[] is an array of uintptr_t.\nSo it seems to me that plat_get_nv_ctr() rather needs to deal with uintptr_t.\n\nPlease let me know if I am missing something.\n\n[1] https://git.trustedfirmware.org/TF-A/trusted-firmware-a.git/tree/plat/arm/board/common/board_arm_trusted_boot.c#n244\n[2] https://git.trustedfirmware.org/TF-A/trusted-firmware-a.git/tree/include/plat/arm/common/fconf_nv_cntr_getter.h#n13\n[3] https://git.trustedfirmware.org/TF-A/trusted-firmware-a.git/tree/include/plat/arm/common/fconf_nv_cntr_getter.h#n15",
      "parentUuid": "28d45ced_781ae64a",
      "range": {
        "startLine": 74,
        "startChar": 1,
        "endLine": 74,
        "endChar": 22
      },
      "revId": "20da4cf7445947998850d27bf2115dd18f667dbf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f606d8e7_cca83d1a",
        "filename": "plat/arm/board/fvp/fvp_trusted_boot.c",
        "patchSetId": 2
      },
      "lineNbr": 80,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-05-16T12:05:03Z",
      "side": 1,
      "message": "(coding style) Missing space between \u0027if\u0027 keyword and parenthese.",
      "range": {
        "startLine": 80,
        "startChar": 1,
        "endLine": 80,
        "endChar": 4
      },
      "revId": "20da4cf7445947998850d27bf2115dd18f667dbf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ceb19cb5_bdeafbd2",
        "filename": "plat/arm/board/fvp/fvp_trusted_boot.c",
        "patchSetId": 2
      },
      "lineNbr": 80,
      "author": {
        "id": 1000101
      },
      "writtenOn": "2023-05-16T21:07:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f606d8e7_cca83d1a",
      "range": {
        "startLine": 80,
        "startChar": 1,
        "endLine": 80,
        "endChar": 4
      },
      "revId": "20da4cf7445947998850d27bf2115dd18f667dbf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2fd27add_7ec45fd2",
        "filename": "plat/arm/board/fvp/fvp_trusted_boot.c",
        "patchSetId": 2
      },
      "lineNbr": 81,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-05-16T12:05:03Z",
      "side": 1,
      "message": "Why not returning rc instead of 1? That would sound more accurate to me from a code structure point of view, even though the generated code will end up being the same.",
      "range": {
        "startLine": 81,
        "startChar": 2,
        "endLine": 81,
        "endChar": 11
      },
      "revId": "20da4cf7445947998850d27bf2115dd18f667dbf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "345350bf_5b8d35f3",
        "filename": "plat/arm/board/fvp/fvp_trusted_boot.c",
        "patchSetId": 2
      },
      "lineNbr": 81,
      "author": {
        "id": 1000101
      },
      "writtenOn": "2023-05-16T21:07:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2fd27add_7ec45fd2",
      "range": {
        "startLine": 81,
        "startChar": 2,
        "endLine": 81,
        "endChar": 11
      },
      "revId": "20da4cf7445947998850d27bf2115dd18f667dbf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}