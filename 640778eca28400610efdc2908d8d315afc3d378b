{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c6141dd3_a0f4c5e5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1000279
      },
      "writtenOn": "2023-03-15T16:43:09Z",
      "side": 1,
      "message": "Please align with 72 chars (break before \"so\", not after)",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 14,
        "endChar": 54
      },
      "revId": "640778eca28400610efdc2908d8d315afc3d378b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77b84b1a_a8e97a64",
        "filename": "include/arch/aarch64/arch.h",
        "patchSetId": 1
      },
      "lineNbr": 1314,
      "author": {
        "id": 1000279
      },
      "writtenOn": "2023-03-15T16:39:05Z",
      "side": 1,
      "message": "Isn\u0027t it S3_4_C2_C0_3?\nFrom spec: TCR2_EL2 is a 64-bit read/write AArch64 System register accessed using MRS and MSR of\nS3_4_c2_c0_3 .",
      "range": {
        "startLine": 1314,
        "startChar": 21,
        "endLine": 1314,
        "endChar": 22
      },
      "revId": "640778eca28400610efdc2908d8d315afc3d378b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "77128093_649dca26",
        "filename": "include/arch/aarch64/arch.h",
        "patchSetId": 1
      },
      "lineNbr": 1314,
      "author": {
        "id": 1000686
      },
      "writtenOn": "2023-03-15T17:10:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "77b84b1a_a8e97a64",
      "range": {
        "startLine": 1314,
        "startChar": 21,
        "endLine": 1314,
        "endChar": 22
      },
      "revId": "640778eca28400610efdc2908d8d315afc3d378b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4feb11a1_489d3923",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 1
      },
      "lineNbr": 355,
      "author": {
        "id": 1000279
      },
      "writtenOn": "2023-03-15T16:39:05Z",
      "side": 1,
      "message": "Shouldn\u0027t it be under #if ENABLE_FEAT_TCR2?",
      "range": {
        "startLine": 351,
        "startChar": 1,
        "endLine": 355,
        "endChar": 2
      },
      "revId": "640778eca28400610efdc2908d8d315afc3d378b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f93c133b_5512e3fa",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 1
      },
      "lineNbr": 355,
      "author": {
        "id": 1000686
      },
      "writtenOn": "2023-03-15T17:10:32Z",
      "side": 1,
      "message": "I don\u0027t think so, there\u0027s an ENABLE_FEAT_HCX but it doesn\u0027t guard the above code for HCX and has a runtime check only (and similarly for FGT and so on) while all the things with build time defines are unconditional and don\u0027t have any runtime checks. My impression looking at the code is that things with runtime checks should use the runtime checks rather than build time defines.",
      "parentUuid": "4feb11a1_489d3923",
      "range": {
        "startLine": 351,
        "startChar": 1,
        "endLine": 355,
        "endChar": 2
      },
      "revId": "640778eca28400610efdc2908d8d315afc3d378b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca6dc935_cd98762a",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 1
      },
      "lineNbr": 355,
      "author": {
        "id": 1000279
      },
      "writtenOn": "2023-03-16T12:10:23Z",
      "side": 1,
      "message": "I\u0027ve looked at FEAT_HCX and it is guarded by defines in `is_feat_hcx_supported`. The function checks if ENABLE_FEAT_HCX is enabled and only then checks looks at the runtime check via read_id_aa64mmfr1_el1.\nSame for FGT.\nAs it stands now - ENABLE_FEAT_TCL2 has no effect on allowing access to TCR2_EL2 or adding it to context save. \nMy suggestion is then to mimic what is done with hcx/fgt and have the following:\n\nstatic inline bool is_feat_tcr2_supported(void)\n{\n\tif (ENABLE_FEAT_TCR2 \u003d\u003d FEAT_STATE_DISABLED) {\n\t\treturn false;\n\t}\n\n\tif (ENABLE_FEAT_TCR2 \u003d\u003d FEAT_STATE_ALWAYS) {\n\t\treturn true;\n\t}\n\n\treturn is_armv8_9_tcr2_present();\n}",
      "parentUuid": "f93c133b_5512e3fa",
      "range": {
        "startLine": 351,
        "startChar": 1,
        "endLine": 355,
        "endChar": 2
      },
      "revId": "640778eca28400610efdc2908d8d315afc3d378b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03d98313_dc29f53b",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 1
      },
      "lineNbr": 355,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2023-03-16T12:41:29Z",
      "side": 1,
      "message": "Yes, using \"C if\u0027s\" and the combined runtime/build time checks is the way to go, this transition is work in progress, HCX and FGT are just the first that are already merged.\nHowever it should be named is_feat_tcr2_supported(), and written like the HCX version to still allow build time disabling.",
      "parentUuid": "f93c133b_5512e3fa",
      "range": {
        "startLine": 351,
        "startChar": 1,
        "endLine": 355,
        "endChar": 2
      },
      "revId": "640778eca28400610efdc2908d8d315afc3d378b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e9324eed_93b54fb4",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 1
      },
      "lineNbr": 355,
      "author": {
        "id": 1000686
      },
      "writtenOn": "2023-03-16T13:08:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "03d98313_dc29f53b",
      "range": {
        "startLine": 351,
        "startChar": 1,
        "endLine": 355,
        "endChar": 2
      },
      "revId": "640778eca28400610efdc2908d8d315afc3d378b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}