{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e573a48d_e6f513de",
        "filename": "lib/extensions/trf/aarch32/trf.c",
        "patchSetId": 36
      },
      "lineNbr": 22,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2023-06-25T19:44:58Z",
      "side": 1,
      "message": "Why should it be set to 0 when it is set to 0 during warm and reset [1]? This bit doesn\u0027t seem to be operated anywhere else, unless I\u0027m missing something.\n\n[1]: https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/19445/38/include/arch/aarch64/el3_common_macros.S#119",
      "range": {
        "startLine": 22,
        "startChar": 10,
        "endLine": 22,
        "endChar": 22
      },
      "revId": "ce1fbf893605ea10e82c7e6b9c1ba96e819bdd19",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a52c7c98_423b4f71",
        "filename": "lib/extensions/trf/aarch32/trf.c",
        "patchSetId": 36
      },
      "lineNbr": 22,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-06-26T09:34:51Z",
      "side": 1,
      "message": "Mostly because the STE bit relates directly to trf so this serves as a documentation. It was part of the drive to drop it from the reset handler but I\u0027ve since given up on that for aarch32. I think it\u0027s good to keep it here",
      "parentUuid": "e573a48d_e6f513de",
      "range": {
        "startLine": 22,
        "startChar": 10,
        "endLine": 22,
        "endChar": 22
      },
      "revId": "ce1fbf893605ea10e82c7e6b9c1ba96e819bdd19",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc780d6f_06880efb",
        "filename": "lib/extensions/trf/aarch32/trf.c",
        "patchSetId": 36
      },
      "lineNbr": 22,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2023-06-26T10:26:15Z",
      "side": 1,
      "message": "\u003e Mostly because the STE bit relates directly to trf so this serves as a documentation.\nEven though this serves as documentation, I feel it is redundant for both aarch64 and aarch32.\n\n\u003e It was part of the drive to drop it from the reset handler but I\u0027ve since given up on that for aarch32. I think it\u0027s good to keep it here\nAccording to [1], this bit is 0\u0027ed in the reset handler (MDCR_EL3_RESET_VAL should match the reset behaviour of bits mentioned in ARM arm specification) so there is no need to do it here again right? (since this bit is never operated anywhere else in code that needs to make it 0 again).\n\n[1]: https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/21295/12/include/arch/aarch64/el3_common_macros.S#76",
      "parentUuid": "a52c7c98_423b4f71",
      "range": {
        "startLine": 22,
        "startChar": 10,
        "endLine": 22,
        "endChar": 22
      },
      "revId": "ce1fbf893605ea10e82c7e6b9c1ba96e819bdd19",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "967c9954_00ce1160",
        "filename": "lib/extensions/trf/aarch32/trf.c",
        "patchSetId": 36
      },
      "lineNbr": 22,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-06-26T14:08:50Z",
      "side": 1,
      "message": "right, yes it is zeroed. But I wish luck on whoever tries to figure it out after me. Half the problem I\u0027ve been trying to tackle with these patches is that it\u0027s *impossible* to trace what context tf-a runs with and when. Things like bit X is set at reset explicitly but overriden in some place in context management and bit Y is set implicitly in context management only while bit Z is all of the above twice over but conditionally.\n\nMaking this bit set explicit in these functions allows for an uninitiated soul to grep for this bit and see exactly what value it will have for practically all of EL3\u0027s execution. That short bit between the reset handler and this function can be left as arcane magic we don\u0027t (usually) have to care about. I especially hate the rampant implicit initialization that goes on. It\u0027s just too hard to trace.",
      "parentUuid": "dc780d6f_06880efb",
      "range": {
        "startLine": 22,
        "startChar": 10,
        "endLine": 22,
        "endChar": 22
      },
      "revId": "ce1fbf893605ea10e82c7e6b9c1ba96e819bdd19",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a960373_9be79864",
        "filename": "lib/extensions/trf/aarch32/trf.c",
        "patchSetId": 36
      },
      "lineNbr": 22,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2023-06-26T15:39:39Z",
      "side": 1,
      "message": "The code can also be made readable by explicitly setting this bit to zero during init. \nMy argument is that if the Architecture mentions that this bit is zero on reset, then initialization can also handle it.\nExplicitly handling it during the enable routine can also give the wrong impression that this bit was previously set. By leaving the condition of this bit unchanged, it would be as if it had been reset.\n\nI am not strongly against the current approach, but just wondering why it is needed. We will proceed with this change if everyone is okay with this change.",
      "parentUuid": "967c9954_00ce1160",
      "range": {
        "startLine": 22,
        "startChar": 10,
        "endLine": 22,
        "endChar": 22
      },
      "revId": "ce1fbf893605ea10e82c7e6b9c1ba96e819bdd19",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}