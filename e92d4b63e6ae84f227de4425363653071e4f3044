{
  "comments": [
    {
      "key": {
        "uuid": "ea805816_56e4ecd4",
        "filename": "common/desc_image_load.c",
        "patchSetId": 2
      },
      "lineNbr": 242,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2020-06-09T18:13:56Z",
      "side": 1,
      "message": "does this not break other platforms ? or is this safe because only fvp is using this as of today ?",
      "revId": "e92d4b63e6ae84f227de4425363653071e4f3044",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50292241_0d4f2909",
        "filename": "common/desc_image_load.c",
        "patchSetId": 2
      },
      "lineNbr": 242,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2020-06-10T04:52:05Z",
      "side": 1,
      "message": "Thanks for pointing this out.\nCurrently, FCONF is used by many ARM platforms and not only the fvp specifically.\nI think it is safe in that case and also, this patch is tested on many ARM platform.\n\nI have to look into the platform who are not using this fconf.",
      "parentUuid": "ea805816_56e4ecd4",
      "revId": "e92d4b63e6ae84f227de4425363653071e4f3044",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "859261cb_1cd06101",
        "filename": "common/desc_image_load.c",
        "patchSetId": 2
      },
      "lineNbr": 242,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2020-06-10T11:55:32Z",
      "side": 1,
      "message": "Since FCONF is not a mandatory feature(platforms can opt not to use it) we cannot modify generic code.",
      "parentUuid": "50292241_0d4f2909",
      "revId": "e92d4b63e6ae84f227de4425363653071e4f3044",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa159057_5ea4900d",
        "filename": "common/desc_image_load.c",
        "patchSetId": 2
      },
      "lineNbr": 242,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2020-06-10T12:47:28Z",
      "side": 1,
      "message": "May be we can add platform specific call to update fw_config_id.\n\nFor all ARM platform, \nfw_config_id \u003d FW_CONFIG_ID \n\nfor other platforms \nfw_config_id \u003d SOC_FW_CONFIG_ID (by implementing weak function).\n\nLet me know your thought on this.",
      "parentUuid": "859261cb_1cd06101",
      "revId": "e92d4b63e6ae84f227de4425363653071e4f3044",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9437c32_b7e9f294",
        "filename": "common/desc_image_load.c",
        "patchSetId": 2
      },
      "lineNbr": 242,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2020-06-11T10:42:41Z",
      "side": 1,
      "message": "What you suggested for only FW_CONFIG_ID/SOC_FW_CONFIG_ID can be extended to all type of images by introducing a function like \"plat_get_config_id(image_id)\", and then you can override it using weak function implementation.",
      "parentUuid": "fa159057_5ea4900d",
      "revId": "e92d4b63e6ae84f227de4425363653071e4f3044",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "303e33eb_9249f5a7",
        "filename": "common/desc_image_load.c",
        "patchSetId": 2
      },
      "lineNbr": 242,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2020-06-15T14:22:53Z",
      "side": 1,
      "message": "As generally we prefer to discourage weak function hence not taken this approach and\nUpdated the code with help of existing platform API to set entrypoint information of BL31 in case of ARM FVP platform only.",
      "parentUuid": "c9437c32_b7e9f294",
      "revId": "e92d4b63e6ae84f227de4425363653071e4f3044",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    }
  ]
}