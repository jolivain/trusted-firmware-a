{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9bb052eb_0133a85d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000655
      },
      "writtenOn": "2021-12-27T16:55:35Z",
      "side": 1,
      "message": "LGTM.\nTrustonic need the same feature on Hafnium.\nWithout a corresponding patch in Hafnium, we cannot enable this feature.",
      "revId": "b7f2429ccf20210a7ab47110630e5c014d19729f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e7fe80c_0113a19d",
        "filename": "services/std_svc/spm/spmc/spmc_main.c",
        "patchSetId": 1
      },
      "lineNbr": 1327,
      "author": {
        "id": 1000655
      },
      "writtenOn": "2021-12-28T09:01:19Z",
      "side": 1,
      "message": "When I don\u0027t have this property in my manifest, will x0 still contain whatever the loader put into it, i.e. the phys addr of the device tree?",
      "revId": "b7f2429ccf20210a7ab47110630e5c014d19729f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6d496ba_9eac518b",
        "filename": "services/std_svc/spm/spmc/spmc_main.c",
        "patchSetId": 1
      },
      "lineNbr": 1327,
      "author": {
        "id": 1000290
      },
      "writtenOn": "2022-01-07T11:59:31Z",
      "side": 1,
      "message": "That is a good point, there was a mistake in how this was being handled. We had been zeroing all the register only if this entry is supplied (after previously populating the core ID).\nI think the correct behavior here would be to first zero all the registers and then populate individual registers as required rather than leave any existing values. Does this seem reasonable?",
      "parentUuid": "9e7fe80c_0113a19d",
      "revId": "b7f2429ccf20210a7ab47110630e5c014d19729f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e72fb91a_7447fc26",
        "filename": "services/std_svc/spm/spmc/spmc_setup.c",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1000655
      },
      "writtenOn": "2021-12-28T09:01:19Z",
      "side": 1,
      "message": "Compared to SPMD code, now SPM also reads x1. If we enable this feature, I guess the bootloader needs to populate x0 and also x1. Can you confirm?",
      "revId": "b7f2429ccf20210a7ab47110630e5c014d19729f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82a34b79_dcac7a84",
        "filename": "services/std_svc/spm/spmc/spmc_setup.c",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1000290
      },
      "writtenOn": "2022-01-07T11:59:31Z",
      "side": 1,
      "message": "The bootloader shouldn\u0027t need to do anything special if you want to use this, the value should be populated by the SPMC itself when it is parsing the manifest [1]. \n\n[1] https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/13247/1/services/std_svc/spm/spmc/spmc_main.c#243",
      "parentUuid": "e72fb91a_7447fc26",
      "revId": "b7f2429ccf20210a7ab47110630e5c014d19729f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}