{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "28919775_b78dba0d",
        "filename": "drivers/st/io/io_mmc.c",
        "patchSetId": 7
      },
      "lineNbr": 103,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2021-04-09T14:09:44Z",
      "side": 1,
      "message": "this should be \u0027#if\u0027 right?",
      "range": {
        "startLine": 103,
        "startChar": 0,
        "endLine": 103,
        "endChar": 24
      },
      "revId": "7d6612226fd7bfd95da81e2f1279ea2820632295",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d262cb22_c71e8c07",
        "filename": "drivers/st/io/io_mmc.c",
        "patchSetId": 7
      },
      "lineNbr": 103,
      "author": {
        "id": 1000578
      },
      "writtenOn": "2021-04-09T14:19:32Z",
      "side": 1,
      "message": "That\u0027s what I initially had. @Yann Gautier suggested to use `#ifdef`",
      "parentUuid": "28919775_b78dba0d",
      "range": {
        "startLine": 103,
        "startChar": 0,
        "endLine": 103,
        "endChar": 24
      },
      "revId": "7d6612226fd7bfd95da81e2f1279ea2820632295",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00031a3d_c03d370c",
        "filename": "drivers/st/io/io_mmc.c",
        "patchSetId": 7
      },
      "lineNbr": 103,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2021-04-09T14:50:33Z",
      "side": 1,
      "message": "Ah ok! missed to read previous comment. In that case, better not to add this option for boolean here: https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/9475/7/plat/st/stm32mp1/platform.mk#79",
      "parentUuid": "d262cb22_c71e8c07",
      "range": {
        "startLine": 103,
        "startChar": 0,
        "endLine": 103,
        "endChar": 24
      },
      "revId": "7d6612226fd7bfd95da81e2f1279ea2820632295",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03f5be2f_9a029249",
        "filename": "drivers/st/io/io_mmc.c",
        "patchSetId": 7
      },
      "lineNbr": 103,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2021-04-09T17:04:22Z",
      "side": 1,
      "message": "I was OK with the #if and the boolean.\nIt was a question raised by Ahmad.",
      "parentUuid": "00031a3d_c03d370c",
      "range": {
        "startLine": 103,
        "startChar": 0,
        "endLine": 103,
        "endChar": 24
      },
      "revId": "7d6612226fd7bfd95da81e2f1279ea2820632295",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2f7b8f9_80ec79f1",
        "filename": "plat/st/common/bl2_io_storage.c",
        "patchSetId": 7
      },
      "lineNbr": 325,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2021-04-09T14:09:44Z",
      "side": 1,
      "message": "Is there any possibility to detect EMMC boot and GPT enabled boot dynamically instead of using this compile time check?\nAlso, it will be good if you add a separate function to set up the partition details.",
      "range": {
        "startLine": 325,
        "startChar": 7,
        "endLine": 325,
        "endChar": 24
      },
      "revId": "7d6612226fd7bfd95da81e2f1279ea2820632295",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5deea62f_feb002c5",
        "filename": "plat/st/common/bl2_io_storage.c",
        "patchSetId": 7
      },
      "lineNbr": 325,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2021-04-09T14:09:44Z",
      "side": 1,
      "message": "this should be \u0027#if\u0027 right?",
      "range": {
        "startLine": 325,
        "startChar": 0,
        "endLine": 325,
        "endChar": 24
      },
      "revId": "7d6612226fd7bfd95da81e2f1279ea2820632295",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a404155b_f505e771",
        "filename": "plat/st/common/bl2_io_storage.c",
        "patchSetId": 7
      },
      "lineNbr": 325,
      "author": {
        "id": 1000578
      },
      "writtenOn": "2021-04-09T14:19:32Z",
      "side": 1,
      "message": "That\u0027s what @Ahmad suggested too. I will look into it",
      "parentUuid": "f2f7b8f9_80ec79f1",
      "range": {
        "startLine": 325,
        "startChar": 7,
        "endLine": 325,
        "endChar": 24
      },
      "revId": "7d6612226fd7bfd95da81e2f1279ea2820632295",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b6f5273_2db5edf7",
        "filename": "plat/st/common/bl2_io_storage.c",
        "patchSetId": 7
      },
      "lineNbr": 325,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2021-04-09T14:50:33Z",
      "side": 1,
      "message": "Good to know. Thanks!",
      "parentUuid": "a404155b_f505e771",
      "range": {
        "startLine": 325,
        "startChar": 7,
        "endLine": 325,
        "endChar": 24
      },
      "revId": "7d6612226fd7bfd95da81e2f1279ea2820632295",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e77d0a17_4fedcb03",
        "filename": "plat/st/common/bl2_io_storage.c",
        "patchSetId": 7
      },
      "lineNbr": 325,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2021-04-09T17:04:22Z",
      "side": 1,
      "message": "Same here, keep the #if. That\u0027s why I asked for this flag to be added in the boolean list.\nI\u0027m not sure we can easily have a dynamic selection of type of boot. One will be a backup and may penalize the boot time.",
      "parentUuid": "9b6f5273_2db5edf7",
      "range": {
        "startLine": 325,
        "startChar": 7,
        "endLine": 325,
        "endChar": 24
      },
      "revId": "7d6612226fd7bfd95da81e2f1279ea2820632295",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee4bf652_884d752a",
        "filename": "plat/st/common/bl2_io_storage.c",
        "patchSetId": 7
      },
      "lineNbr": 334,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2021-04-09T14:09:44Z",
      "side": 1,
      "message": "why this is not needed in case of \u0027STM32MP_EMMC_BOOT\u0027?",
      "range": {
        "startLine": 333,
        "startChar": 0,
        "endLine": 334,
        "endChar": 24
      },
      "revId": "7d6612226fd7bfd95da81e2f1279ea2820632295",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "986c1d46_54697c58",
        "filename": "plat/st/common/bl2_io_storage.c",
        "patchSetId": 7
      },
      "lineNbr": 334,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2021-04-09T17:04:22Z",
      "side": 1,
      "message": "The mmc_block_dev_spec and storage_dev_handle are used to read the GPT table. I wonder if the io_dev_open is correct then, and if it could directly use another io_block_dev_spec_t struct, with the mmc_boot_part_read_blocks() read function in its ops?",
      "parentUuid": "ee4bf652_884d752a",
      "range": {
        "startLine": 333,
        "startChar": 0,
        "endLine": 334,
        "endChar": 24
      },
      "revId": "7d6612226fd7bfd95da81e2f1279ea2820632295",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}