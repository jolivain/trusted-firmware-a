{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "64609d81_c332b432",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1000467
      },
      "writtenOn": "2023-06-09T15:57:04Z",
      "side": 1,
      "message": "Seems to me that moving this code behind FEATURE_DETECTION won\u0027t save much space compared to moving from a macro to a function. Is this really needed?\nStruggled to get number for it though so if you\u0027ve seen good improvements feel free to ignore me.",
      "range": {
        "startLine": 15,
        "startChar": 64,
        "endLine": 15,
        "endChar": 68
      },
      "revId": "8a1c626bdc81cd22b44b4b2224f17ff0a65d330f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cec5628a_36eb0855",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-06-12T08:42:14Z",
      "side": 1,
      "message": "Building for both on the sun50i_a64 which is the platform causing me trouble, it\u0027s 560 and 752 bytes for FEATURE_DETECTION 0 and 1 respectively. I think it\u0027s worthwhile",
      "parentUuid": "64609d81_c332b432",
      "range": {
        "startLine": 15,
        "startChar": 64,
        "endLine": 15,
        "endChar": 68
      },
      "revId": "8a1c626bdc81cd22b44b4b2224f17ff0a65d330f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a3fef00_090f02d6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1000467
      },
      "writtenOn": "2023-06-12T09:23:36Z",
      "side": 1,
      "message": "That includes all the feature detection code though. If you compare with the order checking hidden with FEATURE_DETECTION\u003d0 vs with it not hidden I\u0027m not seeing any space saving.",
      "parentUuid": "cec5628a_36eb0855",
      "range": {
        "startLine": 15,
        "startChar": 64,
        "endLine": 15,
        "endChar": 68
      },
      "revId": "8a1c626bdc81cd22b44b4b2224f17ff0a65d330f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e917ab4d_1f98b2cf",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-06-12T09:59:02Z",
      "side": 1,
      "message": "I\u0027m not sure what you mean. I built twice, once with FEATURE_DETECTION\u003d0 and once with FEATURE_DETECTION\u003d1. Then I compared the size of _just_ the generic_errata_report symbol. That should be an identical test as if I removed the #ifs altogether and did the same measurement",
      "parentUuid": "2a3fef00_090f02d6",
      "range": {
        "startLine": 15,
        "startChar": 64,
        "endLine": 15,
        "endChar": 68
      },
      "revId": "8a1c626bdc81cd22b44b4b2224f17ff0a65d330f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "20a3ae59_f9841904",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1000467
      },
      "writtenOn": "2023-06-12T10:04:28Z",
      "side": 1,
      "message": "Oh right, sorry I didn\u0027t realise you were just comparing the size of the generic_errata_report. In which case fair enough",
      "parentUuid": "e917ab4d_1f98b2cf",
      "range": {
        "startLine": 15,
        "startChar": 64,
        "endLine": 15,
        "endChar": 68
      },
      "revId": "8a1c626bdc81cd22b44b4b2224f17ff0a65d330f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47b65ed1_1dd9c25e",
        "filename": "lib/cpus/errata_report.c",
        "patchSetId": 3
      },
      "lineNbr": 76,
      "author": {
        "id": 1000660
      },
      "writtenOn": "2023-06-12T10:50:11Z",
      "side": 1,
      "message": "Just sharing my understanding. \nConsidering the fact that, print errata status functionality, is essential only for development and debugging activity and not for real use(production build), agree with your thoughts on using the existing flag(FEATURE_DETECTION) to guard it.\n\nCurrently, FEATURE_DETECTION is still disabled by default, and its usage will be more applicable for development builds.\nSo in future, if we enable (FEATURE_DETECTION) by default for FVP alone ( other platforms might or not), the overall size reduction, with this change will still be same, as print_status function is independent and the dependent/guarded code, will be impacted, based on the individual platform\u0027s decision.\n\nHope you agree here ?",
      "revId": "8a1c626bdc81cd22b44b4b2224f17ff0a65d330f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}