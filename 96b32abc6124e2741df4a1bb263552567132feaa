{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d81dc887_e3ee6fc5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2023-03-13T17:28:19Z",
      "side": 1,
      "message": "treats?",
      "range": {
        "startLine": 10,
        "startChar": 24,
        "endLine": 10,
        "endChar": 31
      },
      "revId": "96b32abc6124e2741df4a1bb263552567132feaa",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1313ef36_38f05b38",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2023-02-24T18:09:54Z",
      "side": 1,
      "message": "I am unable to understand why is this an array bound issue? why is it illegal to read from a memory location below 4096? Looks like a bug in GCC or I am missing something.",
      "revId": "96b32abc6124e2741df4a1bb263552567132feaa",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "251142cf_a63c0d04",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1000874
      },
      "writtenOn": "2023-02-24T18:39:46Z",
      "side": 1,
      "message": "You need to read the GCC code.. Let me quote it:\n\"\"\"\nPointer constants other than null smaller than param_min_pagesize\nmight be the result of erroneous null pointer addition/subtraction.\nUnless zero is a valid address set size to zero. ....\n\"\"\"\n(gcc/pointer-query.cc)",
      "parentUuid": "1313ef36_38f05b38",
      "revId": "96b32abc6124e2741df4a1bb263552567132feaa",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f8e057e3_1550726e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2023-03-13T17:28:19Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "251142cf_a63c0d04",
      "revId": "96b32abc6124e2741df4a1bb263552567132feaa",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9b1faa02_e5a20646",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2023-03-13T23:31:19Z",
      "side": 1,
      "message": "Arguably this problem might come from us somewhat abusing pointers for MMIO operations. The compiler sees a pointer, and treats it like a pointer (an address to a variable or function). The Linux kernel avoids this problem by defining the MMIO accessors via inline assembly.\nIf I replace the definition of the 8 bit read accessor with:\nstatic inline uint8_t mmio_read_8(uintptr_t addr)\n{\n    uint8_t val;\n    asm volatile (\"ldrb %w0, [%1]\\n\" : \"\u003dr\" (val) : \"r\" (addr));\n    return val;\n}\nthen it seems to compile fine with GCC 12 for me.\n\nAlso one problem with this patch seems to be that that this particular --param only exists for GCC \u003e\u003d 12? With GCC 11.2.0 I get:\nerror: unrecognized command-line option \u0027--param\u003dmin-pagesize\u003d0\u0027g",
      "parentUuid": "f8e057e3_1550726e",
      "revId": "96b32abc6124e2741df4a1bb263552567132feaa",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "507ba3e5_ada03593",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2023-04-04T15:00:42Z",
      "side": 1,
      "message": "gentle reminder.",
      "parentUuid": "9b1faa02_e5a20646",
      "revId": "96b32abc6124e2741df4a1bb263552567132feaa",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b9706d9_9f1252e0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2023-04-04T15:04:18Z",
      "side": 1,
      "message": "So, as a better, but still local fix, can you add a definition for mmio_read_8(), as shown above, locally, in that one file only?\nThat should work with all GCCs, and we can then discuss inpependently whether we want to roll this out for other users later?",
      "parentUuid": "9b1faa02_e5a20646",
      "revId": "96b32abc6124e2741df4a1bb263552567132feaa",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48f971a7_2821dbbb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1000874
      },
      "writtenOn": "2023-04-04T15:33:34Z",
      "side": 1,
      "message": "Sorry for the delayed answer..\n\nWe can\u0027t just copy\u0027n\u0027paste GPLv2 code to trusted-firmware-a. I already checked the kernel/barebox bootloader before making this fix and saw the approach :) BUT copy the code would cause possible legal issues which _I_ will not risk.",
      "parentUuid": "6b9706d9_9f1252e0",
      "revId": "96b32abc6124e2741df4a1bb263552567132feaa",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff24ab1e_c5723b44",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2023-04-04T15:59:33Z",
      "side": 1,
      "message": "Fair enough, though I would argue that there are only so many ways to do an 8-bit load in inline assembly, and taking the idea of this solution is not covered by the copyright or license.\nI sense some kind of wink,wink in your reply, so will send a version that looks as different as possible to other copyrighted code shortly.",
      "parentUuid": "48f971a7_2821dbbb",
      "revId": "96b32abc6124e2741df4a1bb263552567132feaa",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "23d5c3d1_146dd542",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000874
      },
      "writtenOn": "2023-03-13T10:00:26Z",
      "side": 1,
      "message": "Hi,\n\nwhat\u0027s the status of this patch? We can\u0027t compile the 8mq platform without this patch if newer toolchains are used.",
      "revId": "96b32abc6124e2741df4a1bb263552567132feaa",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a78201b6_ce1f6d43",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2023-03-13T17:28:19Z",
      "side": 1,
      "message": "Looks good to me.",
      "revId": "96b32abc6124e2741df4a1bb263552567132feaa",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ae8c65e6_c99506c7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2023-04-06T22:41:02Z",
      "side": 1,
      "message": "Can this patch be abandoned given a different fix is available at https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/20364?",
      "revId": "96b32abc6124e2741df4a1bb263552567132feaa",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "32fe7feb_ceb45147",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000874
      },
      "writtenOn": "2023-04-08T09:10:22Z",
      "side": 1,
      "message": "Yes.",
      "parentUuid": "ae8c65e6_c99506c7",
      "revId": "96b32abc6124e2741df4a1bb263552567132feaa",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}