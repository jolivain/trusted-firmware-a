{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "94ed1d72_7a46f468",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-06-23T11:19:05Z",
      "side": 1,
      "message": "Please rebase as it is not clea",
      "revId": "4b359f608635ed7398746b18e86c2366cec1c59b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9e2edcd0_8272c640",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-06-23T11:19:31Z",
      "side": 1,
      "message": "Ignore.",
      "parentUuid": "94ed1d72_7a46f468",
      "revId": "4b359f608635ed7398746b18e86c2366cec1c59b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f3b2b187_b3af7542",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-06-23T11:23:17Z",
      "side": 1,
      "message": "We can have TFTF test for FFH as I think this can be tested using RAS Error inj in FVP.\n\nFor KFH, you need a CI patch to unmask the A bit before returning to lower EL. ",
      "revId": "4b359f608635ed7398746b18e86c2366cec1c59b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aeddbeb8_85459d7c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2023-06-23T11:52:17Z",
      "side": 1,
      "message": "Patches are part of the same topic https://review.trustedfirmware.org/c/ci/tf-a-ci-scripts/+/21529",
      "parentUuid": "f3b2b187_b3af7542",
      "revId": "4b359f608635ed7398746b18e86c2366cec1c59b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc54f81d_791257b7",
        "filename": "bl31/aarch64/ea_delegate.S",
        "patchSetId": 19
      },
      "lineNbr": 133,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-06-23T11:19:05Z",
      "side": 1,
      "message": "Only true for KFH.",
      "range": {
        "startLine": 133,
        "startChar": 3,
        "endLine": 133,
        "endChar": 73
      },
      "revId": "4b359f608635ed7398746b18e86c2366cec1c59b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bee0d94d_6803b15f",
        "filename": "bl31/aarch64/ea_delegate.S",
        "patchSetId": 19
      },
      "lineNbr": 133,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2023-06-26T13:30:50Z",
      "side": 1,
      "message": "There is no distinction between KFH and FFH here",
      "parentUuid": "cc54f81d_791257b7",
      "range": {
        "startLine": 133,
        "startChar": 3,
        "endLine": 133,
        "endChar": 73
      },
      "revId": "4b359f608635ed7398746b18e86c2366cec1c59b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3a68794_e1659ec9",
        "filename": "bl31/aarch64/ea_delegate.S",
        "patchSetId": 19
      },
      "lineNbr": 151,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-06-23T11:19:05Z",
      "side": 1,
      "message": "need a comment that this is only for KFH. Should this be done only if EA \u003d 1 ?",
      "range": {
        "startLine": 142,
        "startChar": 0,
        "endLine": 151,
        "endChar": 15
      },
      "revId": "4b359f608635ed7398746b18e86c2366cec1c59b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af22150a_69705de1",
        "filename": "bl31/aarch64/ea_delegate.S",
        "patchSetId": 19
      },
      "lineNbr": 151,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2023-06-23T11:52:17Z",
      "side": 1,
      "message": "This is applicable to both FFH and KFH, as we are no longer using esb we need to reflect back to lower EL for SError",
      "parentUuid": "e3a68794_e1659ec9",
      "range": {
        "startLine": 142,
        "startChar": 0,
        "endLine": 151,
        "endChar": 15
      },
      "revId": "4b359f608635ed7398746b18e86c2366cec1c59b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "265d9262_ae7b057c",
        "filename": "bl31/aarch64/ea_delegate.S",
        "patchSetId": 19
      },
      "lineNbr": 156,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-06-23T11:19:05Z",
      "side": 1,
      "message": "Not sure I get this logic, Need to discuss this. Could pass an arg in x30 if needed to distinguish between sync and irq/fix.",
      "range": {
        "startLine": 156,
        "startChar": 4,
        "endLine": 156,
        "endChar": 75
      },
      "revId": "4b359f608635ed7398746b18e86c2366cec1c59b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b18c9595_5ad12e25",
        "filename": "bl31/aarch64/ea_delegate.S",
        "patchSetId": 19
      },
      "lineNbr": 156,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2023-06-23T11:52:17Z",
      "side": 1,
      "message": "This is one of the rarest of rare cases and i did not want to clutter the code with populating x30 with this information and use another scratch register for other purpose.\nThe logic here is last 9bits of vector entry address where we came from \n0x00-0x80 : sync exception\nif it is greater than 0x80 we came from sync exception.",
      "parentUuid": "265d9262_ae7b057c",
      "range": {
        "startLine": 156,
        "startChar": 4,
        "endLine": 156,
        "endChar": 75
      },
      "revId": "4b359f608635ed7398746b18e86c2366cec1c59b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb4e374c_df818683",
        "filename": "bl31/aarch64/runtime_exceptions.S",
        "patchSetId": 19
      },
      "lineNbr": 54,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-06-23T11:19:05Z",
      "side": 1,
      "message": "We can use IESB to avoid this dsb sy I think. \n\nFor FFH, if sctlr_el3.IESB is set.\nSince the PSTATE.A \u003d 1, the synced error will show as pending in isr_el1.A and will not be consumed.\n\nFor KFH, if sctlr_el3.IESB is set\nSince SCR_EL3.EA\u003d0, the synced error will show as pending and not be consumed.\n\nThen EL3 can reflect back to take the SError vector for FFH. In case of KFH, the SError will be taken in lower EL(hopefully).\n\nWrap this dsb under !ENABLE_FEAT_RAS flag.",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 54,
        "endChar": 7
      },
      "revId": "4b359f608635ed7398746b18e86c2366cec1c59b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bafe254c_b574f17b",
        "filename": "bl31/aarch64/runtime_exceptions.S",
        "patchSetId": 19
      },
      "lineNbr": 54,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2023-06-27T11:33:37Z",
      "side": 1,
      "message": "Done in previous patch",
      "parentUuid": "bb4e374c_df818683",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 54,
        "endChar": 7
      },
      "revId": "4b359f608635ed7398746b18e86c2366cec1c59b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4d71c1a_02e65e47",
        "filename": "bl31/aarch64/runtime_exceptions.S",
        "patchSetId": 19
      },
      "lineNbr": 57,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-06-23T11:19:05Z",
      "side": 1,
      "message": "not sure why is LR being used needs a bl here. might as well do b right ?",
      "range": {
        "startLine": 57,
        "startChar": 45,
        "endLine": 57,
        "endChar": 52
      },
      "revId": "4b359f608635ed7398746b18e86c2366cec1c59b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "449d4521_8be17ee8",
        "filename": "bl31/aarch64/runtime_exceptions.S",
        "patchSetId": 19
      },
      "lineNbr": 57,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2023-06-23T11:52:17Z",
      "side": 1,
      "message": "mentioned in other comment.",
      "parentUuid": "f4d71c1a_02e65e47",
      "range": {
        "startLine": 57,
        "startChar": 45,
        "endLine": 57,
        "endChar": 52
      },
      "revId": "4b359f608635ed7398746b18e86c2366cec1c59b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7557a573_9a76ce60",
        "filename": "bl31/aarch64/runtime_exceptions.S",
        "patchSetId": 19
      },
      "lineNbr": 295,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2023-06-24T19:59:36Z",
      "side": 1,
      "message": "Is this needed for the \"serror from aarch64 lower el\" exception vector? I believe we should not reflect the serror to lower el in this particular case.",
      "range": {
        "startLine": 295,
        "startChar": 1,
        "endLine": 295,
        "endChar": 31
      },
      "revId": "4b359f608635ed7398746b18e86c2366cec1c59b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3882ccff_e9c7543f",
        "filename": "bl31/aarch64/runtime_exceptions.S",
        "patchSetId": 19
      },
      "lineNbr": 295,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2023-06-26T08:41:08Z",
      "side": 1,
      "message": "We thought about this scenario and decided to keep it for this case also. The reason being\n\nQuite often SErrors come in burst and when lower gets the 1st SError it will come to EL3 and say in the meantime you got one more SError then it will reflect back until the last one is taken. The count 100 is good starting number to break from this loop.\nThis is not the final number but we want this change to go through and get feedback from real platforms, in future we can make this number configurable.",
      "parentUuid": "7557a573_9a76ce60",
      "range": {
        "startLine": 295,
        "startChar": 1,
        "endLine": 295,
        "endChar": 31
      },
      "revId": "4b359f608635ed7398746b18e86c2366cec1c59b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}