{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d48e7f77_8af94107",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2023-09-27T07:26:15Z",
      "side": 1,
      "message": "See comment about WARN messages in previous patch",
      "revId": "1ae501e422bf46bc700aba51c4b1097bebc773fc",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94145bf2_2b77e7ce",
        "filename": "drivers/partition/partition.c",
        "patchSetId": 3
      },
      "lineNbr": 205,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2023-09-27T07:26:15Z",
      "side": 1,
      "message": "this change was not necessary (and it is asked by checkpatch with --strict option, to align on opening parenthesis)",
      "revId": "1ae501e422bf46bc700aba51c4b1097bebc773fc",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03bb56dd_72180f50",
        "filename": "drivers/partition/partition.c",
        "patchSetId": 3
      },
      "lineNbr": 272,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2023-09-28T10:25:04Z",
      "side": 1,
      "message": "In accordance with the UEFI specification [1], backup GPT header information can be retrieved in two ways:\n 1. Retrieve the Alternate LBA from the header of the GPT \n 2. Using the SizeInLBA from the protected MBR (the protected way, as you implemented).  \n\nI\u0027m wondering if we can put some checks, such as (SizeInLBA \u003d\u003d 0 || SizeInLBA \u003d\u003d 0xFFFFFFFF) to check if it contains invalid value and if it is invalid then go with AlternateLBA from GPT header to get BackGPT header?  \nAlternatively, you can check the sanity of both SizeInLBA and AlternateLBA and choose whichever is valid to grab the backup GPT header.\n\nNote: It is possible that AlternateLBA may contain the legit information, even if the primary GPT header is corrupted.\n\n[1]: https://uefi.org/sites/default/files/resources/UEFI_Spec_2_10_Aug29.pdf",
      "range": {
        "startLine": 272,
        "startChar": 22,
        "endLine": 272,
        "endChar": 33
      },
      "revId": "1ae501e422bf46bc700aba51c4b1097bebc773fc",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19cfa2e3_9018257f",
        "filename": "drivers/partition/partition.c",
        "patchSetId": 3
      },
      "lineNbr": 276,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2023-09-28T10:25:04Z",
      "side": 1,
      "message": "This should be ERROR rather WARN as there is no other way to load GPT header and system bails out here.",
      "range": {
        "startLine": 276,
        "startChar": 3,
        "endLine": 276,
        "endChar": 77
      },
      "revId": "1ae501e422bf46bc700aba51c4b1097bebc773fc",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da4cd9fa_f3d7a127",
        "filename": "drivers/partition/partition.c",
        "patchSetId": 3
      },
      "lineNbr": 281,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2023-09-28T10:29:58Z",
      "side": 1,
      "message": "(minor): I feel gpt_part_entry_offset should be more suitable name here.",
      "range": {
        "startLine": 281,
        "startChar": 1,
        "endLine": 281,
        "endChar": 17
      },
      "revId": "1ae501e422bf46bc700aba51c4b1097bebc773fc",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12c49315_034f5073",
        "filename": "drivers/partition/partition.c",
        "patchSetId": 3
      },
      "lineNbr": 321,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2023-09-28T10:25:04Z",
      "side": 1,
      "message": "The mbr_entry variable seems to be a global variable that can be accessed without really being passed via function. It would be better to remove passing the mbr* parameters to the function and access those directly inside the \u0027load_gpt\u0027 function.",
      "range": {
        "startLine": 321,
        "startChar": 34,
        "endLine": 321,
        "endChar": 43
      },
      "revId": "1ae501e422bf46bc700aba51c4b1097bebc773fc",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7b77cb38_dc416e94",
        "filename": "drivers/partition/partition.c",
        "patchSetId": 3
      },
      "lineNbr": 321,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2023-09-29T06:41:42Z",
      "side": 1,
      "message": "Ignore this comment, I overlooked this variable.",
      "parentUuid": "12c49315_034f5073",
      "range": {
        "startLine": 321,
        "startChar": 34,
        "endLine": 321,
        "endChar": 43
      },
      "revId": "1ae501e422bf46bc700aba51c4b1097bebc773fc",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}