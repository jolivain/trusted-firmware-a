{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6ab7f408_9e9544e0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-01-09T10:36:46Z",
      "side": 1,
      "message": "Hi Yann,\n\nI am assuming you must have a working setup to run sparse tool on TF-A codebase. Is that easy to do? Do you reckon it would be valuable to integrate it as an extra set of static checks into the OpenCI? Or is it flagging too many false positives for that?",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 36
      },
      "revId": "5fdaccc7a50f3ed889651d56d0dc36945d100617",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31d659ba_83a62fa1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2023-01-09T10:58:14Z",
      "side": 1,
      "message": "Hi Sandrine,\nYes that\u0027s easy, you just need to add CC\u003dsparse in your make command line.\nSometimes you may have false positive, so I usually run it with CC\u003d\"sparse --arch\u003darm --gcc-base-dir\u003d$TOOLCHAINS/arm-gnu-toolchain-11.3.rel1-x86_64-arm-none-eabi -D__ARM_ARCH -D__ELF__\", as it is aarch32. I can check an aarch64 with an FVP platform if all those options are required.\nIt could be a good idea to add it to the OpenCI. Most of the things I find now are in extra libs (zlib, compiler-rt...).",
      "parentUuid": "6ab7f408_9e9544e0",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 36
      },
      "revId": "5fdaccc7a50f3ed889651d56d0dc36945d100617",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d63c8ad1_75253847",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-01-10T08:25:34Z",
      "side": 1,
      "message": "OK thanks for the information. I will make a note of that for the future.",
      "parentUuid": "31d659ba_83a62fa1",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 36
      },
      "revId": "5fdaccc7a50f3ed889651d56d0dc36945d100617",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe14d34f_95e2357d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-01-10T08:25:34Z",
      "side": 1,
      "message": "After reviewing the CI results, I think there\u0027s no concerns.\n\nThe measured boot config seems to have failed because of a communication issue between Jenkins and LAVA. The LAVA logs themselves show tests passing.\n\nThe BRBE and trace configs are known failures, I believe.",
      "revId": "5fdaccc7a50f3ed889651d56d0dc36945d100617",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}