{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "574de45e_682fda69",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 16
      },
      "lineNbr": 0,
      "author": {
        "id": 1000917
      },
      "writtenOn": "2024-01-12T21:18:09Z",
      "side": 1,
      "message": "I\u0027ve tested this and it seems to work for me with a few things to note.\n1) I need to disable SCMI in U-Boot or else it fails to boot (CONFIG_SCMI_FIRMWARE\u003dn and CONFIG_SCMI_AGENT_SMCCC\u003dn). This is used for BSP U-Boot but U-Boot won\u0027t work with this version of A-TF if these are enabled.\n2) I get an error performing a DSI write in U-Boot. I suspect I need to have a clock set correctly before I can do this properly. Other boards where I don\u0027t need to issue DSI commands in U-Boot seem to work just fine.\n\nTL;DR this seems to work for me, however I\u0027ll need some additional SCMI stuff before I can replace the BSP A-TF in all my use cases.\n\nThank you.",
      "revId": "0ac3577101f7119b84f2e1fa2e88ea3f977d7480",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3607d9c_2dcd4675",
        "filename": "docs/plat/rockchip.rst",
        "patchSetId": 16
      },
      "lineNbr": 8,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2024-01-18T15:29:42Z",
      "side": 1,
      "message": "Does this patch set cover the RK3566 as well? The Rockchip provided TF-A binary blob at least works on both SoCs, so I\u0027d assume the chips do not really differ in the part relevant for TF-A? Also I guess this entry should be ordered, so it moves to the end of this list?",
      "revId": "0ac3577101f7119b84f2e1fa2e88ea3f977d7480",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4b0f530_c7898190",
        "filename": "docs/plat/rockchip.rst",
        "patchSetId": 16
      },
      "lineNbr": 8,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2024-02-14T16:22:22Z",
      "side": 1,
      "message": "Thanks for the confirmation. Can you still please move that line to the end of the list?",
      "parentUuid": "c3607d9c_2dcd4675",
      "revId": "0ac3577101f7119b84f2e1fa2e88ea3f977d7480",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e8939f84_f01e72bd",
        "filename": "docs/plat/rockchip.rst",
        "patchSetId": 16
      },
      "lineNbr": 8,
      "author": {
        "id": 1000879
      },
      "writtenOn": "2024-02-19T03:21:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f4b0f530_c7898190",
      "revId": "0ac3577101f7119b84f2e1fa2e88ea3f977d7480",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e1865d7_73463f70",
        "filename": "include/lib/cpus/aarch64/cortex_a55.h",
        "patchSetId": 16
      },
      "lineNbr": 21,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2024-01-18T15:29:42Z",
      "side": 1,
      "message": "I couldn\u0027t find this register in the A55 TRM, since it\u0027s a DSU register.\nSo this should go into include/lib/cpus/aarch64/dsu_def.h instead?",
      "revId": "0ac3577101f7119b84f2e1fa2e88ea3f977d7480",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e8a0d4b6_05132b48",
        "filename": "include/lib/cpus/aarch64/cortex_a55.h",
        "patchSetId": 16
      },
      "lineNbr": 21,
      "author": {
        "id": 1000879
      },
      "writtenOn": "2024-02-19T03:21:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2e1865d7_73463f70",
      "revId": "0ac3577101f7119b84f2e1fa2e88ea3f977d7480",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "86890c61_717bbb3a",
        "filename": "include/lib/cpus/aarch64/cortex_a55.h",
        "patchSetId": 16
      },
      "lineNbr": 51,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2024-01-18T15:29:42Z",
      "side": 1,
      "message": "Why this include? There is nothing used from that header in the lines below?",
      "revId": "0ac3577101f7119b84f2e1fa2e88ea3f977d7480",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "77e25687_4a53dd3a",
        "filename": "include/lib/cpus/aarch64/cortex_a55.h",
        "patchSetId": 16
      },
      "lineNbr": 51,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2024-02-14T16:22:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "86890c61_717bbb3a",
      "revId": "0ac3577101f7119b84f2e1fa2e88ea3f977d7480",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "70d9b9ae_07127d03",
        "filename": "include/lib/cpus/aarch64/cortex_a55.h",
        "patchSetId": 16
      },
      "lineNbr": 52,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2024-01-18T15:29:42Z",
      "side": 1,
      "message": "I see this being used already by Qualcomm Kryo code, how does this work when not being already exported?",
      "revId": "0ac3577101f7119b84f2e1fa2e88ea3f977d7480",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e2eea327_8a63c119",
        "filename": "include/lib/cpus/aarch64/cortex_a55.h",
        "patchSetId": 16
      },
      "lineNbr": 52,
      "author": {
        "id": 1000879
      },
      "writtenOn": "2024-02-19T03:21:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "70d9b9ae_07127d03",
      "revId": "0ac3577101f7119b84f2e1fa2e88ea3f977d7480",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99148395_aaeccf63",
        "filename": "include/lib/cpus/aarch64/cortex_a55.h",
        "patchSetId": 16
      },
      "lineNbr": 53,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2024-01-18T15:29:42Z",
      "side": 1,
      "message": "I think this is not A55 specific, but a general DSU register. So at least it should be renamed, and I guess also moved to a non core specific file.",
      "revId": "0ac3577101f7119b84f2e1fa2e88ea3f977d7480",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a5c48a9c_dd1745b3",
        "filename": "include/lib/cpus/aarch64/cortex_a55.h",
        "patchSetId": 16
      },
      "lineNbr": 53,
      "author": {
        "id": 1000879
      },
      "writtenOn": "2024-02-19T03:21:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "99148395_aaeccf63",
      "revId": "0ac3577101f7119b84f2e1fa2e88ea3f977d7480",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d2ca5b8_56c0e5b6",
        "filename": "lib/cpus/aarch64/cortex_a55.S",
        "patchSetId": 16
      },
      "lineNbr": 140,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2024-01-18T15:29:42Z",
      "side": 1,
      "message": "That looks wrong? Initalising x1, then using x0? If 0 is really the value to write, we should use just xzr?",
      "revId": "0ac3577101f7119b84f2e1fa2e88ea3f977d7480",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "efa24ccc_927aec14",
        "filename": "lib/cpus/aarch64/cortex_a55.S",
        "patchSetId": 16
      },
      "lineNbr": 140,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2024-02-14T16:22:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3d2ca5b8_56c0e5b6",
      "revId": "0ac3577101f7119b84f2e1fa2e88ea3f977d7480",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "841e59bc_c8804c60",
        "filename": "plat/rockchip/common/aarch64/platform_common.c",
        "patchSetId": 16
      },
      "lineNbr": 36,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2024-01-18T15:29:42Z",
      "side": 1,
      "message": "Wouldn\u0027t it be cleaner to just ignore the coherent region is both start and limit are identical? RK3568 would then just provide 0 for both values in the caller, and we avoid this extra definition.",
      "revId": "0ac3577101f7119b84f2e1fa2e88ea3f977d7480",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80e382fe_99bdcad1",
        "filename": "plat/rockchip/common/aarch64/platform_common.c",
        "patchSetId": 16
      },
      "lineNbr": 36,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2024-02-14T16:22:22Z",
      "side": 1,
      "message": "Sorry, but I meant to get rid of the \"#if USE_COHERENT_MEM\" completely, and just provide an \"if\" statement for the coherent part, in just one definition. This can then be used by all SoCs. Chips without coherent memory then just provide 0 for coh_start and coh_limit.",
      "parentUuid": "841e59bc_c8804c60",
      "revId": "0ac3577101f7119b84f2e1fa2e88ea3f977d7480",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "31bd108a_1f1aad6e",
        "filename": "plat/rockchip/common/aarch64/platform_common.c",
        "patchSetId": 16
      },
      "lineNbr": 36,
      "author": {
        "id": 1000879
      },
      "writtenOn": "2024-02-19T03:21:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "80e382fe_99bdcad1",
      "revId": "0ac3577101f7119b84f2e1fa2e88ea3f977d7480",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}