{
  "comments": [
    {
      "key": {
        "uuid": "c6d4ac66_0cb5e93c",
        "filename": "lib/locks/bakery/bakery_lock_normal.c",
        "patchSetId": 4
      },
      "lineNbr": 82,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2020-02-26T09:59:29Z",
      "side": 1,
      "message": "The logic is confusing. If cached is false, it will just execute dmb.\nShould dmb follow dc operation in the if statement? And do nothing if cached is false?",
      "revId": "4c9c64b8ad0ec9ccb36a8c82c41d23618c9986bc",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b5198c3_c3990ec7",
        "filename": "lib/locks/bakery/bakery_lock_normal.c",
        "patchSetId": 4
      },
      "lineNbr": 82,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2020-02-26T16:50:11Z",
      "side": 1,
      "message": "Do we not need to execute the dmbish() even if cached is false ? If we have normal non-cacheable memory, you could have reordering in the loop. Is it necessary for correctness, that the tickets of all other CPU\u0027s be read in order ? Looking it at it again, i think not so we may be able to get away with it being in the if (cached) block. Also can you elaborate on why you thought it confusing? Usually you have barrier pairing on the write side and read side so it looks quite natural.",
      "parentUuid": "c6d4ac66_0cb5e93c",
      "revId": "4c9c64b8ad0ec9ccb36a8c82c41d23618c9986bc",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a0bd356_40b70338",
        "filename": "lib/locks/bakery/bakery_lock_normal.c",
        "patchSetId": 4
      },
      "lineNbr": 82,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2020-02-28T08:58:30Z",
      "side": 1,
      "message": "Never mind, I thought at first if cached is false that the function would do \"nothing\" but dmb.\nBut this barrier might still be required by the upper layer logic, as you say to make read/write symmetric.\nSo you can just ignore my statement here.",
      "parentUuid": "9b5198c3_c3990ec7",
      "revId": "4c9c64b8ad0ec9ccb36a8c82c41d23618c9986bc",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    }
  ]
}