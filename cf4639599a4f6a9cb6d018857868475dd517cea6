{
  "comments": [
    {
      "key": {
        "uuid": "2a9a8f65_689b1b28",
        "filename": "plat/arm/board/n1sdp/n1sdp_bl31_setup.c",
        "patchSetId": 5
      },
      "lineNbr": 165,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2019-10-29T08:23:20Z",
      "side": 1,
      "message": "I am confused by this... If I understand correctly, this stores the first 4 bytes of the plat_info structure at address N1SDP_PLATFORM_INFO_BASE. This structure starts with a boolean. I am not sure the size of a boolean is defined by the C standard (I think it just says that it must be large enough to hold 0 and 1).\n\nIs this code correct? Am I missing something?",
      "range": {
        "startLine": 165,
        "startChar": 41,
        "endLine": 165,
        "endChar": 64
      },
      "revId": "cf4639599a4f6a9cb6d018857868475dd517cea6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e8686aa_00c77246",
        "filename": "plat/arm/board/n1sdp/n1sdp_bl31_setup.c",
        "patchSetId": 5
      },
      "lineNbr": 165,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2019-10-29T10:19:03Z",
      "side": 1,
      "message": "plat_info structure is 4 bytes long, Boolean also takes 1 byte(An object declared as type _Bool is large enough to store the values 0 and 1, which is at least a byte long)\n\nIntention here is to copy plat_info structure at this address for UEFI.",
      "parentUuid": "2a9a8f65_689b1b28",
      "range": {
        "startLine": 165,
        "startChar": 41,
        "endLine": 165,
        "endChar": 64
      },
      "revId": "cf4639599a4f6a9cb6d018857868475dd517cea6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3341f1b0_539d5662",
        "filename": "plat/arm/board/n1sdp/n1sdp_bl31_setup.c",
        "patchSetId": 5
      },
      "lineNbr": 165,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2019-10-29T11:57:00Z",
      "side": 1,
      "message": "I agree with you, _Bool is *at least* 1 byte long but that doesn\u0027t say what its *exact* width is. If I am not mistaken, it could well be 8 bytes long and that would still be compliant with the C standard. This code is making an assumption on the exact size of the _Bool type and I think it should not. And even so, assuming that _Bool is indeed 1 byte long, there would still be no guarantee that the structure is 4 bytes long, as the compiler is free to insert padding bytes between fields (unless the structure is declared as packed).\n\nIn fact, given that the n1sdp_plat_info structure is passed from SCP over SDS, I am guessing it is crucial that both firmwares have the same view of the structure layout. So I think we need to declare the structure as packed and use fixed-width types only (i.e. replacing \"bool multichip_mode\" by \"uint8_t multichip_mode\").\n\nDoes it make sense?",
      "parentUuid": "4e8686aa_00c77246",
      "range": {
        "startLine": 165,
        "startChar": 41,
        "endLine": 165,
        "endChar": 64
      },
      "revId": "cf4639599a4f6a9cb6d018857868475dd517cea6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    }
  ]
}