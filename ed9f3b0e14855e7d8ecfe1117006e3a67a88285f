{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e78b32be_679150d0",
        "filename": "docs/getting_started/porting-guide.rst",
        "patchSetId": 9
      },
      "lineNbr": 952,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2022-01-11T18:01:06Z",
      "side": 1,
      "message": "s/should boot/has booted/",
      "range": {
        "startLine": 952,
        "startChar": 0,
        "endLine": 952,
        "endChar": 6
      },
      "revId": "ed9f3b0e14855e7d8ecfe1117006e3a67a88285f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13745815_b1b33d6e",
        "filename": "docs/getting_started/porting-guide.rst",
        "patchSetId": 9
      },
      "lineNbr": 952,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2022-01-11T18:53:00Z",
      "side": 1,
      "message": "Hi Etienne,\nThis function gets used while setting the FIP image specification (offset and length). Later BL2 uses that specification to load images contained in that FIP to the memory. \nIMO, main use of this function is to return the bank(where FIP resides) that platform should use to boot images(load images to memory).\nI agree that this function further gets used [2] while setting the boot index in the register.\nCan we add both cases by s/should boot/should boot or has booted? (need changes also at line no.945 then). Please let me know what do you think?\n\n\n[1]: https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/12573/9/plat/st/common/bl2_io_storage.c#527\n[2]: https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/12577/9/plat/st/stm32mp1/stm32mp1_private.c#603",
      "parentUuid": "e78b32be_679150d0",
      "range": {
        "startLine": 952,
        "startChar": 0,
        "endLine": 952,
        "endChar": 6
      },
      "revId": "ed9f3b0e14855e7d8ecfe1117006e3a67a88285f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cecd12c6_2cb6f070",
        "filename": "docs/getting_started/porting-guide.rst",
        "patchSetId": 9
      },
      "lineNbr": 952,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2022-01-14T13:11:44Z",
      "side": 1,
      "message": "I a bit confused. 1st paragraph states the function returns the effective boot_index (i.e. the index effectively use to boot the updateable image).\n\n\u003e (...) The boot index is the\n\u003e bank from which the platform has booted the firmware images.\n\nplat_fwu_get_boot_index() should return the effective boot index.\n\nMany some function renaming is needed:\n\nfwu_get_active_index() \u003d\u003e gets the \u0027active_index\u0027 field of metadata\nfwu_get_previous_active_index() \u003d\u003e gets the \u0027active_index\u0027 field of metadata\nThese could be generic from fwu.c (return metadata-\u003e[previous_]active_index).\n\nIn the implementation you propose, it is platform code that decides implements decision between active and previous_active indices. Since it is platform code that also saves effective boot_index in some platform memory (for update agent), i don\u0027t think we need a generic API function as plat_fwu_get_boot_index(). It can remain local to the platform source file.",
      "parentUuid": "13745815_b1b33d6e",
      "range": {
        "startLine": 952,
        "startChar": 0,
        "endLine": 952,
        "endChar": 6
      },
      "revId": "ed9f3b0e14855e7d8ecfe1117006e3a67a88285f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}