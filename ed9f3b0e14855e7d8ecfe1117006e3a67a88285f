{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e78b32be_679150d0",
        "filename": "docs/getting_started/porting-guide.rst",
        "patchSetId": 9
      },
      "lineNbr": 952,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2022-01-11T18:01:06Z",
      "side": 1,
      "message": "s/should boot/has booted/",
      "range": {
        "startLine": 952,
        "startChar": 0,
        "endLine": 952,
        "endChar": 6
      },
      "revId": "ed9f3b0e14855e7d8ecfe1117006e3a67a88285f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13745815_b1b33d6e",
        "filename": "docs/getting_started/porting-guide.rst",
        "patchSetId": 9
      },
      "lineNbr": 952,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2022-01-11T18:53:00Z",
      "side": 1,
      "message": "Hi Etienne,\nThis function gets used while setting the FIP image specification (offset and length). Later BL2 uses that specification to load images contained in that FIP to the memory. \nIMO, main use of this function is to return the bank(where FIP resides) that platform should use to boot images(load images to memory).\nI agree that this function further gets used [2] while setting the boot index in the register.\nCan we add both cases by s/should boot/should boot or has booted? (need changes also at line no.945 then). Please let me know what do you think?\n\n\n[1]: https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/12573/9/plat/st/common/bl2_io_storage.c#527\n[2]: https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/12577/9/plat/st/stm32mp1/stm32mp1_private.c#603",
      "parentUuid": "e78b32be_679150d0",
      "range": {
        "startLine": 952,
        "startChar": 0,
        "endLine": 952,
        "endChar": 6
      },
      "revId": "ed9f3b0e14855e7d8ecfe1117006e3a67a88285f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cecd12c6_2cb6f070",
        "filename": "docs/getting_started/porting-guide.rst",
        "patchSetId": 9
      },
      "lineNbr": 952,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2022-01-14T13:11:44Z",
      "side": 1,
      "message": "I a bit confused. 1st paragraph states the function returns the effective boot_index (i.e. the index effectively use to boot the updateable image).\n\n\u003e (...) The boot index is the\n\u003e bank from which the platform has booted the firmware images.\n\nplat_fwu_get_boot_index() should return the effective boot index.\n\nMany some function renaming is needed:\n\nfwu_get_active_index() \u003d\u003e gets the \u0027active_index\u0027 field of metadata\nfwu_get_previous_active_index() \u003d\u003e gets the \u0027active_index\u0027 field of metadata\nThese could be generic from fwu.c (return metadata-\u003e[previous_]active_index).\n\nIn the implementation you propose, it is platform code that decides implements decision between active and previous_active indices. Since it is platform code that also saves effective boot_index in some platform memory (for update agent), i don\u0027t think we need a generic API function as plat_fwu_get_boot_index(). It can remain local to the platform source file.",
      "parentUuid": "13745815_b1b33d6e",
      "range": {
        "startLine": 952,
        "startChar": 0,
        "endLine": 952,
        "endChar": 6
      },
      "revId": "ed9f3b0e14855e7d8ecfe1117006e3a67a88285f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1103918a_ec867d4c",
        "filename": "docs/getting_started/porting-guide.rst",
        "patchSetId": 9
      },
      "lineNbr": 952,
      "author": {
        "id": 1000661
      },
      "writtenOn": "2022-01-17T06:08:31Z",
      "side": 1,
      "message": "The reason that I named the function as plat_fwu_get_boot_index and not plat_fwu_get_active_index is that the bank from which the platform might be booting need not be the active_index. For e.g. on a watchdog reset, the platform would try to boot from the previous_active_index instead. So the function is returning a value which is the bank from which the platform will boot, which is not necessarily the active_index.\n\nOn the point of keeping this function as a static, local to the platform file, we do need to call this function when tf-a(BL2 in the case of ST board) needs to get the boot index to pass to the Update Agent(u-boot). For the ST board, this is being called from stm32mp1_private.c. Yann had asked me to move this logic into a separate function in stm32mp1_private.c.",
      "parentUuid": "cecd12c6_2cb6f070",
      "range": {
        "startLine": 952,
        "startChar": 0,
        "endLine": 952,
        "endChar": 6
      },
      "revId": "ed9f3b0e14855e7d8ecfe1117006e3a67a88285f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6d0a20e_8675ddd2",
        "filename": "docs/getting_started/porting-guide.rst",
        "patchSetId": 9
      },
      "lineNbr": 952,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2022-01-17T11:11:58Z",
      "side": 1,
      "message": "Ok. Fine with me. I was confused by some wording (\u0027should\u0027 instead of \u0027will\u0027) but that\u0027s my fault.",
      "parentUuid": "1103918a_ec867d4c",
      "range": {
        "startLine": 952,
        "startChar": 0,
        "endLine": 952,
        "endChar": 6
      },
      "revId": "ed9f3b0e14855e7d8ecfe1117006e3a67a88285f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3fdbfa0a_61eaf3ee",
        "filename": "docs/getting_started/porting-guide.rst",
        "patchSetId": 9
      },
      "lineNbr": 952,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2022-01-17T11:53:39Z",
      "side": 1,
      "message": "Thanks, Sughosh, and Etienne for the clarifications.\nI also agree now this function is used \u0027to retrieve the boot index\u0027 in various scenarios explained in 2 paragraphs.\n1. 1st paragraph explains the usage of this function after images get loaded to memory (kind of helper function) and \n2. 2nd paragraph explains use of this function before images get loaded to memory",
      "parentUuid": "c6d0a20e_8675ddd2",
      "range": {
        "startLine": 952,
        "startChar": 0,
        "endLine": 952,
        "endChar": 6
      },
      "revId": "ed9f3b0e14855e7d8ecfe1117006e3a67a88285f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}