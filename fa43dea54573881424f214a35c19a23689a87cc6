{
  "comments": [
    {
      "key": {
        "uuid": "fd59ab16_3ac6df34",
        "filename": "drivers/arm/gic/v2/gicv2.mk",
        "patchSetId": 5
      },
      "lineNbr": 8,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-07-14T19:12:43Z",
      "side": 1,
      "message": "Just curious, since this is the gicv2 driver, is this flag required?",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 8,
        "endChar": 18
      },
      "revId": "fa43dea54573881424f214a35c19a23689a87cc6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85358687_b69ea636",
        "filename": "drivers/arm/gic/v2/gicv2.mk",
        "patchSetId": 5
      },
      "lineNbr": 8,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2020-07-15T16:12:29Z",
      "side": 1,
      "message": "Yes. See plat\\arm\\board\\fvp\\fvp_def.h line #57.\nBecause Redistributors\u0027 offsets are different between GICv4 and GICv3/2.\nSimilar changes might be required for other platforms as well.",
      "parentUuid": "fd59ab16_3ac6df34",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 8,
        "endChar": 18
      },
      "revId": "fa43dea54573881424f214a35c19a23689a87cc6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f360ad6e_c7d6f082",
        "filename": "drivers/arm/gic/v2/gicv2.mk",
        "patchSetId": 5
      },
      "lineNbr": 8,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-07-15T20:29:23Z",
      "side": 1,
      "message": "GICv2 does not even have re-distributors. Or do you call GICv2 CPU interface a \"redistributor\"? The code in FVP implies that this is a platform level quirk creeping into the generic driver (?)",
      "parentUuid": "85358687_b69ea636",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 8,
        "endChar": 18
      },
      "revId": "fa43dea54573881424f214a35c19a23689a87cc6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eff4c590_de4d2cdf",
        "filename": "drivers/arm/gic/v2/gicv2.mk",
        "patchSetId": 5
      },
      "lineNbr": 8,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2020-07-16T11:39:04Z",
      "side": 1,
      "message": "Platform\u0027s memory mapping depends on GIC_ENABLE_V4_EXTN value. What is the problem here?",
      "parentUuid": "f360ad6e_c7d6f082",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 8,
        "endChar": 18
      },
      "revId": "fa43dea54573881424f214a35c19a23689a87cc6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a307cca4_b9588146",
        "filename": "drivers/arm/gic/v2/gicv2.mk",
        "patchSetId": 5
      },
      "lineNbr": 8,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-07-16T17:19:01Z",
      "side": 1,
      "message": "I understand that Arm platforms might require this. But by adding the quirk to a top level makefile, you are implying that all underlying platforms would need this flag. I am not sure if that\u0027s the right assumption.",
      "parentUuid": "eff4c590_de4d2cdf",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 8,
        "endChar": 18
      },
      "revId": "fa43dea54573881424f214a35c19a23689a87cc6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86975cee_01e651e4",
        "filename": "drivers/arm/gic/v2/gicv2.mk",
        "patchSetId": 5
      },
      "lineNbr": 8,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2020-07-17T13:46:56Z",
      "side": 1,
      "message": "Although CPP treats all macros which aren\u0027t defined as 0 (false) in \"#if MACRO\" statements, when GIC_ENABLE_V4_EXTN is not defined in gicv2.mk, Coverity scan reports an error for using not defined macro. Platforms other than ARM are free to use or not to use it.\nAlso take a look at gicv3.mk, which has other macros defined:\n# Default configuration values\nGICV3_SUPPORT_GIC600\t\t?\u003d\t0\nGICV3_IMPL_GIC600_MULTICHIP\t?\u003d\t0\nGICV3_OVERRIDE_DISTIF_PWR_OPS\t?\u003d\t0\nbut this is not \"implying that all underlying platforms would need this flag\".\nI don\u0027t see any issue here.",
      "parentUuid": "a307cca4_b9588146",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 8,
        "endChar": 18
      },
      "revId": "fa43dea54573881424f214a35c19a23689a87cc6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ddecc24e_a04241ef",
        "filename": "drivers/arm/gic/v2/gicv2.mk",
        "patchSetId": 5
      },
      "lineNbr": 8,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-07-17T16:46:39Z",
      "side": 1,
      "message": "I think the comparison with gicv3 makefile is not the right measuring stick. The macros there seem generic at least and seem useful for multiple platforms.\n\nThe macro in gicv2 makefile is to allow Arm platform to define different base addresses. Isnt this a platform specific setting that shouldnt be here?",
      "parentUuid": "86975cee_01e651e4",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 8,
        "endChar": 18
      },
      "revId": "fa43dea54573881424f214a35c19a23689a87cc6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa02eee5_4dac72ff",
        "filename": "drivers/arm/gic/v2/gicv2.mk",
        "patchSetId": 5
      },
      "lineNbr": 8,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2020-07-18T11:15:15Z",
      "side": 1,
      "message": "This macro in gicv3 makefile is also \"to allow Arm platform to define different base addresses\".\nAre you suggesting to define another macro for Arm platform with GICv2 which will replace GIC_ENABLE_V4_EXTN? As I posted above GIC_ENABLE_V4_EXTN must be always defined for Coverity compliance. Does having GIC_ENABLE_V4_EXTN \u003d 0 in gicv2 makefile cause any issue for Tegra platform?",
      "parentUuid": "ddecc24e_a04241ef",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 8,
        "endChar": 18
      },
      "revId": "fa43dea54573881424f214a35c19a23689a87cc6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f021862_2af1450f",
        "filename": "drivers/arm/gic/v2/gicv2.mk",
        "patchSetId": 5
      },
      "lineNbr": 8,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2020-07-18T18:07:09Z",
      "side": 1,
      "message": "I removed GIC_ENABLE_V4_EXTN from gicv2.mk.",
      "parentUuid": "fa02eee5_4dac72ff",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 8,
        "endChar": 18
      },
      "revId": "fa43dea54573881424f214a35c19a23689a87cc6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    }
  ]
}