{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "aa4cc3c5_6e015e2b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 42
      },
      "lineNbr": 16,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2024-07-23T16:54:44Z",
      "side": 1,
      "message": "does this mean \u0027EL2 should save and restore\u0027?",
      "range": {
        "startLine": 16,
        "startChar": 11,
        "endLine": 16,
        "endChar": 29
      },
      "revId": "d478254057572315772a926acc3826a889ee7cf6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f7970f98_61613b6e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 42
      },
      "lineNbr": 16,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2024-07-23T21:01:23Z",
      "side": 1,
      "message": "Hi Jayanth,\nI too had a question along these lines. My apologies if it has been answered in the past. Is the assumption that if S-EL2 supervisory software exists in a system, then it must save the incoming(NWd) EL1 system/register context? We introduced such a support for hafnium SPMC but I am not sure if every SPMC implementation is guaranteed to do this.\n\nI am asking because there is a scenario where EL3 might have to save NS EL1 context even if CTX_INCLUDE_EL2_REGS\u003d1. An example is NWd execution getting preempted by a Group1-Secure interrupt through an FIQ. The NWd hypervisor does not get a chance to save EL1 context. this directly impacts the change made to tegra_fiq_glue.c file.",
      "parentUuid": "aa4cc3c5_6e015e2b",
      "range": {
        "startLine": 16,
        "startChar": 11,
        "endLine": 16,
        "endChar": 29
      },
      "revId": "d478254057572315772a926acc3826a889ee7cf6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e4cff40b_b4eca7bb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 42
      },
      "lineNbr": 16,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2024-07-24T07:38:59Z",
      "side": 1,
      "message": "sorry I meant in my first comment above \u0027EL3 should save and restore\u0027\n\nHi @Madhu,\n\u003e  Is the assumption that if S-EL2 supervisory software exists in a system, then it must save the incoming(NWd) EL1 system/register context? We introduced such a support for hafnium SPMC but I am not sure if every SPMC implementation is guaranteed to do this.\n\nI think it\u0027s a reasonable assumption for TF-A / Hafnium as reference tforg\u0027s components. This is also the case for TF-RMM. I sense we shouldn\u0027t overengineer for supporting implementations beyond reference projects, that we don\u0027t know about.\n\n\u003e I am asking because there is a scenario where EL3 might have to save NS EL1 context even if CTX_INCLUDE_EL2_REGS\u003d1.\n\nI\u0027m not sure this case really exists. Which TEE SW architecture requires this?\n\n\u003e An example is NWd execution getting preempted by a Group1-Secure interrupt through an FIQ. The NWd hypervisor does not get a chance to save EL1 context.\n\nThen x-EL2 saves the normal world (NS-EL1) context on entry, handles the secure interrupt, and restores the NS-EL1 context on exit. The NWd hypervisor doesn\u0027t have to know about it. And EL3 doesn\u0027t require saving/restoring EL1 registers.",
      "parentUuid": "f7970f98_61613b6e",
      "range": {
        "startLine": 16,
        "startChar": 11,
        "endLine": 16,
        "endChar": 29
      },
      "revId": "d478254057572315772a926acc3826a889ee7cf6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e05360d_d2a28bab",
        "filename": "/COMMIT_MSG",
        "patchSetId": 42
      },
      "lineNbr": 16,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2024-07-24T17:16:45Z",
      "side": 1,
      "message": "\u003e\u003e Then x-EL2 saves the normal world (NS-EL1) context on entry, handles the secure interrupt, and restores the NS-EL1 context on exit.\n\nYes, if this is the case, then there is no issue with current approach. Agreed that we cannot cater to implementations which don\u0027t adhere to above assumption.",
      "parentUuid": "e4cff40b_b4eca7bb",
      "range": {
        "startLine": 16,
        "startChar": 11,
        "endLine": 16,
        "endChar": 29
      },
      "revId": "d478254057572315772a926acc3826a889ee7cf6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2b446a11_b2f33487",
        "filename": "/COMMIT_MSG",
        "patchSetId": 42
      },
      "lineNbr": 16,
      "author": {
        "id": 1000660
      },
      "writtenOn": "2024-07-29T22:38:51Z",
      "side": 1,
      "message": "Thanks Madhu and Olivier for having this discussion. Good to know such kind of scenarious do exist. As this comment been discussed and agreed. Closing it.",
      "parentUuid": "2e05360d_d2a28bab",
      "range": {
        "startLine": 16,
        "startChar": 11,
        "endLine": 16,
        "endChar": 29
      },
      "revId": "d478254057572315772a926acc3826a889ee7cf6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b0c74d6_ff2e2c8d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 42
      },
      "lineNbr": 20,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2024-07-23T16:54:44Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 20,
        "startChar": 31,
        "endLine": 20,
        "endChar": 40
      },
      "revId": "d478254057572315772a926acc3826a889ee7cf6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e68acc55_58bc57e0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 42
      },
      "lineNbr": 20,
      "author": {
        "id": 1000660
      },
      "writtenOn": "2024-07-29T22:38:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0b0c74d6_ff2e2c8d",
      "range": {
        "startLine": 20,
        "startChar": 31,
        "endLine": 20,
        "endChar": 40
      },
      "revId": "d478254057572315772a926acc3826a889ee7cf6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aea6b242_ebfdc333",
        "filename": "/COMMIT_MSG",
        "patchSetId": 42
      },
      "lineNbr": 22,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2024-07-23T16:54:44Z",
      "side": 1,
      "message": "I don\u0027t think S-EL2 should be mentioned specifically as this also applies to R-EL2. This should be worded more generally as in el1 context register is omitted when lower EL is always x-EL2.",
      "range": {
        "startLine": 21,
        "startChar": 52,
        "endLine": 22,
        "endChar": 69
      },
      "revId": "d478254057572315772a926acc3826a889ee7cf6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5f18fec3_483f6cd3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 42
      },
      "lineNbr": 22,
      "author": {
        "id": 1000660
      },
      "writtenOn": "2024-07-29T22:38:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aea6b242_ebfdc333",
      "range": {
        "startLine": 21,
        "startChar": 52,
        "endLine": 22,
        "endChar": 69
      },
      "revId": "d478254057572315772a926acc3826a889ee7cf6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "122e406f_4649093e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 42
      },
      "lineNbr": 28,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2024-07-23T16:54:44Z",
      "side": 1,
      "message": "similar to above, I don\u0027t think it\u0027s required to mention S-EL2.",
      "range": {
        "startLine": 28,
        "startChar": 36,
        "endLine": 28,
        "endChar": 59
      },
      "revId": "d478254057572315772a926acc3826a889ee7cf6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c77aaff5_6c9ec176",
        "filename": "/COMMIT_MSG",
        "patchSetId": 42
      },
      "lineNbr": 28,
      "author": {
        "id": 1000660
      },
      "writtenOn": "2024-07-29T22:38:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "122e406f_4649093e",
      "range": {
        "startLine": 28,
        "startChar": 36,
        "endLine": 28,
        "endChar": 59
      },
      "revId": "d478254057572315772a926acc3826a889ee7cf6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "79555408_6ab42862",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 42
      },
      "lineNbr": 0,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2024-07-23T16:48:56Z",
      "side": 1,
      "message": "Looks good to me",
      "revId": "d478254057572315772a926acc3826a889ee7cf6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2455fc89_aa0d41e6",
        "filename": "bl1/bl1_fwu.c",
        "patchSetId": 42
      },
      "lineNbr": 534,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2024-07-23T17:05:23Z",
      "side": 1,
      "message": "Does this really apply to BL1 and BL2?\nimo CTX_INCLUDE_EL2_REGS concerns BL31 as a matter of world switching.\nBL2 runs at S-EL1 so I wonder if above has broader consequences?",
      "range": {
        "startLine": 530,
        "startChar": 0,
        "endLine": 534,
        "endChar": 6
      },
      "revId": "d478254057572315772a926acc3826a889ee7cf6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6ca08de4_76969a49",
        "filename": "bl1/bl1_fwu.c",
        "patchSetId": 42
      },
      "lineNbr": 534,
      "author": {
        "id": 1000660
      },
      "writtenOn": "2024-08-01T22:28:32Z",
      "side": 1,
      "message": "Yes. Agreed.\nBL1 doesn\u0027t require EL2 context. This check is not required at all. Will modify it in my next patch.",
      "parentUuid": "2455fc89_aa0d41e6",
      "range": {
        "startLine": 530,
        "startChar": 0,
        "endLine": 534,
        "endChar": 6
      },
      "revId": "d478254057572315772a926acc3826a889ee7cf6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "245b3c95_bae04598",
        "filename": "include/lib/el3_runtime/aarch64/context.h",
        "patchSetId": 42
      },
      "lineNbr": 10,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2024-07-23T17:05:23Z",
      "side": 1,
      "message": "nitpick: for readability, would it be preferable using the positive logic and flip the include statements?\n\n    #if CTX_INCLUDE_EL2_REGS\n    #include \u003clib/el3_runtime/context_el2.h\u003e\n    #else\n    #include \u003clib/el3_runtime/context_el1.h\u003e\n    #endif",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 27
      },
      "revId": "d478254057572315772a926acc3826a889ee7cf6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4f0c1f69_15ddbabd",
        "filename": "include/lib/el3_runtime/aarch64/context.h",
        "patchSetId": 42
      },
      "lineNbr": 10,
      "author": {
        "id": 1000660
      },
      "writtenOn": "2024-07-29T22:38:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "245b3c95_bae04598",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 27
      },
      "revId": "d478254057572315772a926acc3826a889ee7cf6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77208121_076828e7",
        "filename": "include/lib/el3_runtime/aarch64/context.h",
        "patchSetId": 42
      },
      "lineNbr": 290,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2024-07-23T16:48:56Z",
      "side": 1,
      "message": "did you mean CTX_INCLUDE_EL2_REGS\u003d0",
      "range": {
        "startLine": 290,
        "startChar": 45,
        "endLine": 290,
        "endChar": 63
      },
      "revId": "d478254057572315772a926acc3826a889ee7cf6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5883299a_6cd5b5b6",
        "filename": "include/lib/el3_runtime/aarch64/context.h",
        "patchSetId": 42
      },
      "lineNbr": 290,
      "author": {
        "id": 1000660
      },
      "writtenOn": "2024-07-29T22:38:51Z",
      "side": 1,
      "message": "Yes.",
      "parentUuid": "77208121_076828e7",
      "range": {
        "startLine": 290,
        "startChar": 45,
        "endLine": 290,
        "endChar": 63
      },
      "revId": "d478254057572315772a926acc3826a889ee7cf6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d9596eed_181a7453",
        "filename": "plat/arm/board/neoverse_rd/common/ras/nrd_ras_cpu.c",
        "patchSetId": 42
      },
      "lineNbr": 157,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2024-07-23T17:05:23Z",
      "side": 1,
      "message": "I wonder if this is the right fix, as CTX_INCLUDE_EL2_REGS\u003d1 will build without saving/restoring any context.\nDid build test configs fail without this change? If yes, I wonder platforms folks would have to refactor this a bit.",
      "range": {
        "startLine": 157,
        "startChar": 0,
        "endLine": 157,
        "endChar": 27
      },
      "revId": "d478254057572315772a926acc3826a889ee7cf6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d5a3e1e_833f550f",
        "filename": "services/std_svc/sdei/sdei_intr_mgmt.c",
        "patchSetId": 42
      },
      "lineNbr": 211,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2024-07-23T17:05:23Z",
      "side": 1,
      "message": "similarly, I wonder if this is source for troubles later...",
      "range": {
        "startLine": 211,
        "startChar": 1,
        "endLine": 211,
        "endChar": 27
      },
      "revId": "d478254057572315772a926acc3826a889ee7cf6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3222efbf_3437f83a",
        "filename": "services/std_svc/spm/el3_spmc/spmc_main.c",
        "patchSetId": 42
      },
      "lineNbr": 617,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2024-07-23T17:05:23Z",
      "side": 1,
      "message": "EL3 SPMC will never be built with CTX_INCLUDE_EL2_REGS\u003d1",
      "range": {
        "startLine": 617,
        "startChar": 1,
        "endLine": 617,
        "endChar": 27
      },
      "revId": "d478254057572315772a926acc3826a889ee7cf6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "52446b08_bbba6c0c",
        "filename": "services/std_svc/spm/el3_spmc/spmc_main.c",
        "patchSetId": 42
      },
      "lineNbr": 617,
      "author": {
        "id": 1000660
      },
      "writtenOn": "2024-08-01T22:28:32Z",
      "side": 1,
      "message": "Agreed. Will remove this check as CTX_INCLUDE_EL2_REGS\u003d1 will never be a valid condition for EL3_SPMC.",
      "parentUuid": "3222efbf_3437f83a",
      "range": {
        "startLine": 617,
        "startChar": 1,
        "endLine": 617,
        "endChar": 27
      },
      "revId": "d478254057572315772a926acc3826a889ee7cf6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "173f562b_93b6733c",
        "filename": "services/std_svc/spm/spm_mm/spm_mm_main.c",
        "patchSetId": 42
      },
      "lineNbr": 99,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2024-07-23T17:05:23Z",
      "side": 1,
      "message": "SPM-MM will never be built with CTX_INCLUDE_EL2_REGS\u003d1",
      "range": {
        "startLine": 99,
        "startChar": 1,
        "endLine": 99,
        "endChar": 27
      },
      "revId": "d478254057572315772a926acc3826a889ee7cf6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c002c0eb_9dd57225",
        "filename": "services/std_svc/spm/spm_mm/spm_mm_main.c",
        "patchSetId": 42
      },
      "lineNbr": 99,
      "author": {
        "id": 1000660
      },
      "writtenOn": "2024-08-01T22:28:32Z",
      "side": 1,
      "message": "Thanks for notifying it. Will modify in the next patch.",
      "parentUuid": "173f562b_93b6733c",
      "range": {
        "startLine": 99,
        "startChar": 1,
        "endLine": 99,
        "endChar": 27
      },
      "revId": "d478254057572315772a926acc3826a889ee7cf6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}