{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "079455b4_dd8517dd",
        "filename": "plat/arm/board/tc/nv_counter_test.c",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-07-03T14:51:29Z",
      "side": 1,
      "message": "JFYI there is already a generic print in the caller function (tc_run_platform_tests), which these expect scripts capture: https://git.trustedfirmware.org/ci/tf-a-ci-scripts.git/tree/expect/crash_passed_test.exp\n\nSo we don\u0027t need to rely on this one from an expect script point of view (as in, this print does not need to gate the success/failure of these tests), although we can keep it for giving useful feedback to the user.\n\nI\u0027ll leave it to you whether you want to update this message anyway but I thought I should mention it for your awareness.",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 57,
        "endChar": 51
      },
      "revId": "6a31aac00f12d841aeba0564b2573e6f74125dfb",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c58643a_095595fe",
        "filename": "plat/arm/board/tc/nv_counter_test.c",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-07-03T15:21:12Z",
      "side": 1,
      "message": "Actually I\u0027ve now realized that what I wrote above is not quite correct and things are a little more complex than that. Please refer to my other comment here for more details:\n\nhttps://review.trustedfirmware.org/c/ci/tf-a-ci-scripts/+/21774/1/expect-lava/crash_passed_test.exp",
      "parentUuid": "079455b4_dd8517dd",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 57,
        "endChar": 51
      },
      "revId": "6a31aac00f12d841aeba0564b2573e6f74125dfb",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0b40b83b_03b5d628",
        "filename": "plat/arm/board/tc/nv_counter_test.c",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1000101
      },
      "writtenOn": "2023-07-07T21:55:13Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7c58643a_095595fe",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 57,
        "endChar": 51
      },
      "revId": "6a31aac00f12d841aeba0564b2573e6f74125dfb",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "485d2547_364d762c",
        "filename": "plat/arm/board/tc/platform.mk",
        "patchSetId": 1
      },
      "lineNbr": 221,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2023-07-03T15:26:00Z",
      "side": 1,
      "message": "Feel free to ignore-\nSince many tests are coming under PLATFORM_TEST, will it make sense to create a separate makefile?  \nRather it seems more appropriate to place these NV counter and ROTPK tests files inside the plat/arm/board/tc/platform_test.mk. What do you think?",
      "range": {
        "startLine": 208,
        "startChar": 0,
        "endLine": 221,
        "endChar": 54
      },
      "revId": "6a31aac00f12d841aeba0564b2573e6f74125dfb",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18251022_bfd115bb",
        "filename": "plat/arm/board/tc/platform.mk",
        "patchSetId": 1
      },
      "lineNbr": 221,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-07-04T06:59:45Z",
      "side": 1,
      "message": "I think that\u0027s a good idea too.",
      "parentUuid": "485d2547_364d762c",
      "range": {
        "startLine": 208,
        "startChar": 0,
        "endLine": 221,
        "endChar": 54
      },
      "revId": "6a31aac00f12d841aeba0564b2573e6f74125dfb",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd72ffa3_96ff2ec0",
        "filename": "plat/arm/board/tc/platform.mk",
        "patchSetId": 1
      },
      "lineNbr": 221,
      "author": {
        "id": 1000101
      },
      "writtenOn": "2023-07-07T21:55:13Z",
      "side": 1,
      "message": "Going to make this change in another patch",
      "parentUuid": "18251022_bfd115bb",
      "range": {
        "startLine": 208,
        "startChar": 0,
        "endLine": 221,
        "endChar": 54
      },
      "revId": "6a31aac00f12d841aeba0564b2573e6f74125dfb",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "811c6491_c3bd16d9",
        "filename": "plat/arm/board/tc/rotpk_test.c",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-07-03T15:12:10Z",
      "side": 1,
      "message": "Should be \"Arm Limited\" (no \"And Contributors\").",
      "range": {
        "startLine": 2,
        "startChar": 23,
        "endLine": 2,
        "endChar": 51
      },
      "revId": "6a31aac00f12d841aeba0564b2573e6f74125dfb",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c79aeede_274113c3",
        "filename": "plat/arm/board/tc/rotpk_test.c",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 1000101
      },
      "writtenOn": "2023-07-07T21:55:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "811c6491_c3bd16d9",
      "range": {
        "startLine": 2,
        "startChar": 23,
        "endLine": 2,
        "endChar": 51
      },
      "revId": "6a31aac00f12d841aeba0564b2573e6f74125dfb",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8bd45b0_f56154e0",
        "filename": "plat/arm/board/tc/rotpk_test.c",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2023-07-03T15:26:00Z",
      "side": 1,
      "message": "return \u0027status\u0027 and similarly for all others below (to understand the exact error via error code).",
      "range": {
        "startLine": 24,
        "startChar": 9,
        "endLine": 24,
        "endChar": 11
      },
      "revId": "6a31aac00f12d841aeba0564b2573e6f74125dfb",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd76de56_ce604e6f",
        "filename": "plat/arm/board/tc/rotpk_test.c",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1000101
      },
      "writtenOn": "2023-07-07T21:55:13Z",
      "side": 1,
      "message": "For this I would need to potentially make changes on how the pass/fail is logged here: https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/20827/2, I\u0027m thinking if we agree, maybe that should be a separate patch with them unified in this way? Thoughts @Sandrine as well?",
      "parentUuid": "c8bd45b0_f56154e0",
      "range": {
        "startLine": 24,
        "startChar": 9,
        "endLine": 24,
        "endChar": 11
      },
      "revId": "6a31aac00f12d841aeba0564b2573e6f74125dfb",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69332d0a_478a10f6",
        "filename": "plat/arm/board/tc/rotpk_test.c",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-07-10T06:21:23Z",
      "side": 1,
      "message": "Manish\u0027 suggestion would make sense to me for the non-volatile counter / ROTPK tests, which are just a single test. But it does not fly for run_platform_tests(), which runs multiple tests and cannot possibly return a status code that makes sense in the event where several tests failed. Today, run_platform_tests() rather returns the number of failed tests [1], which I think is more appropriate.\n\nWhat we could do is, we could print the status code in each of the specific test function (nv_counter_test()/rotpk_test()) if we see value in this information.\n\n[1] https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/20826/2/plat/arm/board/tc/rss_ap_tests.c",
      "parentUuid": "bd76de56_ce604e6f",
      "range": {
        "startLine": 24,
        "startChar": 9,
        "endLine": 24,
        "endChar": 11
      },
      "revId": "6a31aac00f12d841aeba0564b2573e6f74125dfb",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d165370_2b81b09d",
        "filename": "plat/arm/board/tc/rotpk_test.c",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2023-07-10T08:43:48Z",
      "side": 1,
      "message": "Current test returns always \u0027-1\u0027 in case of non-volatile counter / ROTPK test failure, which does not indicate the number of tests failed. Even if we return proper status (instead of always -1), it should still work, right? It still gives the same error message [1]. i.e. Platform tests failed.\n\nPerhaps this way we can achieve 2 types of returns for \u0027tc_run_platform_tests\u0027 -\n\n1. In case of run_platform_tests() (multiple tests) it will return the number of failed tests. run_platform_tests() can be enhanced internally to print the status of individual test failures.\n2. A single test, such as non-volatile counter or ROTPK, will return an actual failure result.\n\nThoughts?\n\n[1]: https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/21773/4/plat/arm/board/tc/tc_bl31_setup.c#68",
      "parentUuid": "69332d0a_478a10f6",
      "range": {
        "startLine": 24,
        "startChar": 9,
        "endLine": 24,
        "endChar": 11
      },
      "revId": "6a31aac00f12d841aeba0564b2573e6f74125dfb",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a0f001a_56ea49e6",
        "filename": "plat/arm/board/tc/rotpk_test.c",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-07-10T15:24:51Z",
      "side": 1,
      "message": "\u003e Current test returns always \u0027-1\u0027 in case of non-volatile counter / ROTPK test failure, which does not indicate the number of tests failed.\n\nIndeed. The number of failed tests is only for TF-M tests.\n\n\u003e Even if we return proper status (instead of always -1), it should still work, right? It still gives the same error message [1]. i.e. Platform tests failed.\n\nYes, the caller is only checking for 0 or not 0. So returning a status code (different from 0) would not break anything. But we won\u0027t gain much from returning a status code if the caller does not do anything useful with it...\n\n\u003e Perhaps this way we can achieve 2 types of returns for \u0027tc_run_platform_tests\u0027 -\n\u003e \n\u003e 1. In case of run_platform_tests() (multiple tests) it will return the number of failed tests. run_platform_tests() can be enhanced internally to print the status of individual test failures.\n\nI seem to recall that we already get detailed results of each test\u0027s result (pass/fail) on the console. I guess that must be printed by the individual tests then, I would need to check further. We could indeed move that logic to run_platform_tests() to centralize it, but only if we don\u0027t lose useful information printed from within the test function right now.\n\nIn summary: yes in principle, but first let\u0027s double check a few things as mentioned above.\n\n\u003e 2. A single test, such as non-volatile counter or ROTPK, will return an actual failure result.\n\nOK but again the caller has to make use of it then. Otherwise I see no gain.",
      "parentUuid": "4d165370_2b81b09d",
      "range": {
        "startLine": 24,
        "startChar": 9,
        "endLine": 24,
        "endChar": 11
      },
      "revId": "6a31aac00f12d841aeba0564b2573e6f74125dfb",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "53883d5d_0c3bae1c",
        "filename": "plat/arm/board/tc/rotpk_test.c",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2023-07-11T13:16:17Z",
      "side": 1,
      "message": "I think it\u0027s better to print the status of each test within the function. I need to check if it is already done for all individual tests or not. If not, we require printing the status, which would be helpful for debugging.\nAgree that we should run all tests under run_platform_tests() and let it return the number of failed tests only.\nAll this can be done in the subsequent patch.",
      "parentUuid": "3a0f001a_56ea49e6",
      "range": {
        "startLine": 24,
        "startChar": 9,
        "endLine": 24,
        "endChar": 11
      },
      "revId": "6a31aac00f12d841aeba0564b2573e6f74125dfb",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f989c16_3350f855",
        "filename": "plat/arm/board/tc/rotpk_test.c",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-07-03T15:12:10Z",
      "side": 1,
      "message": "\"export\" sounds misleading to me. How about \"Failed to retrieve Secure ROTPK\"?",
      "range": {
        "startLine": 30,
        "startChar": 20,
        "endLine": 30,
        "endChar": 26
      },
      "revId": "6a31aac00f12d841aeba0564b2573e6f74125dfb",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "78e9c1ee_66ac80ac",
        "filename": "plat/arm/board/tc/rotpk_test.c",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1000101
      },
      "writtenOn": "2023-07-07T21:55:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8f989c16_3350f855",
      "range": {
        "startLine": 30,
        "startChar": 20,
        "endLine": 30,
        "endChar": 26
      },
      "revId": "6a31aac00f12d841aeba0564b2573e6f74125dfb",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "539a7814_bb3011a0",
        "filename": "plat/arm/board/tc/rotpk_test.c",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2023-07-03T15:26:00Z",
      "side": 1,
      "message": "nit: better use small \u0027i\u0027 as same is followed in other TF-A code.",
      "range": {
        "startLine": 35,
        "startChar": 10,
        "endLine": 35,
        "endChar": 12
      },
      "revId": "6a31aac00f12d841aeba0564b2573e6f74125dfb",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2ff85013_912bde8f",
        "filename": "plat/arm/board/tc/rotpk_test.c",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1000101
      },
      "writtenOn": "2023-07-07T21:55:13Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "539a7814_bb3011a0",
      "range": {
        "startLine": 35,
        "startChar": 10,
        "endLine": 35,
        "endChar": 12
      },
      "revId": "6a31aac00f12d841aeba0564b2573e6f74125dfb",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8b3b56d_10593b4f",
        "filename": "plat/arm/board/tc/rotpk_test.c",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-07-03T15:12:10Z",
      "side": 1,
      "message": "Perhaps we should move this code to a helper function, something like print_hex(), and reuse it across all 3 ROTPKs?\n\nAlso, I would get rid of the \u0027\\r\u0027 line ending, this is very unusual in TF-A code. And let\u0027s also downcase the loop variable name (I -\u003e i), this would be more customary for TF-A as well.",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 38,
        "endChar": 18
      },
      "revId": "6a31aac00f12d841aeba0564b2573e6f74125dfb",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "01854bf4_e1c85889",
        "filename": "plat/arm/board/tc/rotpk_test.c",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1000101
      },
      "writtenOn": "2023-07-07T21:55:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a8b3b56d_10593b4f",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 38,
        "endChar": 18
      },
      "revId": "6a31aac00f12d841aeba0564b2573e6f74125dfb",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "386be5e0_d1c5b048",
        "filename": "plat/arm/board/tc/rotpk_test.c",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2023-07-03T15:26:00Z",
      "side": 1,
      "message": "nit: these looks like repeated things and can be handled via \u0027for\u0027 loop instead?",
      "range": {
        "startLine": 27,
        "startChar": 1,
        "endLine": 64,
        "endChar": 18
      },
      "revId": "6a31aac00f12d841aeba0564b2573e6f74125dfb",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eeb0ed9f_a3f316af",
        "filename": "plat/arm/board/tc/rotpk_test.c",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-07-04T06:59:45Z",
      "side": 1,
      "message": "If we want to handle this via a \u0027for\u0027 loop then either we need to make an assumption that key ids are consecutive numbers (and that\u0027s a bad practice when we use macros) or build a local array of key ids and iterate over this one in this fashion:\n\n enum rss_key_id_builtin_t key_ids[] \u003d {\n   RSS_BUILTIN_KEY_ID_HOST_S_ROTPK\n   RSS_BUILTIN_KEY_ID_HOST_NS_ROTPK,\n   RSS_BUILTIN_KEY_ID_HOST_CCA_ROTPK,\n }\n\n for (int i \u003d 0; i \u003c ARRAY_SIZE(key_ids); i++) {\n   // rss_platform_key_read(key_ids[i])\n }\n\nAnd then you still have to handle the different key names for printf() calls. These can be added to the local array too but overall I think this adds unnecessary complexity....",
      "parentUuid": "386be5e0_d1c5b048",
      "range": {
        "startLine": 27,
        "startChar": 1,
        "endLine": 64,
        "endChar": 18
      },
      "revId": "6a31aac00f12d841aeba0564b2573e6f74125dfb",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45c505f0_b4405dc8",
        "filename": "plat/arm/board/tc/rotpk_test.c",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2023-07-04T08:22:48Z",
      "side": 1,
      "message": "Is it possible to print the \u0027Key-IDs\u0027 instead? If these prints are really needed, then array of structs can still make it possible, right? I don\u0027t see any complexity here IMHO, this looks easier to read (also, futuristic additions are easily possible without replicating the code, this may not be true for the current implementation).\n\n struct key_id_info key_ids[] \u003d { \n    {.key_id \u003d RSS_BUILTIN_KEY_ID_HOST_S_ROTPK,  .key_id_name \u003d \"Secure-ROTPK\"},\n    {.key_id \u003d RSS_BUILTIN_KEY_ID_HOST_NS_ROTPK,  .key_id_name \u003d \"NS-ROTPK\"},\n    {.key_id \u003d RSS_BUILTIN_KEY_ID_HOST_CCA_ROTPK,  .key_id_name \u003d \"CCA-ROTPK\"}\n }\n\nIt is the developer\u0027s choice 😊.  I am not strongly against the existing approach",
      "parentUuid": "eeb0ed9f_a3f316af",
      "range": {
        "startLine": 27,
        "startChar": 1,
        "endLine": 64,
        "endChar": 18
      },
      "revId": "6a31aac00f12d841aeba0564b2573e6f74125dfb",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e069405f_889349d6",
        "filename": "plat/arm/board/tc/rotpk_test.c",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1000101
      },
      "writtenOn": "2023-07-07T21:55:13Z",
      "side": 1,
      "message": "Great suggestion! I\u0027ve made some changes, let me know if what I\u0027ve done makes sense",
      "parentUuid": "45c505f0_b4405dc8",
      "range": {
        "startLine": 27,
        "startChar": 1,
        "endLine": 64,
        "endChar": 18
      },
      "revId": "6a31aac00f12d841aeba0564b2573e6f74125dfb",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15f8b92c_f953529c",
        "filename": "plat/arm/board/tc/rotpk_test.c",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-07-10T06:30:25Z",
      "side": 1,
      "message": "LGTM!",
      "parentUuid": "e069405f_889349d6",
      "range": {
        "startLine": 27,
        "startChar": 1,
        "endLine": 64,
        "endChar": 18
      },
      "revId": "6a31aac00f12d841aeba0564b2573e6f74125dfb",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}