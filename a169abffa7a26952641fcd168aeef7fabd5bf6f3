{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "370847fd_6f28164b",
        "filename": "services/std_svc/errata_abi/cpu_errata_info.h",
        "patchSetId": 19
      },
      "lineNbr": 43,
      "author": {
        "id": 1000923
      },
      "writtenOn": "2023-04-26T17:13:19Z",
      "side": 1,
      "message": "may be we could have list_max entry macro with\n\nMAX_ERRATA_ENTRIES - 1\n\nwhich would be used in array index end.\n\n#define ERRATA_LIST_ENTRY_END (MAX_ERRATA_ENTRIES - 1)",
      "range": {
        "startLine": 43,
        "startChar": 8,
        "endLine": 43,
        "endChar": 26
      },
      "revId": "a169abffa7a26952641fcd168aeef7fabd5bf6f3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "052c6793_089998b5",
        "filename": "services/std_svc/errata_abi/cpu_errata_info.h",
        "patchSetId": 19
      },
      "lineNbr": 43,
      "author": {
        "id": 1000923
      },
      "writtenOn": "2023-04-27T21:06:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "370847fd_6f28164b",
      "range": {
        "startLine": 43,
        "startChar": 8,
        "endLine": 43,
        "endChar": 26
      },
      "revId": "a169abffa7a26952641fcd168aeef7fabd5bf6f3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1dc3e192_3386a9a8",
        "filename": "services/std_svc/errata_abi/errata_abi_main.c",
        "patchSetId": 19
      },
      "lineNbr": 33,
      "author": {
        "id": 1000923
      },
      "writtenOn": "2023-04-26T17:05:39Z",
      "side": 1,
      "message": "We could use below example, \n\n[...]\n .cpu_errata_list \u003d {\n                [0 ... MAX_ERRATA_ENTRIES] \u003d {UNDEF_ERRATA},\n\t\t[0] \u003d {794073, 0x00, 0xFF, ERRATA_A9_794073},\n\t\t[1] \u003d {123456, 0x00, 0xFF, ERRATA_A9_123456},\n\t}\n[...]\n\nThis makes struct future proof for adding things and avoid editing entire file if \nMAX_ERRATA_ENTRIES changes.",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 33,
        "endChar": 32
      },
      "revId": "a169abffa7a26952641fcd168aeef7fabd5bf6f3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a00e098_20a47ad6",
        "filename": "services/std_svc/errata_abi/errata_abi_main.c",
        "patchSetId": 19
      },
      "lineNbr": 33,
      "author": {
        "id": 1000923
      },
      "writtenOn": "2023-04-26T17:13:19Z",
      "side": 1,
      "message": "Just note it should be MAX_ERRATA_ENTRIES -1 or we could use the macro to have n-1 entries which could be used.",
      "parentUuid": "1dc3e192_3386a9a8",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 33,
        "endChar": 32
      },
      "revId": "a169abffa7a26952641fcd168aeef7fabd5bf6f3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f01eaf77_29bfc68f",
        "filename": "services/std_svc/errata_abi/errata_abi_main.c",
        "patchSetId": 19
      },
      "lineNbr": 33,
      "author": {
        "id": 1000923
      },
      "writtenOn": "2023-04-27T21:06:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8a00e098_20a47ad6",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 33,
        "endChar": 32
      },
      "revId": "a169abffa7a26952641fcd168aeef7fabd5bf6f3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}