{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5ab57a66_0e4fece7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000126
      },
      "writtenOn": "2022-04-09T03:52:21Z",
      "side": 1,
      "message": "\u003e http://ci.trustedfirmware.org/job/tf-a-gerrit-tforg-l1/778/ : FAILURE\n\nThe build failed because we ran out of SRAM space. I didn\u0027t see this locally with GCC 11, but I can reproduce it with GCC 10.\n\nIt looks like we can save over a page of SRAM in .text by enabling LTO:\n\n - *fill*         0x000000000004d4f4      0x30c\n - .vectors       0x000000000004d800      0x800\n + *fill*         0x000000000004c3e0      0x420\n + .vectors       0x000000000004c800      0x800\n\nIs it okay if we always enable LTO for Allwinner platforms? This seems to be the best way to recover space without runtime impact (i.e. unlike disabling SEPARATE_CODE_AND_RODATA).",
      "revId": "89aa306bac70f513047a949d8e6a3d50550e08c9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55a0e97a_97329509",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2022-04-25T16:51:35Z",
      "side": 1,
      "message": "\u003e The build failed because we ran out of SRAM space.\n\nAre you sure? The log is gone by now, but the tests just run DEBUG\u003d1 on all supported SoCs, plus trying SUNXI_PSCI_USE_NATIVE\u003d0 and SUNXI_PSCI_USE_SCPI\u003d0 on A64 and H6. I don\u0027t think we exceed the SRAM in those configurations on any SoC? I certainly don\u0027t see issues with Ubuntu\u0027s GCC 9.2. \"make PLAT\u003dsun50i_a64 DEBUG\u003d1 SUNXI_AMEND_DTB\u003d1\" would probably break the bank, but the CI scripts doesn\u0027t test this (yet).\n\nHowever I see issues with SUNXI_PSCI_USE_SCPI\u003d0:\nld.bfd: build/sun50i_a64/debug/bl31/sunxi_pm.o: in function `plat_setup_psci_ops\u0027:\nplat/allwinner/common/sunxi_pm.c:51: undefined reference to \u0027sunxi_set_scpi_psci_ops\u0027\n\nThat looks like a legit corner case not covered by the current code?",
      "parentUuid": "5ab57a66_0e4fece7",
      "revId": "89aa306bac70f513047a949d8e6a3d50550e08c9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c764d286_8941bff4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2022-04-26T11:16:16Z",
      "side": 1,
      "message": "\u003e Patch Set 3: Verified-1\n\u003e \n\u003e Build Failed \n\u003e \n\u003e https://jenkins.oss.arm.com/job/tf-gerrit-tforg-l1/4842/ : This Jenkins server is not publicly accessible. A core maintainer will let you know if this CI failure is blocking the merge of this patch.\n\n- static checks marks the new files as potentially needing build testing coverage. I added a \"DEBUG\u003d0 SUNXI_AMEND_DTB\u003d1 PLAT\u003dsun50i_a64\" line to tf-a-ci-scripts.git, but waiting for this series to reach the repo before pushing that to the CI repo.\n- The usual unrelated build failures due to whatever:\n18:04:13 CRITICAL:root:Job script returned error code 1\n- The \"make  CROSS_COMPILE\u003daarch64-none-elf- PLAT\u003dsun50i_a64  DEBUG\u003d1 V\u003d1 fiptool all\" build fails:\naarch64-none-elf-ld.bfd: region `RAM\u0027 overflowed by 224 bytes\nThis is somewhat surprising, since it succeeds on my not-really-new GCC 9.4 Ubuntu toolchain.\n\nSo either we specify ENABLE_LTO\u003d1 or we drop the DEBUG builds for A64. I couldn\u0027t find which GCC version the CI is using, so cannot easily verify what would be best.\n",
      "revId": "89aa306bac70f513047a949d8e6a3d50550e08c9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "003ea908_2d23ddb1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000049
      },
      "writtenOn": "2022-04-26T13:48:57Z",
      "side": 1,
      "message": "Trying OpenCI L1 CI. But need to rebase because of recent MbedTLS library change. ",
      "revId": "89aa306bac70f513047a949d8e6a3d50550e08c9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}