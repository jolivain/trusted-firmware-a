{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "281139c5_f234a6a4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000290
      },
      "writtenOn": "2024-02-22T20:32:13Z",
      "side": 1,
      "message": "Thanks for sharing these patches. Just a few drive-by comments to start with to understand the code better.\n\nAlso you might already be aware but just as an FYI for the final version of the patches there are a set of style guidelines for contributing to the TF-A codebase that may be of help.\n\nhttps://trustedfirmware-a.readthedocs.io/en/latest/process/coding-style.html",
      "revId": "0dc32bd705f3501576c672a5215f5b68ae067711",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3e3a4c2_83a671bc",
        "filename": "services/std_svc/spm/el3_spmc/spmc_notifications.c",
        "patchSetId": 1
      },
      "lineNbr": 202,
      "author": {
        "id": 1000290
      },
      "writtenOn": "2024-02-22T20:32:13Z",
      "side": 1,
      "message": "Should probably add a check to ensure that the request is coming from the normal world otherwise it we could return NOT_SUPPORTED.",
      "revId": "0dc32bd705f3501576c672a5215f5b68ae067711",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "818e3f46_d830c054",
        "filename": "services/std_svc/spm/el3_spmc/spmc_notifications.c",
        "patchSetId": 1
      },
      "lineNbr": 312,
      "author": {
        "id": 1000290
      },
      "writtenOn": "2024-02-22T20:32:13Z",
      "side": 1,
      "message": "Just to confirm as part of our last discussion, the preference is to not support per vcpu notifications at all in your first iteration?",
      "revId": "0dc32bd705f3501576c672a5215f5b68ae067711",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "44dc4e49_d2d1878e",
        "filename": "services/std_svc/spm/el3_spmc/spmc_notifications.h",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1000290
      },
      "writtenOn": "2024-02-22T20:32:13Z",
      "side": 1,
      "message": "Rather than storing the notification information and receiver ID separately, would it be worth linking this with the existing `struct ns_endpoint_desc` to avoid duplication?",
      "revId": "0dc32bd705f3501576c672a5215f5b68ae067711",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3d7c224_ef204504",
        "filename": "services/std_svc/spm/el3_spmc/spmc_notifications.h",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1000290
      },
      "writtenOn": "2024-02-22T20:32:13Z",
      "side": 1,
      "message": "Naive question, but if we have the bound notification information why do we need to duplication (e.g. sender ID) to track when a bound notification is pending?",
      "revId": "0dc32bd705f3501576c672a5215f5b68ae067711",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}