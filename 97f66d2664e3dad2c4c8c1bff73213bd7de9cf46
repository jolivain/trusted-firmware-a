{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8898cbbf_1460b287",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2021-06-09T13:56:25Z",
      "side": 1,
      "message": "Please refer to this email and fix the commit message.\nhttps://lists.trustedfirmware.org/pipermail/tf-a/2021-May/001178.html",
      "revId": "97f66d2664e3dad2c4c8c1bff73213bd7de9cf46",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "98ed92db_02bac8f8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000493
      },
      "writtenOn": "2021-06-10T03:57:20Z",
      "side": 1,
      "message": "Done, thanks.",
      "parentUuid": "8898cbbf_1460b287",
      "revId": "97f66d2664e3dad2c4c8c1bff73213bd7de9cf46",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b9bce6f_7bf683a3",
        "filename": "plat/nxp/common/plat_make_helper/soc_common_def.mk",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2021-06-09T14:46:40Z",
      "side": 1,
      "message": "Just curious:\nWhat does this build flag represent? Shouldn\u0027t we explicitly check if endianness is either big or little? Would it be better to have a default value?",
      "range": {
        "startLine": 68,
        "startChar": 9,
        "endLine": 68,
        "endChar": 27
      },
      "revId": "97f66d2664e3dad2c4c8c1bff73213bd7de9cf46",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c279840a_712bd491",
        "filename": "plat/nxp/common/plat_make_helper/soc_common_def.mk",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 1000493
      },
      "writtenOn": "2021-06-10T03:57:20Z",
      "side": 1,
      "message": "Hi, Madhukar,\nThanks for your comments.\nWe use \"NXP_SFP_ENDIANNESS\" to define endianness of the \"SFP\" in makefile:\nNXP_SFP_ENDIANNESS \u003d LE or NXP_SFP_ENDIANNESS \u003d BE\n\nthe definition is mandatory, because we will check in headerfile\ndrivers/nxp/sfp/sfp.h:\n 90 #ifdef NXP_SFP_BE\n 91 #define sfp_read32(a)           bswap32(mmio_read_32((uintptr_t)(a)))\n 92 #define sfp_write32(a, v)       mmio_write_32((uintptr_t)(a), bswap32(v))\n 93 #elif defined(NXP_SFP_LE)\n 94 #define sfp_read32(a)           mmio_read_32((uintptr_t)(a))\n 95 #define sfp_write32(a, v)       mmio_write_32((uintptr_t)(a), (v))\n 96 #else\n 97 #error Please define CCSR SFP register endianness\n 98 #endif\n\nSo no need to explicit check here and no need to have a default value.\n\nJiafei.",
      "parentUuid": "6b9bce6f_7bf683a3",
      "range": {
        "startLine": 68,
        "startChar": 9,
        "endLine": 68,
        "endChar": 27
      },
      "revId": "97f66d2664e3dad2c4c8c1bff73213bd7de9cf46",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}