{
  "comments": [
    {
      "key": {
        "uuid": "581a35d7_4d716384",
        "filename": "bl1/bl1.mk",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2019-04-19T08:12:49Z",
      "side": 1,
      "message": "It seems to me that this change is not required. IIUC, BL1 does not call pauth_load_bl_apiakey(). Instead, it uses bl_handle_pauth() to generate and load the keys.",
      "revId": "41745f297bffa3acc032a8b4c61b20f01bdf84d7",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35410574_297877cd",
        "filename": "bl1/bl1.mk",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2019-04-23T10:17:36Z",
      "side": 1,
      "message": "Yes, you are right, thanks for finding this.\npauth_load_bl_apiakey() was moved from context.S to a new file pauth_helpers.S, but is not called by BL1.\nIn context.S there are also fpregs_context_save() \u0026 fpregs_context_restore() which aren\u0027t called by BL1 and can be moved to other file.",
      "parentUuid": "581a35d7_4d716384",
      "revId": "41745f297bffa3acc032a8b4c61b20f01bdf84d7",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d84abf0d_0424c7d9",
        "filename": "lib/aarch64/pauth_helpers.S",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2019-04-19T08:12:49Z",
      "side": 1,
      "message": "I still question whether this is the right place for this ISB. I am copying for reference what I had said in a previous version of the code review.\n\n----------\n\n1) Either we include the missing barrier inside the pauth_load_bl_apiakey() function, like you\u0027ve done.\n\nThe advantage is that the caller need not remembering to put an ISB after the call to the function. That can save us some bugs, as we can see today.\n\nThe disadvantage is that it penalizes some code paths, like bl31_warm_entrypoint(), where I believe we do not need 2 ISBs and could have a single one after the keys have been programmed *and* PtrAuth has been enabled.\n\n2) Or we make the caller responsible for synchronizing the context on return from pauth_load_bl_apiakey() when appropriate.\n\nAn ISB is an expensive operation so it\u0027s worth trying to limit their numbers, especially on hot code paths. I think the warm boot path is one of them, as a CPU might be turned on and off quite frequently and the wake up path latency matters for some use cases.",
      "range": {
        "startLine": 26,
        "startChar": 1,
        "endLine": 26,
        "endChar": 4
      },
      "revId": "41745f297bffa3acc032a8b4c61b20f01bdf84d7",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "452f7312_e0134c27",
        "filename": "lib/aarch64/pauth_helpers.S",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2019-04-23T10:57:28Z",
      "side": 1,
      "message": "There are 4 cases of calls to pauth_load_bl_apiakey() which require ISB and 2 cases when pauth_load_bl_apiakey() call is followed by enabling PAuth with its own ISB instruction, What\u0027s about combining this call with a subsequent setting of SCTLR_EnIA_BIT bit in corresponing SCTLR_ELx in one finction?",
      "parentUuid": "d84abf0d_0424c7d9",
      "range": {
        "startLine": 26,
        "startChar": 1,
        "endLine": 26,
        "endChar": 4
      },
      "revId": "41745f297bffa3acc032a8b4c61b20f01bdf84d7",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc70f2db_e5d62ab2",
        "filename": "lib/aarch64/pauth_helpers.S",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2019-04-23T11:52:44Z",
      "side": 1,
      "message": "IIUC, you\u0027re proposing that we provide 2 functions:\n* One function that would simply load the A key then issue an ISB.\n* Another function that would load the A key, enable PAuth then issue an ISB.\n\nThen the caller of either API does not have to worry about the ISB. Is that what you have in mind?\n\nI guess in this case it would be fine to return from a function that enables PAuth, as the problem usually lies in the AUTIASP/RETAA instructions emitted by the compiler in the function epilogue, but here we implement things in assembly language so we don\u0027t have this problem, correct?\n\nI think it might be a good idea. I\u0027m just worried that right now, I lack visibility on how platform ports will use PAuth in the future. If we combine functions then we leave them less freedom than if we provide short functions that do just 1 thing. The latter approach being lower-level, it is more flexible.",
      "parentUuid": "452f7312_e0134c27",
      "range": {
        "startLine": 26,
        "startChar": 1,
        "endLine": 26,
        "endChar": 4
      },
      "revId": "41745f297bffa3acc032a8b4c61b20f01bdf84d7",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4bed83f_ba45e3f6",
        "filename": "lib/aarch64/pauth_helpers.S",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2019-04-23T12:04:06Z",
      "side": 1,
      "message": "- Yes. 2 functions will be implemented:\npauth_load_bl_apiakey() - as the current implementation\npauth_load_bl_apiakey_enable() - loads key A, enables PAuth with ISB before RET.\n- Yes. Compiler generates AUTIASP/RETAA pairs only for C code, so there is no problem here.\n- There\u0027s no function which just enables PAuth anyway, so the proposed solution is more flexible than the current one. If anyone asks for implementing such function which will have just 5 instructions we could have a further discussion.",
      "parentUuid": "fc70f2db_e5d62ab2",
      "range": {
        "startLine": 26,
        "startChar": 1,
        "endLine": 26,
        "endChar": 4
      },
      "revId": "41745f297bffa3acc032a8b4c61b20f01bdf84d7",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b9d9846_cc18f5a9",
        "filename": "lib/aarch64/pauth_helpers.S",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2019-04-23T12:15:12Z",
      "side": 1,
      "message": "OK, your proposal sounds fine to me.",
      "parentUuid": "b4bed83f_ba45e3f6",
      "range": {
        "startLine": 26,
        "startChar": 1,
        "endLine": 26,
        "endChar": 4
      },
      "revId": "41745f297bffa3acc032a8b4c61b20f01bdf84d7",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    }
  ]
}