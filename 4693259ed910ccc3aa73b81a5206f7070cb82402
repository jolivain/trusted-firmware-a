{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d86c9245_db35713d",
        "filename": "include/lib/extensions/sme.h",
        "patchSetId": 35
      },
      "lineNbr": 25,
      "author": {
        "id": 1000660
      },
      "writtenOn": "2023-06-27T10:25:20Z",
      "side": 1,
      "message": "So the pattern is:\nIf the feature has anything related to context  we have :feature_enable(cpu_context_t *context);\nrelated to el3 enablement alone we have : feature_enable_el3(void);\nrelated to el2 enablement  we have : feature_init_el2_unused(void);",
      "revId": "4693259ed910ccc3aa73b81a5206f7070cb82402",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "46af7ef2_2bebda68",
        "filename": "include/lib/extensions/sme.h",
        "patchSetId": 35
      },
      "lineNbr": 25,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2023-06-27T10:35:11Z",
      "side": 1,
      "message": "nit : *enable_el3 may wrongly imply that the feature enablment is for EL3. Is it too verbose if we do something like \"feature_enable_from_el3()\"",
      "parentUuid": "d86c9245_db35713d",
      "revId": "4693259ed910ccc3aa73b81a5206f7070cb82402",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c6cec57_62aa4f7c",
        "filename": "include/lib/extensions/sys_reg_trace.h",
        "patchSetId": 35
      },
      "lineNbr": 23,
      "author": {
        "id": 1000660
      },
      "writtenOn": "2023-06-27T10:25:20Z",
      "side": 1,
      "message": "static inline ? \nLine 26 and 33 as well.",
      "revId": "4693259ed910ccc3aa73b81a5206f7070cb82402",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}