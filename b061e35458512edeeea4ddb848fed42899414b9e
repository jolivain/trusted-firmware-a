{
  "comments": [
    {
      "key": {
        "uuid": "e7ff5592_fac5f7de",
        "filename": "bl2/bl2_main.c",
        "patchSetId": 4
      },
      "lineNbr": 109,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-03-31T18:53:11Z",
      "side": 1,
      "message": "typo?",
      "range": {
        "startLine": 109,
        "startChar": 4,
        "endLine": 109,
        "endChar": 12
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cfe1633b_e1eeeb51",
        "filename": "bl2/bl2_main.c",
        "patchSetId": 4
      },
      "lineNbr": 109,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2020-03-31T20:50:46Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e7ff5592_fac5f7de",
      "range": {
        "startLine": 109,
        "startChar": 4,
        "endLine": 109,
        "endChar": 12
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "717aea6b_4423f051",
        "filename": "drivers/measured_boot/event_log.c",
        "patchSetId": 4
      },
      "lineNbr": 56,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2020-03-31T18:05:03Z",
      "side": 1,
      "message": "The last member of id_event_struct_header_t is an array of id_event_algorithm_size_t, so its size needs to be added here as well:\n\n.event_size \u003d sizeof(id_event_struct_t) + sizeof(id_event_algorithm_size_t) * HASH_ALG_COUNT",
      "range": {
        "startLine": 56,
        "startChar": 2,
        "endLine": 56,
        "endChar": 41
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f608655_bf29d866",
        "filename": "drivers/measured_boot/event_log.c",
        "patchSetId": 4
      },
      "lineNbr": 56,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2020-03-31T20:50:46Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "717aea6b_4423f051",
      "range": {
        "startLine": 56,
        "startChar": 2,
        "endLine": 56,
        "endChar": 41
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "91e86725_ceef3636",
        "filename": "drivers/measured_boot/event_log.c",
        "patchSetId": 4
      },
      "lineNbr": 65,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-03-31T18:53:11Z",
      "side": 1,
      "message": "Can you please double confirm that this is not a typo?",
      "range": {
        "startLine": 65,
        "startChar": 3,
        "endLine": 65,
        "endChar": 8
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "739fd246_bf7d70e9",
        "filename": "drivers/measured_boot/event_log.c",
        "patchSetId": 4
      },
      "lineNbr": 65,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2020-03-31T20:50:46Z",
      "side": 1,
      "message": "This field is named \"TCG_EfiSpecIdEvent.uintnSize\" in TCG PC Client Platform Firmware Profile\nSpecification",
      "parentUuid": "91e86725_ceef3636",
      "range": {
        "startLine": 65,
        "startChar": 3,
        "endLine": 65,
        "endChar": 8
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63661e89_97d7bef5",
        "filename": "drivers/measured_boot/event_log.c",
        "patchSetId": 4
      },
      "lineNbr": 65,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-04-01T23:19:27Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "739fd246_bf7d70e9",
      "range": {
        "startLine": 65,
        "startChar": 3,
        "endLine": 65,
        "endChar": 8
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "567b9ea2_e788cd9a",
        "filename": "drivers/measured_boot/event_log.c",
        "patchSetId": 4
      },
      "lineNbr": 97,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-03-31T18:53:11Z",
      "side": 1,
      "message": "Is there a CASSERT in place to make sure that this macro captures the actual sizeof(event2_header_t)?",
      "range": {
        "startLine": 97,
        "startChar": 22,
        "endLine": 97,
        "endChar": 37
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "838439c5_ccbe6216",
        "filename": "drivers/measured_boot/event_log.c",
        "patchSetId": 4
      },
      "lineNbr": 97,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2020-03-31T20:50:46Z",
      "side": 1,
      "message": "EVENT2_HDR_SIZE is defined as:\n#define EVENT2_HDR_SIZE\tsizeof(event2_header_t) + \\\n\t\t\tsizeof(tpmt_ha) + TCG_DIGEST_SIZE + \\\n\t\t\tsizeof(event2_data_t)\n\nPlease explain what you mean by \"captures the actual sizeof(event2_header_t)\".",
      "parentUuid": "567b9ea2_e788cd9a",
      "range": {
        "startLine": 97,
        "startChar": 22,
        "endLine": 97,
        "endChar": 37
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "25835074_a428e24e",
        "filename": "drivers/measured_boot/event_log.c",
        "patchSetId": 4
      },
      "lineNbr": 97,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-04-01T23:19:27Z",
      "side": 1,
      "message": "I wanted to make sure that in the future if we add more data to the to log, EVENT2_HDR_SIZE would still be able to reflect the size of the new data. This would be clear if we have a CASSERT. Makes it future proof and avoid nasty bugs.",
      "parentUuid": "838439c5_ccbe6216",
      "range": {
        "startLine": 97,
        "startChar": 22,
        "endLine": 97,
        "endChar": 37
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ebc348de_45bc1adf",
        "filename": "drivers/measured_boot/event_log.c",
        "patchSetId": 4
      },
      "lineNbr": 134,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-03-31T18:53:11Z",
      "side": 1,
      "message": "should this be plat_bl2_get_hash(), to allow non-arm platforms to participate?\n\nPlus, it is dangerous to pass \u0027ptr\u0027 directly to another function this way. For all we know, ptr might move past the end of the array.\n\nWe should validate \u0027ptr\u0027 to still be the same value once we return.",
      "range": {
        "startLine": 134,
        "startChar": 2,
        "endLine": 134,
        "endChar": 18
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34fb1608_cca33a9d",
        "filename": "drivers/measured_boot/event_log.c",
        "patchSetId": 4
      },
      "lineNbr": 134,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2020-03-31T20:50:46Z",
      "side": 1,
      "message": "All Dyn Cfg code and this function is currently in \\plat\\arm\\common\\arm_dyn_cfg.c \u0026 arm_dyn_cfg_helpers.c. I can rename it \u0026 add a new function in a platform layer.\n\u0027ptr\u0027 is the pointer and is passed by value. Please explain what you mean.",
      "parentUuid": "ebc348de_45bc1adf",
      "range": {
        "startLine": 134,
        "startChar": 2,
        "endLine": 134,
        "endChar": 18
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "436b41a9_2f159b43",
        "filename": "drivers/measured_boot/event_log.c",
        "patchSetId": 4
      },
      "lineNbr": 134,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-04-01T23:19:27Z",
      "side": 1,
      "message": "I think renaming this function to plat_bl2* would be helpful to other platforms to implement. You can disregard my previous comment about \u0027ptr\u0027.",
      "parentUuid": "34fb1608_cca33a9d",
      "range": {
        "startLine": 134,
        "startChar": 2,
        "endLine": 134,
        "endChar": 18
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a3cb77c_d39f6b30",
        "filename": "drivers/measured_boot/event_log.c",
        "patchSetId": 4
      },
      "lineNbr": 145,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-03-31T18:53:11Z",
      "side": 1,
      "message": "this was never checked to be non-NULL, before use",
      "range": {
        "startLine": 145,
        "startChar": 46,
        "endLine": 145,
        "endChar": 50
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c9c835d_7e8a66e2",
        "filename": "drivers/measured_boot/event_log.c",
        "patchSetId": 4
      },
      "lineNbr": 145,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2020-03-31T20:50:46Z",
      "side": 1,
      "message": "add_even2() function gets \u0027name\u0027 parameter as BL2_STRING or from record_measurement() which passes it from the array below:\nstatic const image_data_t images_data[] \u003d {\n\t{ BL31_IMAGE_ID, BL31_STRING },\n\t{ BL32_IMAGE_ID, BL32_STRING },\n\t{ BL32_EXTRA1_IMAGE_ID, BL32_EXTRA1_IMAGE_STRING },\n\t{ BL32_EXTRA2_IMAGE_ID, BL32_EXTRA2_IMAGE_STRING },\n\t{ BL33_IMAGE_ID, BL33_STRING },\n\t{ HW_CONFIG_ID, HW_CONFIG_STRING },\n\t{ NT_FW_CONFIG_ID, NT_FW_CONFIG_STRING },\n\t{ SCP_BL2_IMAGE_ID, SCP_BL2_IMAGE_STRING },\n\t{ SOC_FW_CONFIG_ID, SOC_FW_CONFIG_STRING },\n\t{ TOS_FW_CONFIG_ID, TOS_FW_CONFIG_STRING }\nif the imageId is found, so \u0027name\u0027 can never be NULL.",
      "parentUuid": "0a3cb77c_d39f6b30",
      "range": {
        "startLine": 145,
        "startChar": 46,
        "endLine": 145,
        "endChar": 50
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f46757a_6c6cfa06",
        "filename": "drivers/measured_boot/event_log.c",
        "patchSetId": 4
      },
      "lineNbr": 145,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-04-01T23:19:27Z",
      "side": 1,
      "message": "Adding a sanity check to pointer before use would make it future proof IMO",
      "parentUuid": "3c9c835d_7e8a66e2",
      "range": {
        "startLine": 145,
        "startChar": 46,
        "endLine": 145,
        "endChar": 50
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48f13193_9877b9de",
        "filename": "drivers/measured_boot/event_log.c",
        "patchSetId": 4
      },
      "lineNbr": 160,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-03-31T18:53:11Z",
      "side": 1,
      "message": "We should sanity check the amount of memory we plan to copy. The same it is done in add_event2()",
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ff5d90b_5137f745",
        "filename": "drivers/measured_boot/event_log.c",
        "patchSetId": 4
      },
      "lineNbr": 160,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2020-04-01T13:30:22Z",
      "side": 1,
      "message": "Line #161 checks for a minimum size of Event Log during initialisation. \nLOG_MIN_SIZE is 132 bytes, length data copied by memcpy():\nid_event_headers 60\nlocality_event_header 12\nTCG_STARTUP_LOCALITY_SIGNATURE 16",
      "parentUuid": "48f13193_9877b9de",
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f564e15_98a0298f",
        "filename": "drivers/measured_boot/event_log.c",
        "patchSetId": 4
      },
      "lineNbr": 160,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-04-01T23:19:27Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1ff5d90b_5137f745",
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2305e49_f85d3a2c",
        "filename": "drivers/measured_boot/event_log.c",
        "patchSetId": 4
      },
      "lineNbr": 163,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-03-31T18:53:11Z",
      "side": 1,
      "message": "what is the purpose of an assert and a panic? Should we use just a panic()? panic() will cover all the builds - even the ones that do not use asserts.",
      "range": {
        "startLine": 162,
        "startChar": 2,
        "endLine": 163,
        "endChar": 10
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffcbb81e_8d9e0c0a",
        "filename": "drivers/measured_boot/event_log.c",
        "patchSetId": 4
      },
      "lineNbr": 163,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2020-03-31T20:50:46Z",
      "side": 1,
      "message": "assert() prints file name and line number in DEBUG builds. Please justify its removal.",
      "parentUuid": "e2305e49_f85d3a2c",
      "range": {
        "startLine": 162,
        "startChar": 2,
        "endLine": 163,
        "endChar": 10
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df6dc276_6e879164",
        "filename": "drivers/measured_boot/event_log.c",
        "patchSetId": 4
      },
      "lineNbr": 163,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2020-04-01T13:15:42Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ffcbb81e_8d9e0c0a",
      "range": {
        "startLine": 162,
        "startChar": 2,
        "endLine": 163,
        "endChar": 10
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0bcf8430_bc517b9a",
        "filename": "drivers/measured_boot/event_log.c",
        "patchSetId": 4
      },
      "lineNbr": 163,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-04-01T23:19:27Z",
      "side": 1,
      "message": "Thanks for clarifying the intent.",
      "parentUuid": "df6dc276_6e879164",
      "range": {
        "startLine": 162,
        "startChar": 2,
        "endLine": 163,
        "endChar": 10
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f8a71cf8_6baf4363",
        "filename": "drivers/measured_boot/event_log.c",
        "patchSetId": 4
      },
      "lineNbr": 187,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-03-31T18:53:11Z",
      "side": 1,
      "message": "Should we just use panic()?",
      "range": {
        "startLine": 186,
        "startChar": 2,
        "endLine": 187,
        "endChar": 10
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a37a6e8_09420c43",
        "filename": "drivers/measured_boot/event_log.c",
        "patchSetId": 4
      },
      "lineNbr": 187,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2020-04-01T13:15:42Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f8a71cf8_6baf4363",
      "range": {
        "startLine": 186,
        "startChar": 2,
        "endLine": 187,
        "endChar": 10
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2b2d1095_0025b08a",
        "filename": "drivers/measured_boot/event_log.c",
        "patchSetId": 4
      },
      "lineNbr": 248,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2020-04-01T12:12:02Z",
      "side": 1,
      "message": "ARRAY_SIZE(images_data)",
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "51b72eae_8de1a471",
        "filename": "drivers/measured_boot/event_log.c",
        "patchSetId": 4
      },
      "lineNbr": 250,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-03-31T18:53:11Z",
      "side": 1,
      "message": "Are you relying on the compiler to replace this with strcpy()? Is this a restriction on the compiler version we can use?",
      "range": {
        "startLine": 250,
        "startChar": 3,
        "endLine": 250,
        "endChar": 36
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ea17017_4379f4b4",
        "filename": "drivers/measured_boot/event_log.c",
        "patchSetId": 4
      },
      "lineNbr": 250,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2020-04-01T16:09:56Z",
      "side": 1,
      "message": "As this is just a pointer assignment, there is no any \"strcpy()\" or other copy operations involved, so there is no any \"restriction on the compiler version we can use\".\nFor optimisation I removed \u0027image_name\u0027 variable and now pass \u0027images_data[i].name\u0027 to add_event2() directly.",
      "parentUuid": "51b72eae_8de1a471",
      "range": {
        "startLine": 250,
        "startChar": 3,
        "endLine": 250,
        "endChar": 36
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1de2019_975878aa",
        "filename": "drivers/measured_boot/event_log.c",
        "patchSetId": 4
      },
      "lineNbr": 250,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-04-01T23:19:27Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "3ea17017_4379f4b4",
      "range": {
        "startLine": 250,
        "startChar": 3,
        "endLine": 250,
        "endChar": 36
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b8bfb0ce_0433dcfc",
        "filename": "drivers/measured_boot/event_log.c",
        "patchSetId": 4
      },
      "lineNbr": 255,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-03-31T18:53:11Z",
      "side": 1,
      "message": "ARRAY_SIZE(images_data) ?",
      "range": {
        "startLine": 255,
        "startChar": 10,
        "endLine": 255,
        "endChar": 52
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8635bceb_ba45937e",
        "filename": "drivers/measured_boot/event_log.c",
        "patchSetId": 4
      },
      "lineNbr": 255,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2020-04-01T12:12:02Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b8bfb0ce_0433dcfc",
      "range": {
        "startLine": 255,
        "startChar": 10,
        "endLine": 255,
        "endChar": 52
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fddf5917_abd9df8d",
        "filename": "drivers/measured_boot/event_log.c",
        "patchSetId": 4
      },
      "lineNbr": 282,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-03-31T18:53:11Z",
      "side": 1,
      "message": "please sanity check input pointers before use",
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88563dbe_fe002bd5",
        "filename": "drivers/measured_boot/event_log.c",
        "patchSetId": 4
      },
      "lineNbr": 282,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2020-04-01T13:15:42Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "fddf5917_abd9df8d",
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7efeab2_c8a2b5fe",
        "filename": "drivers/measured_boot/event_log.c",
        "patchSetId": 4
      },
      "lineNbr": 288,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-03-31T18:53:11Z",
      "side": 1,
      "message": "should this be a generic function to allow other platforms to participate?",
      "range": {
        "startLine": 288,
        "startChar": 7,
        "endLine": 288,
        "endChar": 26
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb0649b8_7202d5cf",
        "filename": "drivers/measured_boot/event_log.c",
        "patchSetId": 4
      },
      "lineNbr": 288,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2020-04-01T13:15:42Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c7efeab2_c8a2b5fe",
      "range": {
        "startLine": 288,
        "startChar": 7,
        "endLine": 288,
        "endChar": 26
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4573e290_3ad8a09e",
        "filename": "drivers/measured_boot/event_log.c",
        "patchSetId": 4
      },
      "lineNbr": 307,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-03-31T18:53:11Z",
      "side": 1,
      "message": "should this be a generic function to allow other platforms to participate?",
      "range": {
        "startLine": 307,
        "startChar": 6,
        "endLine": 307,
        "endChar": 24
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c637359c_324c9866",
        "filename": "drivers/measured_boot/event_log.c",
        "patchSetId": 4
      },
      "lineNbr": 307,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2020-04-01T13:15:42Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "4573e290_3ad8a09e",
      "range": {
        "startLine": 307,
        "startChar": 6,
        "endLine": 307,
        "endChar": 24
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9611d265_ac91892b",
        "filename": "drivers/measured_boot/event_log.c",
        "patchSetId": 4
      },
      "lineNbr": 318,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-03-31T18:53:11Z",
      "side": 1,
      "message": "should there be a sanity check before using this pointer? Is there a way to verify that the pointer is valid and points to large enough memory?",
      "range": {
        "startLine": 318,
        "startChar": 14,
        "endLine": 318,
        "endChar": 24
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "683d8a73_6456bd88",
        "filename": "drivers/measured_boot/event_log.c",
        "patchSetId": 4
      },
      "lineNbr": 318,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2020-04-01T13:15:42Z",
      "side": 1,
      "message": "\u0027ns_log_addr\u0027 is calculated in platform layer. In case of an error plat_set_nt_fw_info() will set \u0027ns_log_addr\u0027 to NULL and return \u0027rc \u003c 0\u0027 which is checked at line #312, NULL pointer won\u0027t be accessed.",
      "parentUuid": "9611d265_ac91892b",
      "range": {
        "startLine": 318,
        "startChar": 14,
        "endLine": 318,
        "endChar": 24
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8a07048_dee814d1",
        "filename": "drivers/measured_boot/event_log.c",
        "patchSetId": 4
      },
      "lineNbr": 318,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-04-01T23:19:27Z",
      "side": 1,
      "message": "Is it prudent to rely on the platform code to do the right thing? I assume more platforms will use this in the future and it would be impossible to check very platform implementation",
      "parentUuid": "683d8a73_6456bd88",
      "range": {
        "startLine": 318,
        "startChar": 14,
        "endLine": 318,
        "endChar": 24
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26833c2c_74cdf8a1",
        "filename": "drivers/measured_boot/event_log.c",
        "patchSetId": 4
      },
      "lineNbr": 318,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2020-04-08T16:06:22Z",
      "side": 1,
      "message": "How would check that \"the pointer is valid and points to large enough memory?\" assert for !\u003d NULL, and check for minimum (what exactly?) size?",
      "parentUuid": "e8a07048_dee814d1",
      "range": {
        "startLine": 318,
        "startChar": 14,
        "endLine": 318,
        "endChar": 24
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0c75857_8c12adbf",
        "filename": "drivers/measured_boot/event_print.c",
        "patchSetId": 4
      },
      "lineNbr": 268,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-03-31T18:53:11Z",
      "side": 1,
      "message": "please sanity check input pointers before use",
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d10b5c87_bd73cf3d",
        "filename": "drivers/measured_boot/event_print.c",
        "patchSetId": 4
      },
      "lineNbr": 277,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-03-31T18:53:11Z",
      "side": 1,
      "message": "Im not a big fan of this design choice where we rely on event2_print() to control log_size. Was this done due to some design limitation or restriction?",
      "range": {
        "startLine": 277,
        "startChar": 7,
        "endLine": 277,
        "endChar": 42
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a77863a_8e732fc4",
        "filename": "drivers/measured_boot/event_print.c",
        "patchSetId": 4
      },
      "lineNbr": 277,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2020-04-01T17:29:18Z",
      "side": 1,
      "message": "Please explain what kind of problem you see here. The code tries to print Event Log while there are some data in the log or event2_print() returns an error.",
      "parentUuid": "d10b5c87_bd73cf3d",
      "range": {
        "startLine": 277,
        "startChar": 7,
        "endLine": 277,
        "endChar": 42
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d4ef490_54e8fd2b",
        "filename": "drivers/measured_boot/event_print.c",
        "patchSetId": 4
      },
      "lineNbr": 277,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-04-01T23:19:27Z",
      "side": 1,
      "message": "I usually prefer to control the size or counter or index value to be decremented outside of such function, by the caller. When we look at this code, it is amply clear how much size would be written in one iteration with that approach.",
      "parentUuid": "0a77863a_8e732fc4",
      "range": {
        "startLine": 277,
        "startChar": 7,
        "endLine": 277,
        "endChar": 42
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "721ce0be_87e622ce",
        "filename": "drivers/measured_boot/event_print.c",
        "patchSetId": 4
      },
      "lineNbr": 277,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2020-04-08T16:06:22Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "3d4ef490_54e8fd2b",
      "range": {
        "startLine": 277,
        "startChar": 7,
        "endLine": 277,
        "endChar": 42
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b66ec37a_63a06306",
        "filename": "drivers/measured_boot/measured_boot.c",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-03-31T18:53:11Z",
      "side": 1,
      "message": "Does it make sense to provide return codes? It is easy to handle to init failures than having to work through multiple asserts/panics later. Thoughts?",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 14,
        "endChar": 4
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16c092cb_6237508f",
        "filename": "drivers/measured_boot/measured_boot.c",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2020-03-31T20:50:46Z",
      "side": 1,
      "message": "This function is called from \"void bl2_main(void)\" which doesn\u0027t expect/check any error codes from all the functions it calls, so use of panic() is the only practical choice now.",
      "parentUuid": "b66ec37a_63a06306",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 14,
        "endChar": 4
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eff096e7_0c5f44b6",
        "filename": "drivers/measured_boot/measured_boot.c",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-04-01T23:19:27Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "16c092cb_6237508f",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 14,
        "endChar": 4
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f765859_55d2a01c",
        "filename": "plat/arm/common/arm_dyn_cfg_helpers.c",
        "patchSetId": 4
      },
      "lineNbr": 182,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2020-03-31T18:05:03Z",
      "side": 1,
      "message": "sm_log_addr",
      "range": {
        "startLine": 182,
        "startChar": 32,
        "endLine": 182,
        "endChar": 40
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "258bf166_2be71caa",
        "filename": "plat/arm/common/arm_dyn_cfg_helpers.c",
        "patchSetId": 4
      },
      "lineNbr": 182,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2020-03-31T18:14:22Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7f765859_55d2a01c",
      "range": {
        "startLine": 182,
        "startChar": 32,
        "endLine": 182,
        "endChar": 40
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36fbe568_f18fb644",
        "filename": "plat/arm/common/arm_dyn_cfg_helpers.c",
        "patchSetId": 4
      },
      "lineNbr": 185,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2020-03-31T18:14:22Z",
      "side": 1,
      "message": "DTB_PROP_HW_SM_LOG_ADDR",
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76614352_6fae0080",
        "filename": "plat/arm/common/arm_dyn_cfg_helpers.c",
        "patchSetId": 4
      },
      "lineNbr": 216,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2020-03-31T18:05:03Z",
      "side": 1,
      "message": "This \"and\" does not make sense here to me.",
      "range": {
        "startLine": 216,
        "startChar": 58,
        "endLine": 216,
        "endChar": 62
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec7c0a84_1f07883a",
        "filename": "plat/arm/common/arm_dyn_cfg_helpers.c",
        "patchSetId": 4
      },
      "lineNbr": 216,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2020-03-31T18:14:22Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "76614352_6fae0080",
      "range": {
        "startLine": 216,
        "startChar": 58,
        "endLine": 216,
        "endChar": 62
      },
      "revId": "b061e35458512edeeea4ddb848fed42899414b9e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    }
  ]
}