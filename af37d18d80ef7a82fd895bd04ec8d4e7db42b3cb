{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0b654f3b_ec89baa5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 13,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2021-04-26T14:17:31Z",
      "side": 1,
      "message": "Worth highlighting in the commit message that this is a theoretical issue, as in practice none of the standard chains of trust (TBBR, dualroot) or upstream platforms ones (NXP) do this right now.",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 13,
        "endChar": 20
      },
      "revId": "af37d18d80ef7a82fd895bd04ec8d4e7db42b3cb",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "32ff29cb_c6a25da0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 13,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2021-04-26T14:31:12Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "0b654f3b_ec89baa5",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 13,
        "endChar": 20
      },
      "revId": "af37d18d80ef7a82fd895bd04ec8d4e7db42b3cb",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d3feb989_5a5f8da9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2021-04-26T14:17:31Z",
      "side": 1,
      "message": "Mostly minor comments from me. The implementation looks good to me and is aligned with what we\u0027ve discussed. The only gating comment from my point of view is the one about the commit message, please have a look.",
      "revId": "af37d18d80ef7a82fd895bd04ec8d4e7db42b3cb",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6b2308c_388020d3",
        "filename": "drivers/auth/auth_mod.c",
        "patchSetId": 4
      },
      "lineNbr": 225,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2021-04-26T14:17:31Z",
      "side": 1,
      "message": "(minor) I think the original comment was better than your new proposal because it was not tied to any specific variable name in the implementation. Perhaps you can keep it high level, but just extending the sentence, such as:\n\n If the value is larger, the counter in the platform must be updated to the new\n value (provided it has been authenticated).",
      "range": {
        "startLine": 225,
        "startChar": 20,
        "endLine": 225,
        "endChar": 58
      },
      "revId": "af37d18d80ef7a82fd895bd04ec8d4e7db42b3cb",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f6bb0df4_c62c4282",
        "filename": "drivers/auth/auth_mod.c",
        "patchSetId": 4
      },
      "lineNbr": 225,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2021-04-26T14:31:12Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a6b2308c_388020d3",
      "range": {
        "startLine": 225,
        "startChar": 20,
        "endLine": 225,
        "endChar": 58
      },
      "revId": "af37d18d80ef7a82fd895bd04ec8d4e7db42b3cb",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df104b23_2fe5d3ee",
        "filename": "drivers/auth/auth_mod.c",
        "patchSetId": 4
      },
      "lineNbr": 237,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2021-04-26T14:17:31Z",
      "side": 1,
      "message": "(minor) I still think we do not need a dedicated output argument for that but could instead encode this in the return value. That\u0027s mostly personal style I guess but also I think (TBC, I have not checked the disassembly) this would free up one register, making the code slightly more efficient.",
      "range": {
        "startLine": 237,
        "startChar": 8,
        "endLine": 237,
        "endChar": 33
      },
      "revId": "af37d18d80ef7a82fd895bd04ec8d4e7db42b3cb",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4d1c6d2_62945bf6",
        "filename": "drivers/auth/auth_mod.c",
        "patchSetId": 4
      },
      "lineNbr": 237,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2021-04-26T14:31:12Z",
      "side": 1,
      "message": "Do you mean encode the return variable value so that it can be used to return both\n\u0027Success/failure (i.e. valid or invalid NV counter)\u0027 and \u0027NV counter upgrade needed\u0027?",
      "parentUuid": "df104b23_2fe5d3ee",
      "range": {
        "startLine": 237,
        "startChar": 8,
        "endLine": 237,
        "endChar": 33
      },
      "revId": "af37d18d80ef7a82fd895bd04ec8d4e7db42b3cb",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "015be4cc_92098845",
        "filename": "drivers/auth/auth_mod.c",
        "patchSetId": 4
      },
      "lineNbr": 237,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2021-04-26T15:06:37Z",
      "side": 1,
      "message": "Yes, exactly. That\u0027s what I had suggested in an earlier comment (see patch set 3).\n\nWe could continue using the negative values space for error codes, and have:\n- 0 for no error, no need to upgrade the platform counter.\n- 1 for no error, need to upgrade it.\n\nSame values really as what you\u0027ve done in this patch (as true\u003d\u003d1 and false\u003d\u003d0 underneath) but just put these values in the return value rather than having a dedicated argument variable for that.",
      "parentUuid": "a4d1c6d2_62945bf6",
      "range": {
        "startLine": 237,
        "startChar": 8,
        "endLine": 237,
        "endChar": 33
      },
      "revId": "af37d18d80ef7a82fd895bd04ec8d4e7db42b3cb",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7cf5bb38_77a3358d",
        "filename": "drivers/auth/auth_mod.c",
        "patchSetId": 4
      },
      "lineNbr": 237,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2021-04-26T17:06:31Z",
      "side": 1,
      "message": "\u003e Yes, exactly. That\u0027s what I had suggested in an earlier comment (see patch set 3).\n\u003e \n\u003e We could continue using the negative values space for error codes, and have:\nCurrently, we are using positive values as errors. See line 259, 256, 263, 269, 284.\n\u003e - 0 for no error, no need to upgrade the platform counter.\n\u003e - 1 for no error, need to upgrade it.\n\u003e \n\u003e Same values really as what you\u0027ve done in this patch (as true\u003d\u003d1 and false\u003d\u003d0 underneath) but just put these values in the return value rather than having a dedicated argument variable for that.\n\nWe need to change all these return error values to negative (we need to do changes in intermediate call functions such as \u0027img_parser_get_auth_param\u0027 and \u0027plat_get_nv_ctr\u0027 to make sure that they should return negative values), then we can use positive values \u00270\u0027 and \u00271\u0027 for platform counter upgraded or not.\n\nPlease correct me if I understand wrongly. Thanks!",
      "parentUuid": "015be4cc_92098845",
      "range": {
        "startLine": 237,
        "startChar": 8,
        "endLine": 237,
        "endChar": 33
      },
      "revId": "af37d18d80ef7a82fd895bd04ec8d4e7db42b3cb",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}