{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3d3cf7ab_befc9c82",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2023-08-10T07:32:29Z",
      "side": 1,
      "message": "Hi Juan Pablo,\nThis change will break a feature on STM32MP15, for which we can build a BL2 agnostic from the BL32 it will load (either SP_min or OP-TEE). The selection is made dynamically at runtime, depending on what is found in FIP.\nWhat was exactly the error you had, and on which platform?\n\n",
      "revId": "65727e37fa2af935ae69c20d37c8f705d83cc7cd",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0437ac35_e4eb02ab",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2023-08-10T08:10:21Z",
      "side": 1,
      "message": "Juan can add more detail on this.\nBut as discussed with him, we saw below build failure on FVP platform in case of AARCH32_SP\u003dnone for ARCH\u003daarch32 -\n\n LD      /home/workspace-tools/trusted-firmware- a/build/fvp/release/bl32/bl32.elf\n arm-none-eabi-ld.bfd:/homw/workspace-tools/trusted-firmware- a/build/fvp/release/bl32/build_message.o:1: ignoring invalid character `\\177\u0027 in \n expression\n arm-none-eabi-ld.bfd:/home/workspace-tools/trusted-firmware-a/workspace- \n tools/trusted-firmware-a/build/fvp/release/bl32/build_message.o:1: ignoring \n invalid character `\\001\u0027 in expression\n\nWhile grep\u0027ing through the CI repo, I didn\u0027t find any ST builds without AARCH32_SP specified. Please point me to ST build without AARCH32_SP.\nIt seems that the BL32 is mandatory for FVP aarch32 platform but not for ST platform, based on the following in the FVP platform makefile?\n\n ifeq (${ARCH},aarch32)\n     NEED_BL32 :\u003d yes\n endif",
      "parentUuid": "3d3cf7ab_befc9c82",
      "revId": "65727e37fa2af935ae69c20d37c8f705d83cc7cd",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1acc035_4c26785f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2023-08-10T09:20:46Z",
      "side": 1,
      "message": "Hi Manish,\nThere are no such STM32MP15 builds in TF-A CI, you\u0027re right, all the files have AARCH32_SP. It is just documented in docs/plat/stm32mp1.rst. And used a lot in our internal builds, deliveries and tests. BL32 is required for this platform, it is just that BL2 does not need the AARCH32_SP flag to build, to be able to load either SP_MIN or OP-TEE.\n\nThe lines you indicate in FVP platform makefile seem redundant with what is in the Makefile, but why not put there the check on AARCH32_SP\u003dnone?\n\n ifeq (${ARCH},aarch32)\n     NEED_BL32 :\u003d yes\n+ifeq (${AARCH32_SP},none)\n+$(error Variable AARCH32_SP has to be set for AArch32)\n+endif\n endif",
      "parentUuid": "0437ac35_e4eb02ab",
      "revId": "65727e37fa2af935ae69c20d37c8f705d83cc7cd",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a4a8fbf_f1153b37",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2023-08-10T11:27:53Z",
      "side": 1,
      "message": "\u003e  it is just that BL2 does not need the AARCH32_SP flag to build, to be able to load either SP_MIN or OP-TEE.\n\nAh okay! I got it what do you mean. I think it is better to have one build configuration in CI to prove this case (i.e. without AARCH32_SP).\n\n\u003e The lines you indicate in FVP platform makefile seem redundant with what is in the Makefile, but why not put there the check on AARCH32_SP\u003dnone?\nYes, this seems to be redundant. We will take care of removing this from the FVP platform Makefile. The default-aarch32 build of FVP always triggers BL32 build somehow, but this is not the case for ST platforms.\n\n\u003e why not put there the check on AARCH32_SP\u003dnone?\n\u003e ifeq (${ARCH},aarch32)\n\u003e     NEED_BL32 :\u003d yes\n\u003e +ifeq (${AARCH32_SP},none)\n\u003e +$(error Variable AARCH32_SP has to be set for AArch32)\n\u003e +endif\n\u003e endif\n\nMakes sense! Thanks. It will be good to handle this in the common Arm platform Makefile.",
      "parentUuid": "d1acc035_4c26785f",
      "revId": "65727e37fa2af935ae69c20d37c8f705d83cc7cd",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc338c0a_f759c61c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2023-08-10T11:31:32Z",
      "side": 1,
      "message": "\u003e \u003e  it is just that BL2 does not need the AARCH32_SP flag to build, to be able to load either SP_MIN or OP-TEE.\n\u003e \n\u003e Ah okay! I got it what do you mean. I think it is better to have one build configuration in CI to prove this case (i.e. without AARCH32_SP).\nYes, it could be usefull, I\u0027ll push a new config for this, only compiling BL2 without AARCH32_SP for STM32MP15.\n\u003e \n\u003e \u003e The lines you indicate in FVP platform makefile seem redundant with what is in the Makefile, but why not put there the check on AARCH32_SP\u003dnone?\n\u003e Yes, this seems to be redundant. We will take care of removing this from the FVP platform Makefile. The default-aarch32 build of FVP always triggers BL32 build somehow, but this is not the case for ST platforms.\n\u003e \n\u003e \u003e why not put there the check on AARCH32_SP\u003dnone?\n\u003e \u003e ifeq (${ARCH},aarch32)\n\u003e \u003e     NEED_BL32 :\u003d yes\n\u003e \u003e +ifeq (${AARCH32_SP},none)\n\u003e \u003e +$(error Variable AARCH32_SP has to be set for AArch32)\n\u003e \u003e +endif\n\u003e \u003e endif\n\u003e \n\u003e Makes sense! Thanks. It will be good to handle this in the common Arm platform Makefile.",
      "parentUuid": "0a4a8fbf_f1153b37",
      "revId": "65727e37fa2af935ae69c20d37c8f705d83cc7cd",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ef37b97_825a1ec0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000750
      },
      "writtenOn": "2023-08-10T17:16:20Z",
      "side": 1,
      "message": "Hi Yann, \n\nthanks for your comments. My only question is: will not other platforms than FVP benefit from this change as well as to put it in the FVP makefile only?",
      "parentUuid": "fc338c0a_f759c61c",
      "revId": "65727e37fa2af935ae69c20d37c8f705d83cc7cd",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa64ee07_cb484c3e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2023-08-11T07:06:20Z",
      "side": 1,
      "message": "Hi Juan,\nI don\u0027t know how this could be achieved without breaking STM32MP1 BL2 build without AARCH32_SP. Maybe you could put an $(info ...) message instead of the error in the Makefile? Other platforms will have the info that the definition is missing.",
      "parentUuid": "8ef37b97_825a1ec0",
      "revId": "65727e37fa2af935ae69c20d37c8f705d83cc7cd",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a4237df_806b6ea3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2023-08-14T14:57:08Z",
      "side": 1,
      "message": "I was wondering if we could simply replicate this check, as appropriate, for every platform that support aarch32 build? I believe there are only a couple of platforms that support aarch32 build.",
      "parentUuid": "aa64ee07_cb484c3e",
      "revId": "65727e37fa2af935ae69c20d37c8f705d83cc7cd",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}