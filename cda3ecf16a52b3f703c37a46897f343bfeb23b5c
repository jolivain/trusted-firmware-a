{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "46d42f26_9779ce8b",
        "filename": "plat/allwinner/common/include/sunxi_cpucfg_ncat.h",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1000126
      },
      "writtenOn": "2023-04-14T02:25:18Z",
      "side": 1,
      "message": "That\u0027s not surprising. A large portion of the CPU subsystem registers are undocumented, or are only documented in a subset of the applicable SoC user manuals.",
      "revId": "cda3ecf16a52b3f703c37a46897f343bfeb23b5c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61336b4b_66d73830",
        "filename": "plat/allwinner/common/include/sunxi_cpucfg_ncat.h",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1000126
      },
      "writtenOn": "2023-04-14T02:25:18Z",
      "side": 1,
      "message": "FWIW these RVBAR locations are documented in the A133 user manual, so it probably uses these offsets too (for whichever sun50iw10p1 variants are \"A133\"). It doesn\u0027t document the register at 0x20, though.",
      "revId": "cda3ecf16a52b3f703c37a46897f343bfeb23b5c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5787141c_882768de",
        "filename": "plat/allwinner/common/include/sunxi_cpucfg_ncat.h",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1000126
      },
      "writtenOn": "2023-04-14T02:35:29Z",
      "side": 1,
      "message": "https://github.com/MAVProxyUser/athena_tina_sdk/blob/fda15299a521c5060604632e594dc45a66a5d60f/Tina-MR813-OPEN/lichee/arisc/ar100s/arch/openrisc/plat-sun50iw10p1/inc/cpucfg_regs.h\n\n(public MR813_Tina_Open SDK)\n\n/* CPU SUBSYSTEM REGS : new register layout for sun50iw10p1 Version F and after */\n#define SUB_CPU_CTRL_REG(core)  (CPUSUBSYS_REG_BASE + 0x20 + (core) * 0x4)\n/* CPUSCFG REGS : new register layout for sun50iw10p1 Version F and after */\n#define CPUS_C0_CPU_CFG_REG(core)                 (R_CPUCFG_REG_BASE + 0x70 + (core) * 0x04)\n\nUnfortunately, neither of these are used anywhere in the ARISC code.",
      "parentUuid": "61336b4b_66d73830",
      "revId": "cda3ecf16a52b3f703c37a46897f343bfeb23b5c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3093c3db_d6f5aa85",
        "filename": "plat/allwinner/common/include/sunxi_cpucfg_ncat.h",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1000126
      },
      "writtenOn": "2023-04-14T02:25:18Z",
      "side": 1,
      "message": "I wonder if the CPUIDLE hardware works with either die variant. Have you tried using it for initial SMP bringup? (~full register definitions at https://linux-sunxi.org/CPUIDLE)",
      "revId": "cda3ecf16a52b3f703c37a46897f343bfeb23b5c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}