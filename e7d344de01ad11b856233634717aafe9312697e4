{
  "comments": [
    {
      "key": {
        "uuid": "f8501d4c_26d0dccc",
        "filename": "lib/libc/aarch64/memset.S",
        "patchSetId": 7
      },
      "lineNbr": 12,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2020-08-19T18:50:01Z",
      "side": 1,
      "message": "is it not possible to write the same thing in C with the optimizations below? trying to understand your reason for choosing to write the optimized version in assembly.",
      "range": {
        "startLine": 12,
        "startChar": 3,
        "endLine": 12,
        "endChar": 48
      },
      "revId": "e7d344de01ad11b856233634717aafe9312697e4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70e18ff6_6522087e",
        "filename": "lib/libc/aarch64/memset.S",
        "patchSetId": 7
      },
      "lineNbr": 12,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2020-08-19T19:23:30Z",
      "side": 1,
      "message": "I ran tests and this assembler version gives better results then C variant.\nHave you ever asked the question why all these files are in assembler?\nhttps://github.com/torvalds/linux/blob/master/arch/arm64/lib/memset.S\nhttps://github.com/ARM-software/optimized-routines/blob/master/string/aarch64/memset.S\nhttps://github.com/freebsd/freebsd/blob/master/sys/arm64/arm64/memmove.S\nhttps://github.com/freebsd/freebsd/blob/master/sys/arm64/arm64/memcpy.S",
      "parentUuid": "f8501d4c_26d0dccc",
      "range": {
        "startLine": 12,
        "startChar": 3,
        "endLine": 12,
        "endChar": 48
      },
      "revId": "e7d344de01ad11b856233634717aafe9312697e4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe15492b_873e72e0",
        "filename": "lib/libc/aarch64/memset.S",
        "patchSetId": 7
      },
      "lineNbr": 12,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2020-08-19T20:03:02Z",
      "side": 1,
      "message": "Better than an optimized C version? Or are you comparing the optimized assembly with the unoptimized C code that was in TF-A. Your commit message is not clear. Also, I don\u0027t care why those are in assembly. I only care why common code used by many platforms is being modified into something more complicated than necessary. If the complexity is necessary, i would like justification since this is code used by the community and not just ARM. See bug below for case in point. I would not like my platform to use code with a bug like the one mentioned below.\n\nAlso i can show you just as many examples of optimized memset\u0027s written in C. Here is one: https://git.musl-libc.org/cgit/musl/tree/src/string/memset.c.\n\nHave you asked why it is written in C?",
      "parentUuid": "70e18ff6_6522087e",
      "range": {
        "startLine": 12,
        "startChar": 3,
        "endLine": 12,
        "endChar": 48
      },
      "revId": "e7d344de01ad11b856233634717aafe9312697e4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc647614_2f3451b6",
        "filename": "lib/libc/aarch64/memset.S",
        "patchSetId": 7
      },
      "lineNbr": 21,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2020-08-19T18:50:01Z",
      "side": 1,
      "message": "should you not use x2 instead of w2 for aarch64? size_t is unsigned long and 64 bits. All below use of w2 needs to be changed to x2?",
      "range": {
        "startLine": 21,
        "startChar": 5,
        "endLine": 21,
        "endChar": 7
      },
      "revId": "e7d344de01ad11b856233634717aafe9312697e4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c460f60_9cc59315",
        "filename": "lib/libc/aarch64/memset.S",
        "patchSetId": 7
      },
      "lineNbr": 21,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2020-08-19T19:23:30Z",
      "side": 1,
      "message": "Yes, x2 should be used here. Not \"All below use of w2 needs to be changed to x2\"",
      "parentUuid": "dc647614_2f3451b6",
      "range": {
        "startLine": 21,
        "startChar": 5,
        "endLine": 21,
        "endChar": 7
      },
      "revId": "e7d344de01ad11b856233634717aafe9312697e4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20d92108_513c3225",
        "filename": "lib/libc/aarch64/memset.S",
        "patchSetId": 7
      },
      "lineNbr": 21,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2020-08-19T20:03:02Z",
      "side": 1,
      "message": "subs w2, w2, #1 in the unaligned label also needs to be subs x2, x2, #1. Why should that use W2 instead of x2?",
      "parentUuid": "3c460f60_9cc59315",
      "range": {
        "startLine": 21,
        "startChar": 5,
        "endLine": 21,
        "endChar": 7
      },
      "revId": "e7d344de01ad11b856233634717aafe9312697e4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    }
  ]
}