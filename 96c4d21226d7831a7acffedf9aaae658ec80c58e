{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8c3304d2_06a0eff0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2021-10-20T13:47:38Z",
      "side": 1,
      "message": "Quite a lot of build failures because of usage of llx/lld, replacing all the occurrence of these will be a lot of work.\n\nBTW, i am trying understand your motive behind this change. Looking at earlier comments it appears that the reason for this change was\n1) Code is not portable.  Code with printf format specifiers for 64_t types will not recompile when ported to/from ATF.\n2) Static analysis tools get confused.  We get parse errors when running coverity scan analysis on ATF due to a different type of stdint type for uint64_t.\n\nWhere do you want to port it. TF-A code is meant for Arm (32/64 bit) and its working perfectly fine.\nAlso, https://developer.arm.com/documentation/den0024/a/Porting-to-A64/Data-types does not mentions about not using long long for Aarch64.\n\nRegarding coverity scan, we also use it in our CI, it would be interesting to look at the errors you are mentioning.\n",
      "revId": "96c4d21226d7831a7acffedf9aaae658ec80c58e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6ee62f8f_aca29734",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2021-10-22T14:58:55Z",
      "side": 1,
      "message": "So Manish and I had a quick chat about this patch, and I think we\u0027ve come to a conclusion:\n\n- According to the ABI, `long` is 32-bits and `long long` is 64 bits in both A32 and A64 [1], so we can\u0027t switch out `uint64_t` for `unsigned long`. I\u0027ve verified that this is the case on GCC.\n- The rest of the patch introducing the printf specifiers makes sense, and is probably necessary for us to comply with the language standard.\n- In the longer term we ought to consider using the freestanding standard library headers provided by the compiler to avoid issues like this in the future.\n\nI think it makes sense to take this change, but we just need to undo the change to the 64-bit datatypes first.\n\n[1]: https://developer.arm.com/documentation/den0024/a/Porting-to-A64/Data-types",
      "revId": "96c4d21226d7831a7acffedf9aaae658ec80c58e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fcd27bc0_d8ccaecb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2021-10-22T14:59:25Z",
      "side": 1,
      "message": "Oops, wrong label.",
      "revId": "96c4d21226d7831a7acffedf9aaae658ec80c58e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "43b2ae36_8c93cf00",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000319
      },
      "writtenOn": "2021-10-22T23:57:44Z",
      "side": 1,
      "message": "The coverity scan reports the incorrect use of format specifiers with 64_t types which was the reason I make these changes (and we have made and use these changes to our version of ATF).  The documentation you point to I believe is wrong.",
      "parentUuid": "8c3304d2_06a0eff0",
      "revId": "96c4d21226d7831a7acffedf9aaae658ec80c58e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "083560c6_76dcaa01",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000319
      },
      "writtenOn": "2021-10-22T23:57:44Z",
      "side": 1,
      "message": "Hi Chris,\n\nSee my first comment in Patchset1 and reply from Raghu.  Also, your link to arm documentation does not match what 64-bit arm gcc compiler does.\n\n\"\nPatch Set 1:\n\nI am unsure if uint64_t is supposed to be long or long long for aarch64.\n\nBut, the move to inttypes.h should be done for fixed width types for portability reasons and proper printf format specifiers.\nPerhaps I should introduce that inttypes.h first and then have the stdint.h change in a follow on commit?\n\nunsigned long on aarch64 gcc is 64 bits. unsigned long long is usually not used on aarch64.\n\"",
      "parentUuid": "6ee62f8f_aca29734",
      "revId": "96c4d21226d7831a7acffedf9aaae658ec80c58e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}