{
  "comments": [
    {
      "key": {
        "uuid": "0eeb05aa_9f6a31de",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 7,
      "author": {
        "id": 1000050
      },
      "writtenOn": "2019-05-03T14:47:57Z",
      "side": 1,
      "message": "So far the commits and the documentation refer to this as PAuth rather than PtrAuth",
      "range": {
        "startLine": 7,
        "startChar": 12,
        "endLine": 7,
        "endChar": 19
      },
      "revId": "afebb5206c4970308d81bbb8a9de73893677db84",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8f024077_dcb99d0d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 9,
      "author": {
        "id": 1000050
      },
      "writtenOn": "2019-05-03T14:47:57Z",
      "side": 1,
      "message": "Same",
      "range": {
        "startLine": 9,
        "startChar": 28,
        "endLine": 9,
        "endChar": 35
      },
      "revId": "afebb5206c4970308d81bbb8a9de73893677db84",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "03c81b0c_6e0dcf8a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 22,
      "author": {
        "id": 1000050
      },
      "writtenOn": "2019-05-03T14:47:57Z",
      "side": 1,
      "message": "This commit message is quite confusing, couldn\u0027t this patch be split into more than one?",
      "revId": "afebb5206c4970308d81bbb8a9de73893677db84",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "701e1bd1_ab97b34f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 22,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2019-05-03T15:33:12Z",
      "side": 1,
      "message": "This patch set addresses comments to place pauth_helpers.S in BL_COMMON_SOURCES of arm_common.mk, move all PAuth support code from lib/aarch64 to lib/extensions/pauth folder and rename bl_init_pauth to bl_init_pauth(). How would you split the changes?\nI will restore platform specific plat_init_apiakey() in arm/common/aarch64/arm_pauth.c, so what are the other changes required?",
      "parentUuid": "03c81b0c_6e0dcf8a",
      "revId": "afebb5206c4970308d81bbb8a9de73893677db84",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "146fbddf_792a1b1b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 22,
      "author": {
        "id": 1000050
      },
      "writtenOn": "2019-05-03T16:17:47Z",
      "side": 1,
      "message": "If that function is restored maybe the commit will be more clear. Don\u0027t split it for now.",
      "parentUuid": "701e1bd1_ab97b34f",
      "revId": "afebb5206c4970308d81bbb8a9de73893677db84",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3abbb67e_20120fe5",
        "filename": "bl31/bl31_main.c",
        "patchSetId": 6
      },
      "lineNbr": 82,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2019-05-09T09:45:46Z",
      "side": 1,
      "message": "The pauth initialization and key management can be simplified IMO.\n\nThis function can be removed. pauth_load_apiakey_enable_el3() can query the platform for the keys and program the keys provided. \n\nThis will enable the flexibility to have a different PAUTH key for each CPU and even a different key for every warm boot.",
      "range": {
        "startLine": 82,
        "startChar": 1,
        "endLine": 82,
        "endChar": 14
      },
      "revId": "afebb5206c4970308d81bbb8a9de73893677db84",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d2e208eb_b39441c7",
        "filename": "lib/extensions/pauth/arm_pauth.c",
        "patchSetId": 6
      },
      "lineNbr": 48,
      "author": {
        "id": 1000050
      },
      "writtenOn": "2019-05-03T14:45:44Z",
      "side": 1,
      "message": "This is a common function, so you can\u0027t reimplement this in the platform layer.",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 48,
        "endChar": 52
      },
      "revId": "afebb5206c4970308d81bbb8a9de73893677db84",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3007a964_4ddec612",
        "filename": "lib/extensions/pauth/arm_pauth.c",
        "patchSetId": 6
      },
      "lineNbr": 48,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2019-05-03T15:01:44Z",
      "side": 1,
      "message": "which function do you mean? bl_init_pauth or removed plat_init_apikey()?",
      "parentUuid": "d2e208eb_b39441c7",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 48,
        "endChar": 52
      },
      "revId": "afebb5206c4970308d81bbb8a9de73893677db84",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01ed810c_87688444",
        "filename": "lib/extensions/pauth/arm_pauth.c",
        "patchSetId": 6
      },
      "lineNbr": 48,
      "author": {
        "id": 1000050
      },
      "writtenOn": "2019-05-03T15:04:31Z",
      "side": 1,
      "message": "bl_init_pauth() is a common function that can\u0027t be overriden by the platform. This comment about \"a production system must re-implement this function\" is incorrect. This code should be in the platform layer, as it was before in plat_init_apikey().",
      "parentUuid": "3007a964_4ddec612",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 48,
        "endChar": 52
      },
      "revId": "afebb5206c4970308d81bbb8a9de73893677db84",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ceaebf4a_33333873",
        "filename": "lib/extensions/pauth/arm_pauth.c",
        "patchSetId": 6
      },
      "lineNbr": 48,
      "author": {
        "id": 1000050
      },
      "writtenOn": "2019-05-03T15:06:06Z",
      "side": 1,
      "message": "In other words, the right place for this code is plat/arm/common/ because that way non-arm platforms can implement their own version of it. However, the rest of bl_init_pauth() is common, and that is why this code was split into two functions before.",
      "parentUuid": "01ed810c_87688444",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 48,
        "endChar": 52
      },
      "revId": "afebb5206c4970308d81bbb8a9de73893677db84",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f106c71_f072c572",
        "filename": "lib/extensions/pauth/arm_pauth.c",
        "patchSetId": 6
      },
      "lineNbr": 48,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2019-05-09T09:45:46Z",
      "side": 1,
      "message": "Hi Alexei, the platform must be given the option of choosing the key to program for each BL. \n\nIn fact, the platform may choose a a different key for each BL and each PE in case of BL31. The API must be flexible to allow all these combinations.\n\nI don\u0027t particularly like the prototype of the previous plat_init_apiakey().",
      "parentUuid": "ceaebf4a_33333873",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 48,
        "endChar": 52
      },
      "revId": "afebb5206c4970308d81bbb8a9de73893677db84",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c58c79b4_133f5c80",
        "filename": "lib/extensions/pauth/pauth_helpers.S",
        "patchSetId": 6
      },
      "lineNbr": 51,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2019-05-09T09:45:46Z",
      "side": 1,
      "message": "Is there a need for this function to be written in asm ?. This function can query the platform for the keys to use and then use pauth_load_apiakey() to program the key.\n\nI have given another suggestion in another place regarding this.",
      "range": {
        "startLine": 51,
        "startChar": 5,
        "endLine": 51,
        "endChar": 34
      },
      "revId": "afebb5206c4970308d81bbb8a9de73893677db84",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    }
  ]
}