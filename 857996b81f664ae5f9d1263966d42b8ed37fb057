{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "36475bd7_97b819e0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-05-09T16:01:03Z",
      "side": 1,
      "message": "I think TF-A has been assuming PMUv3 since the beginning and it seems all platforms implement this. It is better to not provide variability in TF-A where is not needed, just to avoid all the extra config options and code need to provide this variation.\n\nAlso PMUv3 is mandated by SBSA, so it is unlikely anyone builds a platform without this.\n\nRMM has also taken the path to assume PMUv3 and this can be asserted during boot.\n",
      "revId": "857996b81f664ae5f9d1263966d42b8ed37fb057",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19454538_25f2bf59",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-05-15T08:56:32Z",
      "side": 1,
      "message": "Well, I\u0027m indifferent towards the flag and won\u0027t particularly mind omitting it. It would be good to have it IMO as it is a valid fvp cmdline parameter and might be useful for debugging.\n\nFlag or not, I still want this patch and I it\u0027s important to me for the refactoring above. Is this all that\u0027s problematic?",
      "parentUuid": "36475bd7_97b819e0",
      "revId": "857996b81f664ae5f9d1263966d42b8ed37fb057",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "571e39c9_26b7c4c7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-05-15T09:06:03Z",
      "side": 1,
      "message": "The reorg done as part of the patch is useful .I will give some comments on build flag and some aspects related to this.",
      "parentUuid": "19454538_25f2bf59",
      "revId": "857996b81f664ae5f9d1263966d42b8ed37fb057",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "330753c6_ef87af14",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-05-30T15:32:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "571e39c9_26b7c4c7",
      "revId": "857996b81f664ae5f9d1263966d42b8ed37fb057",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f986858c_0554a0f1",
        "filename": "bl31/bl31.mk",
        "patchSetId": 14
      },
      "lineNbr": 129,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-05-15T09:14:59Z",
      "side": 1,
      "message": "Remove the check as we will always assumed PMUv3. Unconditionally include the below file.",
      "range": {
        "startLine": 129,
        "startChar": 9,
        "endLine": 129,
        "endChar": 33
      },
      "revId": "857996b81f664ae5f9d1263966d42b8ed37fb057",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6463ac19_ab949b5b",
        "filename": "bl31/bl31.mk",
        "patchSetId": 14
      },
      "lineNbr": 129,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-05-30T15:32:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f986858c_0554a0f1",
      "range": {
        "startLine": 129,
        "startChar": 9,
        "endLine": 129,
        "endChar": 33
      },
      "revId": "857996b81f664ae5f9d1263966d42b8ed37fb057",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c29dab08_b695787a",
        "filename": "bl32/sp_min/sp_min.mk",
        "patchSetId": 14
      },
      "lineNbr": 58,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-05-15T09:14:59Z",
      "side": 1,
      "message": "Can be included unconditionally.",
      "revId": "857996b81f664ae5f9d1263966d42b8ed37fb057",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "88043203_8eba27f4",
        "filename": "bl32/sp_min/sp_min.mk",
        "patchSetId": 14
      },
      "lineNbr": 58,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-05-30T15:32:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c29dab08_b695787a",
      "revId": "857996b81f664ae5f9d1263966d42b8ed37fb057",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4be73057_05178158",
        "filename": "common/feat_detect.c",
        "patchSetId": 14
      },
      "lineNbr": 158,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-05-15T09:14:59Z",
      "side": 1,
      "message": "remove this check. \n\nPerhaps this needs to be an assert that this PMUv3 is present in the cold boot path. See later comments.",
      "range": {
        "startLine": 157,
        "startChar": 0,
        "endLine": 158,
        "endChar": 48
      },
      "revId": "857996b81f664ae5f9d1263966d42b8ed37fb057",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5bd7d027_a1009993",
        "filename": "common/feat_detect.c",
        "patchSetId": 14
      },
      "lineNbr": 158,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-05-15T11:07:45Z",
      "side": 1,
      "message": "why not keep it here? That\u0027s what it\u0027s whole purpose is and all feature related stuff happens quite late so it shouldn\u0027t blow up before we get here. Maybe just have it as a constant\n\nBut I still don\u0027t understand why remove the flag. I took special care to default it to 1, and it\u0027s otherwise feat_detect compliant. It\u0027s fully backwards compatible, and only adds the standard means of controlling it. Otherwise it would stick out as the only big feature with no flag.",
      "parentUuid": "4be73057_05178158",
      "range": {
        "startLine": 157,
        "startChar": 0,
        "endLine": 158,
        "endChar": 48
      },
      "revId": "857996b81f664ae5f9d1263966d42b8ed37fb057",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "966dea3d_335b7545",
        "filename": "docs/getting_started/build-options.rst",
        "patchSetId": 14
      },
      "lineNbr": 383,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-05-15T09:14:59Z",
      "side": 1,
      "message": "Remove the build flag.",
      "revId": "857996b81f664ae5f9d1263966d42b8ed37fb057",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d1ca3d3_c6609c16",
        "filename": "docs/getting_started/build-options.rst",
        "patchSetId": 14
      },
      "lineNbr": 383,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-05-30T15:32:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "966dea3d_335b7545",
      "revId": "857996b81f664ae5f9d1263966d42b8ed37fb057",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96431947_e8a19311",
        "filename": "include/arch/aarch32/arch_features.h",
        "patchSetId": 14
      },
      "lineNbr": 132,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-05-15T09:14:59Z",
      "side": 1,
      "message": "remove.",
      "range": {
        "startLine": 126,
        "startChar": 0,
        "endLine": 132,
        "endChar": 2
      },
      "revId": "857996b81f664ae5f9d1263966d42b8ed37fb057",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bb4adf4a_c4edbd21",
        "filename": "include/arch/aarch32/arch_features.h",
        "patchSetId": 14
      },
      "lineNbr": 132,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-05-30T15:32:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "96431947_e8a19311",
      "range": {
        "startLine": 126,
        "startChar": 0,
        "endLine": 132,
        "endChar": 2
      },
      "revId": "857996b81f664ae5f9d1263966d42b8ed37fb057",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5049019_da6ae698",
        "filename": "include/arch/aarch32/el3_common_macros.S",
        "patchSetId": 14
      },
      "lineNbr": 137,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-05-15T09:14:59Z",
      "side": 1,
      "message": "there is no harm in setting this bit unconditionally.",
      "revId": "857996b81f664ae5f9d1263966d42b8ed37fb057",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "18adc541_b1064a3d",
        "filename": "include/arch/aarch32/el3_common_macros.S",
        "patchSetId": 14
      },
      "lineNbr": 137,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-05-15T11:07:45Z",
      "side": 1,
      "message": "please see the reply to aarch64 comment.",
      "parentUuid": "f5049019_da6ae698",
      "revId": "857996b81f664ae5f9d1263966d42b8ed37fb057",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "422b2892_bb11049d",
        "filename": "include/arch/aarch64/arch_features.h",
        "patchSetId": 14
      },
      "lineNbr": 688,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-05-15T09:14:59Z",
      "side": 1,
      "message": "remove.",
      "range": {
        "startLine": 681,
        "startChar": 0,
        "endLine": 688,
        "endChar": 0
      },
      "revId": "857996b81f664ae5f9d1263966d42b8ed37fb057",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34c79e10_f14da83d",
        "filename": "include/arch/aarch64/arch_features.h",
        "patchSetId": 14
      },
      "lineNbr": 688,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-05-30T15:32:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "422b2892_bb11049d",
      "range": {
        "startLine": 681,
        "startChar": 0,
        "endLine": 688,
        "endChar": 0
      },
      "revId": "857996b81f664ae5f9d1263966d42b8ed37fb057",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37e54ebf_6a8f2f49",
        "filename": "include/arch/aarch64/el3_common_macros.S",
        "patchSetId": 14
      },
      "lineNbr": 142,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-05-15T09:14:59Z",
      "side": 1,
      "message": "keep the unconditional SCCD and MCCD bit settings",
      "revId": "857996b81f664ae5f9d1263966d42b8ed37fb057",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0232835_a2ed460c",
        "filename": "include/arch/aarch64/el3_common_macros.S",
        "patchSetId": 14
      },
      "lineNbr": 142,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-05-15T11:07:45Z",
      "side": 1,
      "message": "why? This patchstack\u0027s whole purpose is to do away with this. These are set in the pmuv3_enable_el3() function, which will run not much after this runs. And with the higher patches it will be moved to be pretty much one of the first things tf-a does.",
      "parentUuid": "37e54ebf_6a8f2f49",
      "revId": "857996b81f664ae5f9d1263966d42b8ed37fb057",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3fe86b81_9dc6a869",
        "filename": "include/arch/aarch64/el3_common_macros.S",
        "patchSetId": 14
      },
      "lineNbr": 142,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2023-06-09T10:56:41Z",
      "side": 1,
      "message": "The original idea was to disable PMUv3 counting in EL3 at the very early boot stage.",
      "parentUuid": "f0232835_a2ed460c",
      "revId": "857996b81f664ae5f9d1263966d42b8ed37fb057",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68845b2a_a30aee4f",
        "filename": "lib/el3_runtime/aarch32/context_mgmt.c",
        "patchSetId": 14
      },
      "lineNbr": 153,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-05-15T09:14:59Z",
      "side": 1,
      "message": "remove.",
      "range": {
        "startLine": 153,
        "startChar": 0,
        "endLine": 153,
        "endChar": 33
      },
      "revId": "857996b81f664ae5f9d1263966d42b8ed37fb057",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f2796572_d8d92fae",
        "filename": "lib/el3_runtime/aarch32/context_mgmt.c",
        "patchSetId": 14
      },
      "lineNbr": 153,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-05-30T15:32:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "68845b2a_a30aee4f",
      "range": {
        "startLine": 153,
        "startChar": 0,
        "endLine": 153,
        "endChar": 33
      },
      "revId": "857996b81f664ae5f9d1263966d42b8ed37fb057",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f41a8b43_d6725ae6",
        "filename": "lib/el3_runtime/aarch32/context_mgmt.c",
        "patchSetId": 14
      },
      "lineNbr": 154,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-05-15T09:14:59Z",
      "side": 1,
      "message": "should be done for Realm world as well as Realm always needs PMUv3.",
      "revId": "857996b81f664ae5f9d1263966d42b8ed37fb057",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd3a111f_9edcbc66",
        "filename": "lib/el3_runtime/aarch32/context_mgmt.c",
        "patchSetId": 14
      },
      "lineNbr": 154,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-05-30T15:32:08Z",
      "side": 1,
      "message": "sure, but this is a separate patch. This one is a pure refactor with the aim to keep everything as it is now",
      "parentUuid": "f41a8b43_d6725ae6",
      "revId": "857996b81f664ae5f9d1263966d42b8ed37fb057",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "29838155_fc05bed5",
        "filename": "lib/el3_runtime/aarch32/context_mgmt.c",
        "patchSetId": 14
      },
      "lineNbr": 154,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-05-31T08:00:37Z",
      "side": 1,
      "message": "nevermind, I\u0027ve added it to the cleanup section",
      "parentUuid": "fd3a111f_9edcbc66",
      "revId": "857996b81f664ae5f9d1263966d42b8ed37fb057",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b8074533_427852a4",
        "filename": "lib/el3_runtime/aarch64/context.S",
        "patchSetId": 14
      },
      "lineNbr": 604,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-05-15T09:14:59Z",
      "side": 1,
      "message": "remove. the below can be done unconditionally.",
      "range": {
        "startLine": 599,
        "startChar": 0,
        "endLine": 604,
        "endChar": 6
      },
      "revId": "857996b81f664ae5f9d1263966d42b8ed37fb057",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6f01dd49_bdc967d8",
        "filename": "lib/el3_runtime/aarch64/context.S",
        "patchSetId": 14
      },
      "lineNbr": 604,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-05-30T15:32:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b8074533_427852a4",
      "range": {
        "startLine": 599,
        "startChar": 0,
        "endLine": 604,
        "endChar": 6
      },
      "revId": "857996b81f664ae5f9d1263966d42b8ed37fb057",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29182f2a_a263c29d",
        "filename": "lib/el3_runtime/aarch64/context.S",
        "patchSetId": 14
      },
      "lineNbr": 691,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-05-15T09:14:59Z",
      "side": 1,
      "message": "remove.",
      "range": {
        "startLine": 690,
        "startChar": 0,
        "endLine": 691,
        "endChar": 33
      },
      "revId": "857996b81f664ae5f9d1263966d42b8ed37fb057",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "99b330be_20c7ec18",
        "filename": "lib/el3_runtime/aarch64/context.S",
        "patchSetId": 14
      },
      "lineNbr": 691,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-05-30T15:32:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "29182f2a_a263c29d",
      "range": {
        "startLine": 690,
        "startChar": 0,
        "endLine": 691,
        "endChar": 33
      },
      "revId": "857996b81f664ae5f9d1263966d42b8ed37fb057",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa0bc12a_ec54b190",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 14
      },
      "lineNbr": 543,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-05-15T09:14:59Z",
      "side": 1,
      "message": "do this unconditionally. \n\nwe can add an assert in the Boot path \n\nassert(is_feat_pmuv3_supported() \u003d\u003d true) to ensure the configurable platforms like FVP has set up right args.",
      "range": {
        "startLine": 543,
        "startChar": 0,
        "endLine": 543,
        "endChar": 33
      },
      "revId": "857996b81f664ae5f9d1263966d42b8ed37fb057",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "faefe078_54cd9450",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 14
      },
      "lineNbr": 543,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-05-30T15:32:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fa0bc12a_ec54b190",
      "range": {
        "startLine": 543,
        "startChar": 0,
        "endLine": 543,
        "endChar": 33
      },
      "revId": "857996b81f664ae5f9d1263966d42b8ed37fb057",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}