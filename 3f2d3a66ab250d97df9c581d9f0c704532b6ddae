{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "66eb42d2_4ced4bc3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000126
      },
      "writtenOn": "2021-07-23T01:34:44Z",
      "side": 1,
      "message": "typo: Cortex",
      "revId": "3f2d3a66ab250d97df9c581d9f0c704532b6ddae",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "94a44dd8_11286a44",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000671
      },
      "writtenOn": "2021-07-23T03:32:30Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "66eb42d2_4ced4bc3",
      "revId": "3f2d3a66ab250d97df9c581d9f0c704532b6ddae",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fb72e7c1_2ed35ad4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000671
      },
      "writtenOn": "2021-07-22T05:34:43Z",
      "side": 1,
      "message": "By the way, the R329 SRAM A2 does not have the sparse area for or1k reset vector (because it just has no or1k processor).\n\nShould we place the load address directly to 0x120000? (",
      "revId": "3f2d3a66ab250d97df9c581d9f0c704532b6ddae",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "25cc8514_83f1813c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000671
      },
      "writtenOn": "2021-07-22T05:35:34Z",
      "side": 1,
      "message": "(The 2*64K/27*64K area division is following a note on the user manual)",
      "revId": "3f2d3a66ab250d97df9c581d9f0c704532b6ddae",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "21ccd0d7_6d18a245",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2021-07-22T10:51:44Z",
      "side": 1,
      "message": "If possible, yes. I haven\u0027t checked in detail, but I think Samuel\u0027s cleanup series: \nhttps://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/9845/2 should help with that?",
      "parentUuid": "fb72e7c1_2ed35ad4",
      "revId": "3f2d3a66ab250d97df9c581d9f0c704532b6ddae",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b7a03b59_8e044c04",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2021-07-22T10:51:44Z",
      "side": 1,
      "message": "that looks roughly alright, but can you rebase this on Samuel\u0027s cleanup series?\nhttps://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/9845/2\nIdeally that already helps with the OR1K reset vector offset question?\n\n",
      "revId": "3f2d3a66ab250d97df9c581d9f0c704532b6ddae",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf760ae2_6b15d6f7",
        "filename": "plat/allwinner/sun50i_r329/include/sunxi_cpucfg.h",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1000126
      },
      "writtenOn": "2021-07-23T01:34:44Z",
      "side": 1,
      "message": "Have the CPUIDLE registers been verified?",
      "revId": "3f2d3a66ab250d97df9c581d9f0c704532b6ddae",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79b0d87e_46b4b947",
        "filename": "plat/allwinner/sun50i_r329/include/sunxi_cpucfg.h",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1000671
      },
      "writtenOn": "2021-07-23T03:32:30Z",
      "side": 1,
      "message": "Well, no.\n\nI see stock closed-source touching these registers in Ghidra, but when I manually do this sequence in U-Boot, nothing happened.\n\nWhat\u0027s the right way to test this?",
      "parentUuid": "bf760ae2_6b15d6f7",
      "revId": "3f2d3a66ab250d97df9c581d9f0c704532b6ddae",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a8f5c48_4ff6a5c3",
        "filename": "plat/allwinner/sun50i_r329/include/sunxi_mmap.h",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1000126
      },
      "writtenOn": "2021-07-23T01:34:44Z",
      "side": 1,
      "message": "I don\u0027t think this hack is necessary. These definitions are only used for SEPARATE_NOBITS_REGION, which is not needed here, since there is plenty of SRAM.",
      "revId": "3f2d3a66ab250d97df9c581d9f0c704532b6ddae",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76fcfc87_63ebb9f1",
        "filename": "plat/allwinner/sun50i_r329/include/sunxi_mmap.h",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1000671
      },
      "writtenOn": "2021-07-23T03:32:30Z",
      "side": 1,
      "message": "Well we assume SRAM A2 is the room for BL31 now, so leave this fake SRAM A1 to SPL.\n\nOr should we use another way to define where BL31 should stay?\n\nBy the way, is it really okay to assign 1MiB+ of SRAM to BL31? Isn\u0027t it a waste?",
      "parentUuid": "4a8f5c48_4ff6a5c3",
      "revId": "3f2d3a66ab250d97df9c581d9f0c704532b6ddae",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c47d303f_1819457b",
        "filename": "plat/allwinner/sun50i_r329/include/sunxi_mmap.h",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1000126
      },
      "writtenOn": "2021-07-23T01:34:44Z",
      "side": 1,
      "message": "There are separate interrupts for WATCHDOG and R_WATCHDOG in the manual, so this seems wrong.",
      "revId": "3f2d3a66ab250d97df9c581d9f0c704532b6ddae",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42f1b81c_75b0a4ee",
        "filename": "plat/allwinner/sun50i_r329/include/sunxi_mmap.h",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1000671
      },
      "writtenOn": "2021-07-23T03:32:30Z",
      "side": 1,
      "message": "well it\u0027s just copied from H616, because I have no knowledge about the R_WDG on R329.\n\nI will test whether the R_WDG will work as intended.",
      "parentUuid": "c47d303f_1819457b",
      "revId": "3f2d3a66ab250d97df9c581d9f0c704532b6ddae",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}