{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4a40a34d_4dbb4d9a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000101
      },
      "writtenOn": "2021-08-03T15:01:34Z",
      "side": 1,
      "message": "Gary is returning from sabbatical next week",
      "revId": "94dcb254d0b809a6cd89309e7e524b57e2456dce",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f87313ac_1bb2f0fa",
        "filename": "include/arch/aarch64/el_max_common_macros.S",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-07-12T13:11:33Z",
      "side": 1,
      "message": "Using the same macros to initialize EL3 and EL2 sysrgisters are a recipe for disaster as there is not architectural guarantee that the bit fields are the same across ELs. Also as seen in the patch , some of the registers are only relevant for EL3 (like SCR_EL3 ) and the patch needs to do the equivalent to hcr_el2. \n\nMy view is this EL2 reg init is better to be done separately from EL3. There are aspects of C runtime that be made common for initialization between EL3 and EL2 but not the register initialization.",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 23,
        "endChar": 22
      },
      "revId": "94dcb254d0b809a6cd89309e7e524b57e2456dce",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b829691_b94cb646",
        "filename": "lib/xlat_mpu/xlat_mpu.mk",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-07-12T13:22:06Z",
      "side": 1,
      "message": "This macro is used to differentiate 2 versions of xlat_tables lib for VMSA in TF-A. Not needed for a single lib for PMSA.",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 14,
        "endChar": 16
      },
      "revId": "94dcb254d0b809a6cd89309e7e524b57e2456dce",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e90ae530_9b2f857a",
        "filename": "lib/xlat_mpu/xlat_mpu_context.c",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-07-12T13:22:06Z",
      "side": 1,
      "message": "can rename to MPU.",
      "range": {
        "startLine": 23,
        "startChar": 9,
        "endLine": 23,
        "endChar": 23
      },
      "revId": "94dcb254d0b809a6cd89309e7e524b57e2456dce",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64d8a793_9e81008f",
        "filename": "lib/xlat_mpu/xlat_mpu_context.c",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-07-12T13:22:06Z",
      "side": 1,
      "message": "remove the argument since VA is not relevant.",
      "range": {
        "startLine": 32,
        "startChar": 59,
        "endLine": 32,
        "endChar": 66
      },
      "revId": "94dcb254d0b809a6cd89309e7e524b57e2456dce",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da5cc5be_f27a9dfe",
        "filename": "lib/xlat_mpu/xlat_mpu_context.c",
        "patchSetId": 2
      },
      "lineNbr": 82,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-07-12T13:22:06Z",
      "side": 1,
      "message": "va is not relevant.",
      "range": {
        "startLine": 82,
        "startChar": 15,
        "endLine": 82,
        "endChar": 22
      },
      "revId": "94dcb254d0b809a6cd89309e7e524b57e2456dce",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e3c3099_2fa3a697",
        "filename": "lib/xlat_mpu/xlat_mpu_context.c",
        "patchSetId": 2
      },
      "lineNbr": 88,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-07-12T13:22:06Z",
      "side": 1,
      "message": "Need to understand the usecase for dynamic mapping in MPU based system.",
      "range": {
        "startLine": 88,
        "startChar": 4,
        "endLine": 88,
        "endChar": 30
      },
      "revId": "94dcb254d0b809a6cd89309e7e524b57e2456dce",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc359113_1edf93d6",
        "filename": "lib/xlat_mpu/xlat_mpu_context.c",
        "patchSetId": 2
      },
      "lineNbr": 151,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-07-12T13:22:06Z",
      "side": 1,
      "message": "NO_EL3is not a good name for this macro. Given that this lib is only meant for use at EL2, support for other ELs can be removed.",
      "range": {
        "startLine": 151,
        "startChar": 7,
        "endLine": 151,
        "endChar": 13
      },
      "revId": "94dcb254d0b809a6cd89309e7e524b57e2456dce",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93ac8382_093beac5",
        "filename": "lib/xlat_mpu/xlat_mpu_core.c",
        "patchSetId": 2
      },
      "lineNbr": 214,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-07-12T13:22:06Z",
      "side": 1,
      "message": "Requirement for dynamic mapping of MPU regions needs to be defined. Given that the hardware slots for mapping a a MPU region is fixed for a given platform, need to understand how this will be catered for within the dynamic mapping usecase.",
      "range": {
        "startLine": 214,
        "startChar": 4,
        "endLine": 214,
        "endChar": 28
      },
      "revId": "94dcb254d0b809a6cd89309e7e524b57e2456dce",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}