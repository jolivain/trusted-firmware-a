{
  "comments": [
    {
      "key": {
        "uuid": "53630a03_4166696a",
        "filename": "plat/qti/common/src/qti_pm.c",
        "patchSetId": 8
      },
      "lineNbr": 48,
      "author": {
        "id": 1000060
      },
      "writtenOn": "2020-07-24T00:17:46Z",
      "side": 1,
      "message": "I would still prefer this and the mask bit above to come from cortex_a76.h",
      "range": {
        "startLine": 48,
        "startChar": 42,
        "endLine": 48,
        "endChar": 55
      },
      "revId": "95e6faa4fa7bcae6e197c975693e2bd4c8339867",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b0aa6b4_1d47581f",
        "filename": "plat/qti/common/src/qti_pm.c",
        "patchSetId": 8
      },
      "lineNbr": 48,
      "author": {
        "id": 1000373
      },
      "writtenOn": "2020-07-28T14:15:21Z",
      "side": 1,
      "message": "we can\u0027t define function like below, since pre-processor macro won\u0027t translate it to S3_0_C15_C2_7.\n\n_DEFINE_SYSREG_WRITE_FUNC(cpu_pwrctrl_val, CORTEX_A76_CPUPWRCTLR_EL1)\n\nbesides using A76 may not look clean if we are using same for other type of cpu, defining a QTI_* will make it generic for all QTI cpus.",
      "parentUuid": "53630a03_4166696a",
      "range": {
        "startLine": 48,
        "startChar": 42,
        "endLine": 48,
        "endChar": 55
      },
      "revId": "95e6faa4fa7bcae6e197c975693e2bd4c8339867",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "389c7f49_3552ba40",
        "filename": "plat/qti/common/src/qti_pm.c",
        "patchSetId": 8
      },
      "lineNbr": 48,
      "author": {
        "id": 1000060
      },
      "writtenOn": "2020-07-30T01:55:03Z",
      "side": 1,
      "message": "I see. Hmmm. Well, I still don\u0027t find the way all these non-architectural registers are defined and handled very satisfying but I guess that\u0027s a larger TF-A-wide problem that needs to be well thought through and addressed as a whole. I guess you can keep it like this for now.",
      "parentUuid": "6b0aa6b4_1d47581f",
      "range": {
        "startLine": 48,
        "startChar": 42,
        "endLine": 48,
        "endChar": 55
      },
      "revId": "95e6faa4fa7bcae6e197c975693e2bd4c8339867",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6869fc93_9e5eac5a",
        "filename": "plat/qti/common/src/qti_pm.c",
        "patchSetId": 8
      },
      "lineNbr": 147,
      "author": {
        "id": 1000060
      },
      "writtenOn": "2020-07-24T00:17:46Z",
      "side": 1,
      "message": "You\u0027re writing this long if-condition so often it might be nice to factor it out into an is_cpu_off(target_state) function.",
      "revId": "95e6faa4fa7bcae6e197c975693e2bd4c8339867",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abc91d18_9ed03731",
        "filename": "plat/qti/common/src/qti_pm.c",
        "patchSetId": 8
      },
      "lineNbr": 147,
      "author": {
        "id": 1000373
      },
      "writtenOn": "2020-07-28T14:15:21Z",
      "side": 1,
      "message": "sure, moved to new is_cpu_off() function.",
      "parentUuid": "6869fc93_9e5eac5a",
      "revId": "95e6faa4fa7bcae6e197c975693e2bd4c8339867",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ddebfb6_db1a9c1f",
        "filename": "plat/qti/common/src/qti_pm.c",
        "patchSetId": 8
      },
      "lineNbr": 263,
      "author": {
        "id": 1000060
      },
      "writtenOn": "2020-07-24T00:17:46Z",
      "side": 1,
      "message": "no space here",
      "range": {
        "startLine": 263,
        "startChar": 38,
        "endLine": 263,
        "endChar": 39
      },
      "revId": "95e6faa4fa7bcae6e197c975693e2bd4c8339867",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7d23c7f_e8362765",
        "filename": "plat/qti/common/src/qti_pm.c",
        "patchSetId": 8
      },
      "lineNbr": 263,
      "author": {
        "id": 1000373
      },
      "writtenOn": "2020-07-28T14:15:21Z",
      "side": 1,
      "message": "Removed extra space.",
      "parentUuid": "0ddebfb6_db1a9c1f",
      "range": {
        "startLine": 263,
        "startChar": 38,
        "endLine": 263,
        "endChar": 39
      },
      "revId": "95e6faa4fa7bcae6e197c975693e2bd4c8339867",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f1b6f7b_ddacf8d3",
        "filename": "plat/qti/common/src/qti_syscall.c",
        "patchSetId": 8
      },
      "lineNbr": 241,
      "author": {
        "id": 1000060
      },
      "writtenOn": "2020-07-24T00:17:46Z",
      "side": 1,
      "message": "I think goto labels should normal be in small letters, not caps. (Also maybe another blank line before this?)",
      "range": {
        "startLine": 241,
        "startChar": 0,
        "endLine": 241,
        "endChar": 12
      },
      "revId": "95e6faa4fa7bcae6e197c975693e2bd4c8339867",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa4a5809_86cca0a2",
        "filename": "plat/qti/common/src/qti_syscall.c",
        "patchSetId": 8
      },
      "lineNbr": 241,
      "author": {
        "id": 1000357
      },
      "writtenOn": "2020-08-04T20:02:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3f1b6f7b_ddacf8d3",
      "range": {
        "startLine": 241,
        "startChar": 0,
        "endLine": 241,
        "endChar": 12
      },
      "revId": "95e6faa4fa7bcae6e197c975693e2bd4c8339867",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c0c97263_7aac0e18",
        "filename": "plat/qti/qtiseclib/inc/qtiseclib_defs.h",
        "patchSetId": 8
      },
      "lineNbr": 38,
      "author": {
        "id": 1000060
      },
      "writtenOn": "2020-07-24T00:17:46Z",
      "side": 1,
      "message": "There should be no need to #if guard struct definitions, they don\u0027t hurt anyone. (Like you saw on the qtiseclib side, this just makes it easy to accidentally introduce build errors to one of the two configurations.)",
      "revId": "95e6faa4fa7bcae6e197c975693e2bd4c8339867",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68df1be0_e2226bf8",
        "filename": "plat/qti/qtiseclib/inc/qtiseclib_defs.h",
        "patchSetId": 8
      },
      "lineNbr": 38,
      "author": {
        "id": 1000357
      },
      "writtenOn": "2020-07-27T08:35:20Z",
      "side": 1,
      "message": "I think these accidental usage should be avoided, so better to keep them under flag as well.\nBuild error is always better then getting them used in release build.",
      "parentUuid": "c0c97263_7aac0e18",
      "revId": "95e6faa4fa7bcae6e197c975693e2bd4c8339867",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10ed3a7a_8c4e9e98",
        "filename": "plat/qti/qtiseclib/inc/qtiseclib_defs.h",
        "patchSetId": 8
      },
      "lineNbr": 38,
      "author": {
        "id": 1000060
      },
      "writtenOn": "2020-08-06T00:45:42Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "68df1be0_e2226bf8",
      "revId": "95e6faa4fa7bcae6e197c975693e2bd4c8339867",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad4243f_e06da522",
        "filename": "plat/qti/sc7180/platform.mk",
        "patchSetId": 8
      },
      "lineNbr": 34,
      "author": {
        "id": 1000060
      },
      "writtenOn": "2020-07-24T00:17:46Z",
      "side": 1,
      "message": "You can just write add_define(QTI_SDI_BUILD), that has the same effect.",
      "revId": "95e6faa4fa7bcae6e197c975693e2bd4c8339867",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ff0aa64_e89233ad",
        "filename": "plat/qti/sc7180/platform.mk",
        "patchSetId": 8
      },
      "lineNbr": 34,
      "author": {
        "id": 1000357
      },
      "writtenOn": "2020-07-27T10:10:04Z",
      "side": 1,
      "message": "not working, see error below. we have #if in c code its expects value as well.\n\n\nIn file included from plat/qti/qtiseclib/inc/qtiseclib_interface.h:10:0,\n                 from plat/qti/common/src/qti_bl31_setup.c:21:\nplat/qti/qtiseclib/inc/qtiseclib_defs.h:38:18: error: #if with no expression\n #if QTI_SDI_BUILD\n                  ^\nMakefile:1069: recipe for target \u0027build/sc7180/debug/bl31/qti_bl31_setup.o\u0027 failed",
      "parentUuid": "9ad4243f_e06da522",
      "revId": "95e6faa4fa7bcae6e197c975693e2bd4c8339867",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6fd00a5f_0c9add86",
        "filename": "plat/qti/sc7180/platform.mk",
        "patchSetId": 8
      },
      "lineNbr": 34,
      "author": {
        "id": 1000060
      },
      "writtenOn": "2020-07-27T23:03:54Z",
      "side": 1,
      "message": "Huh... not sure why this doesn\u0027t work. add_define is declared as\n\n DEFINES +\u003d -D$(1)$(if $(value $(1)),\u003d$(value $(1)),)\n\nso add_define(QTI_SDI_BUILD) should resolve to\n\n DEFINES +\u003d -DQTI_SDI_BUILD$(if $(value QTI_SDI_BUILD),\u003d$(value QTI_SDI_BUILD),)\n\n$(value QTI_SDI_BUILD) should be `0` so this should further resolve to\n\n DEFINES +\u003d -DQTI_SDI_BUILD$(if 0,\u003d0,)\n\nand since $(if ) considers everything true that\u0027s not an empty string, this should give you\n\n DEFINES +\u003d -DQTI_SDI_BUILD\u003d0\n\nWhat am I missing? Are you sure you wrote and spelled it right when you tested it (still with the $(eval ) around it, and putting the add_define *after* the QTI_SDI_BUILD :\u003d 0)?",
      "parentUuid": "8ff0aa64_e89233ad",
      "revId": "95e6faa4fa7bcae6e197c975693e2bd4c8339867",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3eb43e25_14fc62d9",
        "filename": "plat/qti/sc7180/platform.mk",
        "patchSetId": 8
      },
      "lineNbr": 34,
      "author": {
        "id": 1000357
      },
      "writtenOn": "2020-08-03T08:33:29Z",
      "side": 1,
      "message": "sorry my bad used QTI_SDI_DEBUG instead of QTI_SDI_BUILD",
      "parentUuid": "6fd00a5f_0c9add86",
      "revId": "95e6faa4fa7bcae6e197c975693e2bd4c8339867",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    }
  ]
}