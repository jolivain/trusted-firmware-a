{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9e7a1ef3_d8804250",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2023-03-17T15:14:02Z",
      "side": 1,
      "message": "Hi,\n\nI think it\u0027s worthwhile to keep the number of build time options to the minimum. Since the S1 and S2 versions are never used in isolation, I would just use ENABLE_FEAT_SXPOE and ENABLE_FEAT_SXPIE.\nThe rest of the code looks find and builds, going to test it now.",
      "revId": "9747df615dd60ac4cd648d8be79da05842bfe038",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e08b8628_9100a934",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000686
      },
      "writtenOn": "2023-03-17T15:42:46Z",
      "side": 1,
      "message": "Are we *sure* there\u0027s no possibility that the S1 and S2 options might be done independently, even if we are not able to imagine the situation where this would be desirable? I note that the model provides independent runtime parameters for each of the features, the only dependency I can see is that POE depends on PIE.\n\nI do agree that this results in awfully fine grained control of the options but that does feel idiomatic for the code and as far as I can see the flexibility exists for S1 without S2.",
      "parentUuid": "9e7a1ef3_d8804250",
      "revId": "9747df615dd60ac4cd648d8be79da05842bfe038",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "834b661e_34c59afe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2023-03-17T17:07:45Z",
      "side": 1,
      "message": "Superficial test looked fine.",
      "revId": "9747df615dd60ac4cd648d8be79da05842bfe038",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d642b887_15c38692",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2023-03-17T17:07:45Z",
      "side": 1,
      "message": "Yeah, I am not sure either, it just feels a bit weird to have two controls when we only ever use the logical OR of them in the code. But I agree that the spec provides the fine grained control, and it\u0027s usually not wise to second guess the architecture.\nSo I am fine as well with leaving it like this. I guess people usually change the setting just in Makefiles, and not on the command line, so it shouldn\u0027t really matter.",
      "parentUuid": "e08b8628_9100a934",
      "revId": "9747df615dd60ac4cd648d8be79da05842bfe038",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2225e5d9_bc36e000",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2023-03-20T15:29:37Z",
      "side": 1,
      "message": "Tested with the new Linux patches: it boots with this patch, but traps early in the kernel without.",
      "revId": "9747df615dd60ac4cd648d8be79da05842bfe038",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3e5b87a_dbf66b8f",
        "filename": "docs/getting_started/build-options.rst",
        "patchSetId": 10
      },
      "lineNbr": 364,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-03-23T09:59:48Z",
      "side": 1,
      "message": "Suggest to enable these only for NS.\nSuffix build flags with *_FOR_NS. \n\nThe realm and Secure dispatchers would need to enable for their respective worlds.",
      "range": {
        "startLine": 364,
        "startChar": 5,
        "endLine": 364,
        "endChar": 22
      },
      "revId": "9747df615dd60ac4cd648d8be79da05842bfe038",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ba6407f_ebfc0e52",
        "filename": "docs/getting_started/build-options.rst",
        "patchSetId": 10
      },
      "lineNbr": 364,
      "author": {
        "id": 1000686
      },
      "writtenOn": "2023-03-23T11:21:29Z",
      "side": 1,
      "message": "Why would we not want to enable this for the realm or secure worlds - what\u0027s the downside to supporting it for them?\n\nNote also that this is a requirement for using GCS.",
      "parentUuid": "e3e5b87a_dbf66b8f",
      "range": {
        "startLine": 364,
        "startChar": 5,
        "endLine": 364,
        "endChar": 22
      },
      "revId": "9747df615dd60ac4cd648d8be79da05842bfe038",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1cb32e71_ff357542",
        "filename": "docs/getting_started/build-options.rst",
        "patchSetId": 10
      },
      "lineNbr": 364,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-03-23T12:41:01Z",
      "side": 1,
      "message": "If a feature is enabled at EL3, there is a chance that an unenlightened SPM or RMM could result in a Realm VM and Secure Partition having the features enabled. EL3 doesn\u0027t save and restore the EL1 Context and hence there could be implications for these features being enabled without the knowledge of the respective managers. \n\nFor this particular case, probably the relevant enables in HCR (or HCRX) may have safe default values which may prevent this scenario, but as a principle, the features need enlightening in the their manager counter-parts first before being enabled at EL3, so that the right actions can be taken at S-EL2/R-EL2 for these features. At a minimum, there needs to be analysis done to ensure that it is OK to enable them for these worlds from EL3.\n\nFrom a NS PoV, this improves the feature enablement timelines from EL3 as we just need to set the right bits for NS context and not worry about the changes needed for context mgmt.\n\nFor this patch, we can probably have these changes, but it needs some time for analysis from Secure and Realm world.\n\n\u003e Suggest to enable these only for NS.\n\u003e Suffix build flags with *_FOR_NS. \n\nIgnore this, keep the flag names as is done now. I had a chat with TF-A team and it may be better to change the meaning of the flag to say this means the feature is enabled for NS. For Secure and Realm , it is upto their manager and dispatcher entities to enable or not.",
      "parentUuid": "0ba6407f_ebfc0e52",
      "range": {
        "startLine": 364,
        "startChar": 5,
        "endLine": 364,
        "endChar": 22
      },
      "revId": "9747df615dd60ac4cd648d8be79da05842bfe038",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1d4852a_39ef4253",
        "filename": "docs/getting_started/build-options.rst",
        "patchSetId": 10
      },
      "lineNbr": 364,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-03-30T06:53:10Z",
      "side": 1,
      "message": "The value of 0 in relevant control regs in EL2 (TCR2_EL2, VTCR_EL2) means the feature is disabled and value of 0 in the new PIE/POE regs are No access.  The FGT control also trap if the bits are 0. So this is safe to be enabled from EL3 for Secure and realm.",
      "parentUuid": "1cb32e71_ff357542",
      "range": {
        "startLine": 364,
        "startChar": 5,
        "endLine": 364,
        "endChar": 22
      },
      "revId": "9747df615dd60ac4cd648d8be79da05842bfe038",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "456bd0cb_d21b0de7",
        "filename": "include/arch/aarch64/arch_features.h",
        "patchSetId": 10
      },
      "lineNbr": 188,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2023-03-17T15:14:02Z",
      "side": 1,
      "message": "What about we merge the two is_feat_*_supported() functions into one, and just use one build time option: ENABLE_FEAT_SXPOE? We keep the read_feat_*_id_field functions, and just ORR their result together here.",
      "revId": "9747df615dd60ac4cd648d8be79da05842bfe038",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3c257d6_c24704c8",
        "filename": "include/arch/aarch64/arch_features.h",
        "patchSetId": 10
      },
      "lineNbr": 188,
      "author": {
        "id": 1000686
      },
      "writtenOn": "2023-03-17T15:42:46Z",
      "side": 1,
      "message": "It seemed better to follow the idiomatic pattern and then add additional functions pulling things together, especially given that the feature check stuff can be configured for a boot time assert on each feature.",
      "parentUuid": "456bd0cb_d21b0de7",
      "revId": "9747df615dd60ac4cd648d8be79da05842bfe038",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43b631f0_1de34ac4",
        "filename": "include/arch/aarch64/arch_features.h",
        "patchSetId": 10
      },
      "lineNbr": 229,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2023-03-17T15:14:02Z",
      "side": 1,
      "message": "Same as above.",
      "revId": "9747df615dd60ac4cd648d8be79da05842bfe038",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f86289a_9d32ccb1",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 10
      },
      "lineNbr": 362,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-03-30T06:53:10Z",
      "side": 1,
      "message": "Not sure this is needed as these features are present on hardware which support AArch64 only I think .",
      "range": {
        "startLine": 362,
        "startChar": 4,
        "endLine": 362,
        "endChar": 37
      },
      "revId": "9747df615dd60ac4cd648d8be79da05842bfe038",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b96685d0_a1a1c05d",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 10
      },
      "lineNbr": 365,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-03-23T09:59:48Z",
      "side": 1,
      "message": "Perhaps restrict this to NS for now. For Realm and Secure, the relevant dispatchers can enable.",
      "range": {
        "startLine": 361,
        "startChar": 0,
        "endLine": 365,
        "endChar": 0
      },
      "revId": "9747df615dd60ac4cd648d8be79da05842bfe038",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16dd6d0d_b8ecbdf3",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 10
      },
      "lineNbr": 365,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-03-30T06:53:10Z",
      "side": 1,
      "message": "ignore this.",
      "parentUuid": "b96685d0_a1a1c05d",
      "range": {
        "startLine": 361,
        "startChar": 0,
        "endLine": 365,
        "endChar": 0
      },
      "revId": "9747df615dd60ac4cd648d8be79da05842bfe038",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5af9e8c_b99cef08",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 10
      },
      "lineNbr": 908,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-03-30T06:53:10Z",
      "side": 1,
      "message": "S2PIR_EL2 need to be being saved and restored as well ?",
      "revId": "9747df615dd60ac4cd648d8be79da05842bfe038",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9fbf9ff8_2f538e35",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 10
      },
      "lineNbr": 912,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-03-23T09:59:48Z",
      "side": 1,
      "message": "This can be added once Secure or Realm dispatchers enables it for their respective worlds.",
      "range": {
        "startLine": 906,
        "startChar": 0,
        "endLine": 912,
        "endChar": 3
      },
      "revId": "9747df615dd60ac4cd648d8be79da05842bfe038",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9839cab4_ed4cd0e5",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 10
      },
      "lineNbr": 912,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-03-30T06:53:10Z",
      "side": 1,
      "message": "after checking the reg spec, it seems the defaults for the traps are 0 so, it should be alright for El3 to save ans restore for Secure and realm without RMM and SPM knowing about this.",
      "parentUuid": "9fbf9ff8_2f538e35",
      "range": {
        "startLine": 906,
        "startChar": 0,
        "endLine": 912,
        "endChar": 3
      },
      "revId": "9747df615dd60ac4cd648d8be79da05842bfe038",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f698a230_7af952fe",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 10
      },
      "lineNbr": 978,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-03-30T06:53:10Z",
      "side": 1,
      "message": "S2PIR_EL2 can be restored as well.",
      "revId": "9747df615dd60ac4cd648d8be79da05842bfe038",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}