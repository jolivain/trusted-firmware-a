{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e653ba0d_e53fbe37",
        "filename": "include/arch/aarch64/arch.h",
        "patchSetId": 1
      },
      "lineNbr": 1044,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2023-06-15T11:35:29Z",
      "side": 0,
      "message": "Boyan said this might have been done on purpose because top bits are RES0.",
      "range": {
        "startLine": 1044,
        "startChar": 26,
        "endLine": 1044,
        "endChar": 34
      },
      "revId": "c161772f40b8dd9ad184e7bfa9f9fb371873fefd",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "910e73f4_276c9ba8",
        "filename": "include/arch/aarch64/arch.h",
        "patchSetId": 1
      },
      "lineNbr": 1044,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-06-15T12:20:45Z",
      "side": 0,
      "message": "Yes, I believe the spec prescribes this value to be written on init so we do need it. And then it doesn\u0027t really hurt to use it as a mask since it\u0027s res0 which gives a bit of future proofing",
      "parentUuid": "e653ba0d_e53fbe37",
      "range": {
        "startLine": 1044,
        "startChar": 26,
        "endLine": 1044,
        "endChar": 34
      },
      "revId": "c161772f40b8dd9ad184e7bfa9f9fb371873fefd",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9b981ab_0283c237",
        "filename": "include/arch/aarch64/arch.h",
        "patchSetId": 1
      },
      "lineNbr": 1044,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2024-01-19T18:07:31Z",
      "side": 0,
      "message": "not sure if these comments has been resolved or not but bits 4-8 are RAZ/WI, so don\u0027t understand why we need 0x1f (why was it intentional?). I think the change in this patch are correct and should merge it ? no?",
      "parentUuid": "910e73f4_276c9ba8",
      "range": {
        "startLine": 1044,
        "startChar": 26,
        "endLine": 1044,
        "endChar": 34
      },
      "revId": "c161772f40b8dd9ad184e7bfa9f9fb371873fefd",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a47ce171_b6d97d9d",
        "filename": "include/arch/aarch64/arch.h",
        "patchSetId": 1
      },
      "lineNbr": 1044,
      "author": {
        "id": 1000341
      },
      "writtenOn": "2024-01-23T14:45:13Z",
      "side": 0,
      "message": "Section C2.1.3 of the SME specification mentions the flag 0x1ff as the one to be used by the software to discover the Effective Vector Length in the given EL.\n\nThe specification of the SMCR_ELx state bits [8:4] is reserved.\nThe expectation is that those registers are to be used by the architecture on future updates to the VL size. As such, this mask is useful in case the architecture is to be updated to bigger VLs, and the software is only capable of handling (e.g. context save and restore) of a smaller size.\n\nSo this could be kept unchanged if the value is used according to what is mentioned in the referred section.",
      "parentUuid": "c9b981ab_0283c237",
      "range": {
        "startLine": 1044,
        "startChar": 26,
        "endLine": 1044,
        "endChar": 34
      },
      "revId": "c161772f40b8dd9ad184e7bfa9f9fb371873fefd",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}