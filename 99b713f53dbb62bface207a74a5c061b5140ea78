{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6213eacc_bdf8a258",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 16
      },
      "lineNbr": 0,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2024-01-10T11:13:04Z",
      "side": 1,
      "message": "When searching for CROSS_COMP√èLE, I see that it\u0027s still in use in lib/romlib/Makefile, tools/renesas/rcar_layout_create/makefile \u0026 tools/renesas/rzg_layout_create/makefile. Should those files be updated as well?",
      "revId": "99b713f53dbb62bface207a74a5c061b5140ea78",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4aef0b5_93a80d97",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 16
      },
      "lineNbr": 0,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2024-01-10T12:21:17Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "6213eacc_bdf8a258",
      "revId": "99b713f53dbb62bface207a74a5c061b5140ea78",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ffa206f_cfddc24c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 16
      },
      "lineNbr": 0,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2024-01-10T13:37:07Z",
      "side": 1,
      "message": "Hmm... these two are a bit weird because they use the AArch64 toolchain from the tools directly. There\u0027s also another unique case in the Rockchip platforms where it needs a Cortex-M toolchain, which I\u0027ll also need to consider. Let me come back to this one.",
      "parentUuid": "b4aef0b5_93a80d97",
      "revId": "99b713f53dbb62bface207a74a5c061b5140ea78",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a7a5fb7_0a4b61fb",
        "filename": "make_helpers/toolchain-tools.mk",
        "patchSetId": 16
      },
      "lineNbr": 19,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2024-01-10T12:21:20Z",
      "side": 1,
      "message": "Where are the `HOSTXX` variables defined? If they come from environment variables, what happens if the environment variable is not defined?",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 19,
        "endChar": 22
      },
      "revId": "99b713f53dbb62bface207a74a5c061b5140ea78",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "712ab277_3c0f1bef",
        "filename": "make_helpers/toolchain-tools.mk",
        "patchSetId": 16
      },
      "lineNbr": 19,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2024-01-10T12:46:39Z",
      "side": 1,
      "message": "These can be either environment variables (e.g. `HOSTCC\u003dclang make`) or variables specified on the command line (`make HOSTCC\u003dclang`).\n\nIf a value is undefined then it expands to nothing, and the condition found here is executed: https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/24921/16/make_helpers/toolchain.mk#253",
      "parentUuid": "9a7a5fb7_0a4b61fb",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 19,
        "endChar": 22
      },
      "revId": "99b713f53dbb62bface207a74a5c061b5140ea78",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2383e34b_135b2477",
        "filename": "make_helpers/toolchain.mk",
        "patchSetId": 16
      },
      "lineNbr": 82,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2024-01-10T12:21:20Z",
      "side": 1,
      "message": "It may be worth considering support for the `mold` linker too (https://github.com/rui314/mold). It is compatible with `lld`/`ld` but several times faster",
      "range": {
        "startLine": 82,
        "startChar": 0,
        "endLine": 82,
        "endChar": 2
      },
      "revId": "99b713f53dbb62bface207a74a5c061b5140ea78",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b8b3aa02_a099a328",
        "filename": "make_helpers/toolchain.mk",
        "patchSetId": 16
      },
      "lineNbr": 82,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2024-01-10T12:46:39Z",
      "side": 1,
      "message": "I\u0027ve explicitly kept these changes to refactoring only (no new feature support), but I\u0027ll keep that in mind. Are there any obvious incompatibilities with LLD? e.g. linker script format",
      "parentUuid": "2383e34b_135b2477",
      "range": {
        "startLine": 82,
        "startChar": 0,
        "endLine": 82,
        "endChar": 2
      },
      "revId": "99b713f53dbb62bface207a74a5c061b5140ea78",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}