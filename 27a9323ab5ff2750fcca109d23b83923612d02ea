{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1460efd3_cf49c8cb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 11
      },
      "lineNbr": 12,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-11-11T11:56:46Z",
      "side": 1,
      "message": "Add reasoning for disabling Secure world with SME is used.",
      "revId": "27a9323ab5ff2750fcca109d23b83923612d02ea",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a560cad_5529f7ba",
        "filename": "Makefile",
        "patchSetId": 11
      },
      "lineNbr": 781,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-11-11T11:56:46Z",
      "side": 1,
      "message": "minor : It might be better to inverse the checks\n\nifeq (${ENABLE_SME_FOR_NS},1)\n  //check for SPD , SPM_MM and other invalid options.\nendif",
      "revId": "27a9323ab5ff2750fcca109d23b83923612d02ea",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d9997603_02048e5c",
        "filename": "include/arch/aarch64/arch.h",
        "patchSetId": 11
      },
      "lineNbr": 945,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-11-11T11:56:46Z",
      "side": 1,
      "message": "nit: do we need all these defines here for EL3 ?",
      "revId": "27a9323ab5ff2750fcca109d23b83923612d02ea",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c767a5c6_01766eff",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 11
      },
      "lineNbr": 409,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-11-11T11:56:46Z",
      "side": 1,
      "message": "I think separating the SVE capability for NS and Swd is a problem in hindsight.\n\nWe really cannot enable SVE just for NS without affect Swd. We could initialize the Secure ctx to a safe init value and let the dispatcher unset the required traps as required.\n\nThis is a similar case for SME.\n\nGiven where we are , \n\n#if ENABLE_SVE_FOR_NS\n #if ENABLE_SVE_FOR_SWD\n      disable_fp_and_sve_trap_for_secure\n #else\n      enable_fp_and_sve_trap_for_secure\n #endif\n#endif\n\nExtending the logic to SME:\n\n#if ENABLE_SME_FOR_NS\n #if ENABLE_SME_FOR_SWD\n     disable_fp_sve_sme_trap_for_secure\n #else\n     enable_fp_sve_sme_trap_for_secure\n #endif\n#else if ENABLE_SVE_FOR_NS\n #if ENABLE_SVE_FOR_SWD\n      disable_fp_and_sve_trap_for_secure\n #else\n      enable_fp_and_sve_trap_for_secure\n #endif\n#endif\n\nThis means we dont need to restrict the build for SPD if the SPD can have the required support. Since SPM doesn\u0027t support SME yet, its build should detect this config and error out. (Even if this is not done, it will crash at runtime, but not result in silent corruption).\n\nHope that makes sense.",
      "range": {
        "startLine": 409,
        "startChar": 12,
        "endLine": 409,
        "endChar": 36
      },
      "revId": "27a9323ab5ff2750fcca109d23b83923612d02ea",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2f999d4_9e5ae36b",
        "filename": "make_helpers/defaults.mk",
        "patchSetId": 11
      },
      "lineNbr": 334,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-11-11T11:56:46Z",
      "side": 1,
      "message": "Would prefer an error out of build if this is set to 1 rather than an override in the error handling part of Makefile.",
      "range": {
        "startLine": 334,
        "startChar": 1,
        "endLine": 334,
        "endChar": 33
      },
      "revId": "27a9323ab5ff2750fcca109d23b83923612d02ea",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}