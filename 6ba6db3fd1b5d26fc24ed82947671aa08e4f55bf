{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e0535156_e6a4c06e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1000438
      },
      "writtenOn": "2021-08-16T12:20:29Z",
      "side": 1,
      "message": "Do you mean to say here that in this patch we are moving StMM specific partition setup under spm_mm module from the generic sp setup function.? If yes can we rephrase it accordingly.?",
      "revId": "6ba6db3fd1b5d26fc24ed82947671aa08e4f55bf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7eb56aa2_e3ca0b48",
        "filename": "services/std_svc/spm/spm_mm/spm_mm_main.c",
        "patchSetId": 1
      },
      "lineNbr": 145,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2021-08-02T16:58:06Z",
      "side": 1,
      "message": "Can we use this with DYNAMIC_XLAT_TABLES? Platforms might enable the MMU before this function entry.",
      "range": {
        "startLine": 141,
        "startChar": 1,
        "endLine": 145,
        "endChar": 45
      },
      "revId": "6ba6db3fd1b5d26fc24ed82947671aa08e4f55bf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "40aee236_dca69766",
        "filename": "services/std_svc/spm/spm_mm/spm_mm_main.c",
        "patchSetId": 1
      },
      "lineNbr": 145,
      "author": {
        "id": 1000409
      },
      "writtenOn": "2021-08-05T10:10:11Z",
      "side": 1,
      "message": "Yes, this functionality works with DYNAMIC_XLAT_TABLES. MMU is disabled at the start of this function, using disable_mmu_icache_el1().\n\nBtw, this patch is to reorganize the spm-mm code, kept only the SP context preparation logic as part of common code(can be used by both SPMC and SPM-MM), otherwise there is no extra addition in this patch.",
      "parentUuid": "7eb56aa2_e3ca0b48",
      "range": {
        "startLine": 141,
        "startChar": 1,
        "endLine": 145,
        "endChar": 45
      },
      "revId": "6ba6db3fd1b5d26fc24ed82947671aa08e4f55bf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db4175fe_a3cd710f",
        "filename": "services/std_svc/spm/spm_mm/spm_mm_main.c",
        "patchSetId": 1
      },
      "lineNbr": 178,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2021-08-02T16:58:06Z",
      "side": 1,
      "message": "sp_mp_info?",
      "range": {
        "startLine": 178,
        "startChar": 1,
        "endLine": 178,
        "endChar": 47
      },
      "revId": "6ba6db3fd1b5d26fc24ed82947671aa08e4f55bf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c841b15_05c1b4d2",
        "filename": "services/std_svc/spm/spm_mm/spm_mm_main.c",
        "patchSetId": 1
      },
      "lineNbr": 178,
      "author": {
        "id": 1000409
      },
      "writtenOn": "2021-08-05T10:10:11Z",
      "side": 1,
      "message": "This is fine. shared_buf_ptr is of spm_boot_info_t, which has a member of type spm_mp_info_t.",
      "parentUuid": "db4175fe_a3cd710f",
      "range": {
        "startLine": 178,
        "startChar": 1,
        "endLine": 178,
        "endChar": 47
      },
      "revId": "6ba6db3fd1b5d26fc24ed82947671aa08e4f55bf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc614472_2c32faf2",
        "filename": "services/std_svc/spm/spm_mm/spm_mm_main.c",
        "patchSetId": 1
      },
      "lineNbr": 196,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2021-08-02T16:58:06Z",
      "side": 1,
      "message": "Should we check for address wrap around first?",
      "range": {
        "startLine": 195,
        "startChar": 12,
        "endLine": 196,
        "endChar": 56
      },
      "revId": "6ba6db3fd1b5d26fc24ed82947671aa08e4f55bf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1e4ed18_776d1ad6",
        "filename": "services/std_svc/spm/spm_mm/spm_mm_main.c",
        "patchSetId": 1
      },
      "lineNbr": 196,
      "author": {
        "id": 1000409
      },
      "writtenOn": "2021-08-05T10:10:11Z",
      "side": 1,
      "message": "This should be fine. First, shared_buf_ptr position is updated to the position where MP information will be populated, then the check is performed whether there is enough space in shared_buf to copy sp_mp_info for all CPUs.\n\nAgain there is no addition or change in code, it\u0027s just reorganized.",
      "parentUuid": "cc614472_2c32faf2",
      "range": {
        "startLine": 195,
        "startChar": 12,
        "endLine": 196,
        "endChar": 56
      },
      "revId": "6ba6db3fd1b5d26fc24ed82947671aa08e4f55bf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}