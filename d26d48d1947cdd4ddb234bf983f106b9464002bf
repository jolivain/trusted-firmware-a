{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "25fd8038_339c4e1a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 22
      },
      "lineNbr": 31,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-06-27T08:54:30Z",
      "side": 1,
      "message": "this seems problematic. We should set EEL2 as default for all the contexts.",
      "range": {
        "startLine": 30,
        "startChar": 37,
        "endLine": 31,
        "endChar": 48
      },
      "revId": "d26d48d1947cdd4ddb234bf983f106b9464002bf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53b9b762_00b9c670",
        "filename": "/COMMIT_MSG",
        "patchSetId": 22
      },
      "lineNbr": 31,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-06-27T12:31:59Z",
      "side": 1,
      "message": "okay but why? EEL2 is currently *not* set for all contexts, so does this patch need to change this?\n\nEEL2 only matters for Secure world as far as I can tell. It enables SEL2 and allows access to ICC_SRE_EL2 when SCR_EL3.NS\u003d0. When SCR_EL3.NS\u003d1 it has absolutely no effect - so it doesn\u0027t matter whether it\u0027s set for the NS/R EL2. And I put guards around the problematic parts (like ICC_SRE_EL2) to make sure it doesn\u0027t matter.",
      "parentUuid": "25fd8038_339c4e1a",
      "range": {
        "startLine": 30,
        "startChar": 37,
        "endLine": 31,
        "endChar": 48
      },
      "revId": "d26d48d1947cdd4ddb234bf983f106b9464002bf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "41b41482_380a683d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 22
      },
      "lineNbr": 31,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-09-22T13:47:10Z",
      "side": 1,
      "message": "discussed offline, will keep it as-is and introduce in a different patch",
      "parentUuid": "53b9b762_00b9c670",
      "range": {
        "startLine": 30,
        "startChar": 37,
        "endLine": 31,
        "endChar": 48
      },
      "revId": "d26d48d1947cdd4ddb234bf983f106b9464002bf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c409b81a_82adf8a0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 22
      },
      "lineNbr": 31,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2023-09-27T14:49:44Z",
      "side": 1,
      "message": "I think this has unintended effects for the case of BL2 running at S-EL1.\nS-EL2 traps might happen while BL2 executes and end up in a crash because S-EL2 is empty (or no VBAR_EL2 set).\nExample of CNTPCT_EL0 accessed from SEL1 traps when CNTHCTL_EL2.EL1PCTEN as default. BL2 accesses the EL1 physical counter.",
      "parentUuid": "41b41482_380a683d",
      "range": {
        "startLine": 30,
        "startChar": 37,
        "endLine": 31,
        "endChar": 48
      },
      "revId": "d26d48d1947cdd4ddb234bf983f106b9464002bf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a26ef52d_a38997c2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 22
      },
      "lineNbr": 31,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-09-29T10:52:55Z",
      "side": 1,
      "message": "This is curious as we currently run with both configurations. Any config without RME support will be set my way (only secure world gets EEL2) and anything with RME will be set Soby\u0027s way (everyone gets EEL2). Both seem to be working fine. I think my way caters for the case you\u0027re pointing out, but Soby pointed out that other pieces of hardware far from the CPU might get confused if we routinely toggle EEL2. I\u0027m not sure what the answer is here...",
      "parentUuid": "c409b81a_82adf8a0",
      "range": {
        "startLine": 30,
        "startChar": 37,
        "endLine": 31,
        "endChar": 48
      },
      "revId": "d26d48d1947cdd4ddb234bf983f106b9464002bf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "887a8577_51dc653b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 22
      },
      "lineNbr": 31,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2023-09-29T11:37:00Z",
      "side": 1,
      "message": "I\u0027m fine with the general idea of enabling EEL2 once in all contexts for the run-time and avoid flipping the bit on world switch.\nBut I sense there are cases where we should avoid it e.g. boot time for BL2 (or other S-EL1 payloads) and perhaps configurations like the SPM-MM and EL3 SPMC. For the latter, it may happen to run on SEL2-enabled hardware (through not provisioned by an image).\n\u003e This is curious as we currently run with both configurations. \nWhat I can say at least is that this is most probably the reason for the test failures:\nhttps://ci.trustedfirmware.org/job/tf-a-ci-gateway/49217/\nhttps://ci.trustedfirmware.org/job/tf-a-ci-gateway/49205/",
      "parentUuid": "a26ef52d_a38997c2",
      "range": {
        "startLine": 30,
        "startChar": 37,
        "endLine": 31,
        "endChar": 48
      },
      "revId": "d26d48d1947cdd4ddb234bf983f106b9464002bf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03bde714_334b820c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 22
      },
      "lineNbr": 31,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2023-09-29T17:29:42Z",
      "side": 1,
      "message": "A bit more of what\u0027s going on:\nCurrent change fails with SEL2 enabled tests as SCR_EL3.EEL2 is clear and first ICC_SRE_EL2 write generates an exception.\n\nFrom next change SCR_EL3.EEL2 is set in any context when SPMD_SPM_AT_SEL2 is set. What happens is as follows:\n\nBL1 calls bl1_prepare_next_image (non-RME) \u003d\u003e cm_init_my_context \u003d\u003e cm_setup_context \u003d\u003e setup_context_common \u003d\u003e sets SCR_EL2.EEL2 for BL2 SEL1 context\n\nBL2 is started, bl2_entrypoint \u003d\u003e pauth_init_enable_el1 \u003d\u003e plat_init_apkey\naccesses cntpct_el0 \u003d\u003e traps to S-EL2 as explained above.",
      "parentUuid": "887a8577_51dc653b",
      "range": {
        "startLine": 30,
        "startChar": 37,
        "endLine": 31,
        "endChar": 48
      },
      "revId": "d26d48d1947cdd4ddb234bf983f106b9464002bf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1229b9cb_afac400f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 22
      },
      "lineNbr": 31,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-10-02T14:41:30Z",
      "side": 1,
      "message": "First failure is expected as we\u0027re testing to find out if that workaround is still needed. I think it very much is.\n\nSecond failure was completely unexpected. For whatever reason (6c09af9f8 says security) BL2 runs at EL3 when RME is enabled, meaning what I said before is incorrect - we don\u0027t really run the EEL2\u003d1 everywhere configuration properly. It runs at EL3 up until RME/Hafnium at which point they handle EL2 properly. So me thinking BL2 can handle this was incorrect...\n\nThere are a 3 cases:\na) toggling EEL2 matters only for RME enabled hardware\nb) toggling EEL2 matters for all configurations\n3) toggling EEL2 doesn\u0027t matter\n\nFor a) we do this properly in context management (not in el3_common_macros!) and document it in detail, RME only of course.\nIf b) is the case, then this is a major bug that needs fixing. We are not in a position to address it with this series as it will require bigger reworks of context management or configurations that leave any EL2 empty.\nc) is a NOP.\n\nIn all 3 cases, this patch doesn\u0027t change that much. The above patch does not address any of the 3 cases so I don\u0027t think it\u0027s useful in its current form. Maybe it could be worked to solve a), but Soby will have to give input.",
      "parentUuid": "03bde714_334b820c",
      "range": {
        "startLine": 30,
        "startChar": 37,
        "endLine": 31,
        "endChar": 48
      },
      "revId": "d26d48d1947cdd4ddb234bf983f106b9464002bf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a726f13_e0503339",
        "filename": "/COMMIT_MSG",
        "patchSetId": 22
      },
      "lineNbr": 31,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2023-10-02T15:25:00Z",
      "side": 1,
      "message": "I think this works as long as BL2 doesn\u0027t set SCR_EL3.EEL2 when it\u0027s run from S-EL1.\n\nWould it be easier to restrict setting EEL2 to BL31 when it starts, and set for the lower EL contexts it manages e.g. this https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/23461/17/include/arch/aarch64/el3_common_macros.S#188\nis replaced by \n        mov_imm x1, (SCR_EA_BIT | SCR_NS_BIT)\n #ifdef IMAGE_BL31\n        orr     x1, x1, #SCR_EEL2_BIT\n #endif\n\nand in setup_context_common\nhttps://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/23491/5/lib/el3_runtime/aarch64/context_mgmt.c#471\n\nby \n\n #ifdef IMAGE_BL31\n\t/* Enable S-EL2 for all the contexts if FEAT_SEL2 is implemented. */\n\tif (is_feat_sel2_supported()) {\n\t\tscr_el3 |\u003d SCR_EEL2_BIT;\n\t}\n #endif",
      "parentUuid": "1229b9cb_afac400f",
      "range": {
        "startLine": 30,
        "startChar": 37,
        "endLine": 31,
        "endChar": 48
      },
      "revId": "d26d48d1947cdd4ddb234bf983f106b9464002bf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ffb884e_1354a207",
        "filename": "/COMMIT_MSG",
        "patchSetId": 22
      },
      "lineNbr": 31,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-10-02T15:36:46Z",
      "side": 1,
      "message": "I suppose if we only expect BL2 to run with SEL2 empty, then yes it will probably work. Are there no other configurations where BL31 might start something at SEL1 (with FEAT_SEL2 implemented) directly?",
      "parentUuid": "4a726f13_e0503339",
      "range": {
        "startLine": 30,
        "startChar": 37,
        "endLine": 31,
        "endChar": 48
      },
      "revId": "d26d48d1947cdd4ddb234bf983f106b9464002bf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a78159a8_6a24f8be",
        "filename": "/COMMIT_MSG",
        "patchSetId": 22
      },
      "lineNbr": 31,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2023-10-02T15:47:08Z",
      "side": 1,
      "message": "\u003e Are there no other configurations where BL31 might start something at SEL1 (with FEAT_SEL2 implemented) directly?\n\nThe EL3 SPMC runs S-EL1 payloads where S-EL2 if implemented is empty.\nSimilary for SPM-MM running S-EL0 payloads.\n\nso yes the conditional above might better be like\n #if IMAGE_BL31 \u0026\u0026 defined(SPD_spmd) \u0026\u0026 SPMD_SPM_AT_SEL2\n        orr     x1, x1, #SCR_EEL2_BIT\n #endif",
      "parentUuid": "7ffb884e_1354a207",
      "range": {
        "startLine": 30,
        "startChar": 37,
        "endLine": 31,
        "endChar": 48
      },
      "revId": "d26d48d1947cdd4ddb234bf983f106b9464002bf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee1a599e_6b25ff71",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 22
      },
      "lineNbr": 1060,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-06-27T08:54:30Z",
      "side": 1,
      "message": "This seems problematic. scr_el3 should have the EEL2 and NS/S bit set early to avoid this issue.",
      "revId": "d26d48d1947cdd4ddb234bf983f106b9464002bf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d2baa3e_7773ea37",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 22
      },
      "lineNbr": 1060,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-06-27T12:31:59Z",
      "side": 1,
      "message": "why is this problematic? As things stand, EEL2/NS bits are not set as you describe. Setting the NS bit would be a piece of root context, which is the entire point of this patch - preparation for it. Once we get to it, we should be able to factor this setting into it and remove it from here.",
      "parentUuid": "ee1a599e_6b25ff71",
      "revId": "d26d48d1947cdd4ddb234bf983f106b9464002bf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa09832b_6f3e99d7",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 22
      },
      "lineNbr": 1060,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-06-27T14:47:35Z",
      "side": 1,
      "message": "In the ENABLE_RME is set, all the contexts will have EEL2 bit set. The sequence for scr programming is a read-modify-write so all the values set at reset will persist. I think EEL2 is a system wide setting that should not be modified at runtime. It may have various IP impacts outside CPU as well so not favour of programming it only for secure.",
      "parentUuid": "3d2baa3e_7773ea37",
      "revId": "d26d48d1947cdd4ddb234bf983f106b9464002bf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a647f67_0c810f00",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 22
      },
      "lineNbr": 1060,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-06-27T16:08:52Z",
      "side": 1,
      "message": "Can you point me to any information on this? Why is RME so special? Why will it have \"IP impacts outside CPU\"? I would like to consider these.\n\n\u003e The sequence for scr programming is a read-modify-write so all the values set at reset will persist\n\nThis is the part which this patch changes. I want to disentangle this, as with all other registers I\u0027ve touched in this series.",
      "parentUuid": "aa09832b_6f3e99d7",
      "revId": "d26d48d1947cdd4ddb234bf983f106b9464002bf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0c972ee3_4b06d58c",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 22
      },
      "lineNbr": 1060,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-09-22T13:47:10Z",
      "side": 1,
      "message": "discussed offline, will keep it as-is and introduce in a different patch",
      "parentUuid": "7a647f67_0c810f00",
      "revId": "d26d48d1947cdd4ddb234bf983f106b9464002bf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}