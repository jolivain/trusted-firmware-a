{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d92c4d80_71b5fafe",
        "filename": "bl31/aarch64/runtime_exceptions.S",
        "patchSetId": 2
      },
      "lineNbr": 510,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-09-02T15:32:16Z",
      "side": 1,
      "message": "If this shift is adjusted such that it will match 0x21 for SMC_FROM_REALM , then the suggested soln should I think.",
      "range": {
        "startLine": 510,
        "startChar": 14,
        "endLine": 510,
        "endChar": 15
      },
      "revId": "2f9167c1798d4c935f86ef1c26095bb45fce04d5",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ae710acf_70617899",
        "filename": "bl31/aarch64/runtime_exceptions.S",
        "patchSetId": 2
      },
      "lineNbr": 510,
      "author": {
        "id": 1000219
      },
      "writtenOn": "2021-09-08T17:10:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d92c4d80_71b5fafe",
      "range": {
        "startLine": 510,
        "startChar": 14,
        "endLine": 510,
        "endChar": 15
      },
      "revId": "2f9167c1798d4c935f86ef1c26095bb45fce04d5",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "652e107a_63842a58",
        "filename": "include/common/ep_info.h",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-09-02T15:28:44Z",
      "side": 1,
      "message": "I am wondering if we can reduce the complexity as there are various values \n\nAssuming we define it like below :\n\n#define REALM EP_REALM /* 0x21 */\n\n#define EP_SECURITY_MASK 0x21\n\nThen we dont need to modify the GET_SECURITY_STATE and SET_SECURITY_STATE macros. This will also be easier to read.",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 43
      },
      "revId": "2f9167c1798d4c935f86ef1c26095bb45fce04d5",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3e3007d3_ec9a16ff",
        "filename": "include/common/ep_info.h",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1000219
      },
      "writtenOn": "2021-09-08T17:10:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "652e107a_63842a58",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 43
      },
      "revId": "2f9167c1798d4c935f86ef1c26095bb45fce04d5",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24c47f9f_3ec119ed",
        "filename": "include/export/common/ep_info_exp.h",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-09-02T15:28:44Z",
      "side": 1,
      "message": "How about making this 0x21 ? \n\nThis means that we could have same values for EP_REALM , REALM and SMC_FROM_REALM. This would simplify understanding.",
      "range": {
        "startLine": 32,
        "startChar": 18,
        "endLine": 32,
        "endChar": 26
      },
      "revId": "2f9167c1798d4c935f86ef1c26095bb45fce04d5",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4712360f_c7bc0fae",
        "filename": "include/export/common/ep_info_exp.h",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1000219
      },
      "writtenOn": "2021-09-08T17:10:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "24c47f9f_3ec119ed",
      "range": {
        "startLine": 32,
        "startChar": 18,
        "endLine": 32,
        "endChar": 26
      },
      "revId": "2f9167c1798d4c935f86ef1c26095bb45fce04d5",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18f11546_2b8f505b",
        "filename": "include/export/common/ep_info_exp.h",
        "patchSetId": 2
      },
      "lineNbr": 67,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-09-02T15:28:44Z",
      "side": 1,
      "message": "WE may not need this shift. See comments related to this.",
      "revId": "2f9167c1798d4c935f86ef1c26095bb45fce04d5",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "47efef89_b423c408",
        "filename": "include/export/common/ep_info_exp.h",
        "patchSetId": 2
      },
      "lineNbr": 67,
      "author": {
        "id": 1000219
      },
      "writtenOn": "2021-09-08T17:10:47Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "18f11546_2b8f505b",
      "revId": "2f9167c1798d4c935f86ef1c26095bb45fce04d5",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d9f0e01_b65ab723",
        "filename": "include/export/common/ep_info_exp.h",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2021-08-25T12:57:28Z",
      "side": 1,
      "message": "Changes look good.\nJust curious to know, is there any issue in defining EP_REALM_MASK to 0x2 (next after EP_NON_SECURE(0x1)) and EP_REALM_SHIFT to 0x1, and then shift the rest of the defines accordingly(I am not sure complexity of doing this)?\nIt looks good if security state defines (secure, non-secure, and realm) placed after each other from code readability PoV.",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 68,
        "endChar": 0
      },
      "revId": "2f9167c1798d4c935f86ef1c26095bb45fce04d5",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb6f472f_72d24e58",
        "filename": "include/export/common/ep_info_exp.h",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-09-02T14:33:32Z",
      "side": 1,
      "message": "Yes, that would have been the ideal scenario. Making the realm state 0x2 would mean shifting all the EP_* to make space for this bit. This has compatibility issues since ep_info is critical in handover from one BL stage to another and this would be a major compatibility break which requires TF to increment the major number. \n\nHence the decision to keep the compatibility and tradeoff readability a bit.",
      "parentUuid": "1d9f0e01_b65ab723",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 68,
        "endChar": 0
      },
      "revId": "2f9167c1798d4c935f86ef1c26095bb45fce04d5",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "76121ee5_a530251a",
        "filename": "include/export/common/ep_info_exp.h",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2021-09-03T12:02:49Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "eb6f472f_72d24e58",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 68,
        "endChar": 0
      },
      "revId": "2f9167c1798d4c935f86ef1c26095bb45fce04d5",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23f5c2c0_16928830",
        "filename": "include/lib/smccc.h",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-09-02T15:28:44Z",
      "side": 1,
      "message": "Perhaps this can be defined as (0x21). See related comments\n\nThis means the mask becomes same as EP_SECURITY_MASK",
      "range": {
        "startLine": 114,
        "startChar": 25,
        "endLine": 114,
        "endChar": 34
      },
      "revId": "2f9167c1798d4c935f86ef1c26095bb45fce04d5",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "952f8f88_f97d07d6",
        "filename": "include/lib/smccc.h",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 1000219
      },
      "writtenOn": "2021-09-08T17:10:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "23f5c2c0_16928830",
      "range": {
        "startLine": 114,
        "startChar": 25,
        "endLine": 114,
        "endChar": 34
      },
      "revId": "2f9167c1798d4c935f86ef1c26095bb45fce04d5",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}