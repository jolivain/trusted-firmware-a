{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "dd43f791_9ebfbe34",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000744
      },
      "writtenOn": "2024-01-25T15:01:50Z",
      "side": 1,
      "message": "Hi Jacky,\n\nThere are some real CI failures reported, which relate to the visibilty of the handler scmi_msg_get_sensor on STM32MP1.\n\n13:48:15 /home/buildslave/workspace/tf-a-builder/trusted-firmware-a/drivers/scmi-msg/entry.c:79: undefined reference to `scmi_msg_get_sensor_handler\u0027\n13:48:15 make: *** [Makefile:1563: /home/buildslave/workspace/tf-a-builder/trusted-firmware-a/build/stm32mp1/debug/bl32/bl32.elf] Error 1\n13:48:15 rm /home/buildslave/workspace/tf-a-builder/trusted-firmware-a/build/stm32mp1/debug/tf-a-stm32mp157c-ev1.bin /home/buildslave/workspace/tf-a-builder/trusted-firmware-a/build/stm32mp1/debug/stm32mp1-stm32mp157c-ev1.o /home/buildslave/workspace/tf-a-builder/trusted-firmware-a/build/stm32mp1/debug/tf-a-stm32mp157c-ev1.elf\n\nFor the other handlers called in entry.c, I can see we have weak implementations defined. This might be the simplest solution, although, we are trying to move away from the usage of weak symbols in TF-A. Yann, how would you suggest handling this?",
      "revId": "def1aeffda8fab270efea85d363cbcc35f690ab6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "92443274_213b0bd0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2024-01-25T17:14:12Z",
      "side": 1,
      "message": "Hi Harrison,\nI agree the simplest solution would be the weak function, especially as we do not intend to support this sensor protocol on STM32MP1. But as you said we try to get rid of weak function (or at least avoid new ones).\nThe cleaner solution would be to manage an ops structure in this file and have some registration function in platform code to replace the weak functions. But that\u0027s a bigger work.",
      "parentUuid": "dd43f791_9ebfbe34",
      "revId": "def1aeffda8fab270efea85d363cbcc35f690ab6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5fae2ed_30d414cc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000744
      },
      "writtenOn": "2024-01-26T17:33:22Z",
      "side": 1,
      "message": "The ops structure approach sounds like it might work, but as you say, may require a wider discussion and effort. Happy to go down the weak function route for now. Will leave this comment open in the mean time in case anyone has a different opinion.",
      "parentUuid": "92443274_213b0bd0",
      "revId": "def1aeffda8fab270efea85d363cbcc35f690ab6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7510bca_6889e8a5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2024-01-26T17:45:43Z",
      "side": 1,
      "message": "I too agree the weak function strategy is fine for now.",
      "parentUuid": "f5fae2ed_30d414cc",
      "revId": "def1aeffda8fab270efea85d363cbcc35f690ab6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff001abd_7d7a0b40",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2024-02-29T17:24:57Z",
      "side": 1,
      "message": "I guess we are missing CoR on this patch",
      "parentUuid": "e7510bca_6889e8a5",
      "revId": "def1aeffda8fab270efea85d363cbcc35f690ab6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}