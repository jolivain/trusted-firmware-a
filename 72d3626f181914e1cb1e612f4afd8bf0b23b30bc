{
  "comments": [
    {
      "key": {
        "uuid": "61c2f6f1_51550930",
        "filename": "lib/fconf/fconf_dyn_cfg_getter.c",
        "patchSetId": 9
      },
      "lineNbr": 56,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2020-06-18T15:56:00Z",
      "side": 1,
      "message": "would you mind explaining the thinking behind removing fconf? fconf_populate_dtb_registry sounds right so wondering why it was changed.",
      "revId": "72d3626f181914e1cb1e612f4afd8bf0b23b30bc",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47d9dee7_97f519f2",
        "filename": "lib/fconf/fconf_dyn_cfg_getter.c",
        "patchSetId": 9
      },
      "lineNbr": 56,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2020-06-18T16:06:25Z",
      "side": 1,
      "message": "This function is getting used in 2 ways as below:\n1. As a direct call without using fconf_populate framework in BL1 only.\n2. In rest of the BLs, this function gets called from populate framework.\n\nAs it is direct call from BL1, we thought changing its name to populate_dtb_registry.",
      "parentUuid": "61c2f6f1_51550930",
      "revId": "72d3626f181914e1cb1e612f4afd8bf0b23b30bc",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88c03a0c_b37abf43",
        "filename": "lib/fconf/fconf_dyn_cfg_getter.c",
        "patchSetId": 9
      },
      "lineNbr": 56,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2020-06-18T16:09:39Z",
      "side": 1,
      "message": "Thanks for explaining. I would leave the name as is, unless you or others have a strong preference to change the name. The prefix helps identify the module it belongs to(for ex all xlat_table functions are usually prefixed with xlat_table). I\u0027m fine either way with a slight preference to leave it as is.",
      "parentUuid": "47d9dee7_97f519f2",
      "revId": "72d3626f181914e1cb1e612f4afd8bf0b23b30bc",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de66fd3a_57f3ea2a",
        "filename": "lib/fconf/fconf_dyn_cfg_getter.c",
        "patchSetId": 9
      },
      "lineNbr": 56,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2020-06-18T16:17:48Z",
      "side": 1,
      "message": "Thanks! I got your point but we can mark this as exceptional function.",
      "parentUuid": "88c03a0c_b37abf43",
      "revId": "72d3626f181914e1cb1e612f4afd8bf0b23b30bc",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e1d0455_3f68aec7",
        "filename": "lib/fconf/fconf_dyn_cfg_getter.c",
        "patchSetId": 9
      },
      "lineNbr": 56,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2020-06-23T11:58:05Z",
      "side": 1,
      "message": "I agree with Raghu, I would have preferred the name to stay as is. Even if it is called by BL1, it is still a function provided by the fconf framework. In my mind, fconf is about configuring the firmware based on some configuration data. This configuration data might come from dynamically populated information extracted from some config file, or it could just be coming from statically defined data in the platform layer. From the caller\u0027s point of view, it\u0027s the same because fconf acts as an abstraction layer on top of that. BL1 is just using the 2nd approach underneath.",
      "parentUuid": "de66fd3a_57f3ea2a",
      "revId": "72d3626f181914e1cb1e612f4afd8bf0b23b30bc",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    }
  ]
}