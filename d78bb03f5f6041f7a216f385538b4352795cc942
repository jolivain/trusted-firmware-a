{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "de5f8b90_68ca38ea",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000469
      },
      "writtenOn": "2023-06-07T10:52:43Z",
      "side": 1,
      "message": "Looks good to me and working as expected.\nWould it be also possible to align better addresses?\n\nWhen I build our platform by:\n$ make -j8 DEBUG\u003d1 RESET_TO_BL31\u003d1 PLAT\u003dzynqmp bl31 ZYNQMP_ATF_MEM_BASE\u003d0xfffea000 ZYNQMP_ATF_MEM_SIZE\u003d0x14000\n\nThen printing content.\n$ poetry run memory -p zynqmp -b debug\nbuild-path: /home/monstr/data/disk/ATF/arm-trusted-firmware/build/zynqmp/debug\nMemory Layout:\n0x100002000 +--------------------------------------------__COHERENT_RAM_END__--------------------------------------------+\n0x100001070 +---------------------------------------__COHERENT_RAM_END_UNALIGNED__---------------------------------------+\n           +-------------------------------------------__COHERENT_RAM_START__-------------------------------------------+\n0x100001000 +---------------------------------------------__XLAT_TABLE_END__---------------------------------------------+\n0xffffc000 +--------------------------------------------__XLAT_TABLE_START__--------------------------------------------+\n           +------------------------------------------__BASE_XLAT_TABLE_END__-------------------------------------------+\n           +-----------------------------------------__BASE_XLAT_TABLE_START__------------------------------------------+\n           +------------------------------------------------__BSS_END__-------------------------------------------------+\n           +----------------------------------------__PMF_PERCPU_TIMESTAMP_END__----------------------------------------+\n           +-------------------------------------------__PMF_TIMESTAMP_END__--------------------------------------------+\n0xffffb0c0 +------------------------------------------__PMF_TIMESTAMP_START__-------------------------------------------+\n\nIt is visible that upper 3 address (because they are above 4GB) have additional one place for indentation. Would be good to have all aligned the same.",
      "revId": "d78bb03f5f6041f7a216f385538b4352795cc942",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9597ac6b_d0dcd535",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000744
      },
      "writtenOn": "2023-06-07T13:36:38Z",
      "side": 1,
      "message": "The padding width is statically defined, I haven\u0027t quite worked out how to dynamically do this. For now I\u0027ve increased the padding size to 11 which should increase the range to at least 8GB. Is this sufficient?",
      "parentUuid": "de5f8b90_68ca38ea",
      "revId": "d78bb03f5f6041f7a216f385538b4352795cc942",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29f847a9_4111e883",
        "filename": "tools/memory/memory/memmap.py",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2023-06-07T12:54:50Z",
      "side": 1,
      "message": "\"Don\u0027t try to parse generated ELF images first\"?",
      "range": {
        "startLine": 54,
        "startChar": 37,
        "endLine": 54,
        "endChar": 73
      },
      "revId": "d78bb03f5f6041f7a216f385538b4352795cc942",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7d15711_5edb7f9e",
        "filename": "tools/memory/memory/memmap.py",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2023-06-07T12:54:50Z",
      "side": 1,
      "message": "As the mapfile parser always runs as a fallback, maybe \"--no-elf-images\" might be a more appropriate option?",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 54,
        "endChar": 6
      },
      "revId": "d78bb03f5f6041f7a216f385538b4352795cc942",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a84139f_e8a4a233",
        "filename": "tools/memory/memory/memmap.py",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 1000744
      },
      "writtenOn": "2023-06-07T13:36:38Z",
      "side": 1,
      "message": "How does it look now?",
      "parentUuid": "29f847a9_4111e883",
      "range": {
        "startLine": 54,
        "startChar": 37,
        "endLine": 54,
        "endChar": 73
      },
      "revId": "d78bb03f5f6041f7a216f385538b4352795cc942",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0dfb270d_8172b77d",
        "filename": "tools/memory/memory/memmap.py",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 1000744
      },
      "writtenOn": "2023-06-07T13:36:38Z",
      "side": 1,
      "message": "Agreed!",
      "parentUuid": "a7d15711_5edb7f9e",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 54,
        "endChar": 6
      },
      "revId": "d78bb03f5f6041f7a216f385538b4352795cc942",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "37cd09dc_d6e664a0",
        "filename": "tools/memory/memory/memmap.py",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2023-06-07T17:24:15Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "0dfb270d_8172b77d",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 54,
        "endChar": 6
      },
      "revId": "d78bb03f5f6041f7a216f385538b4352795cc942",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "899b1f1d_f1a2a0e3",
        "filename": "tools/memory/memory/memmap.py",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2023-06-07T17:24:15Z",
      "side": 1,
      "message": "Works for me!",
      "parentUuid": "4a84139f_e8a4a233",
      "range": {
        "startLine": 54,
        "startChar": 37,
        "endLine": 54,
        "endChar": 73
      },
      "revId": "d78bb03f5f6041f7a216f385538b4352795cc942",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}