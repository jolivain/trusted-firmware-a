{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e7c38334_bda4a2df",
        "filename": "drivers/arm/pl011/aarch64/pl011_console.S",
        "patchSetId": 3
      },
      "lineNbr": 137,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2024-08-01T09:16:13Z",
      "side": 1,
      "message": "just checking, UART device should be mapped Device-xxx\nIs an explicit memory barrier required as write to this peripheral memory region would be implicitly ordered? Or perhaps it requires revisiting the (n)G(n)R(n)E constraint?",
      "range": {
        "startLine": 137,
        "startChar": 1,
        "endLine": 137,
        "endChar": 11
      },
      "revId": "67aa5d2b15ab66565248523d67220234caeb939e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "186429c5_61ee0a58",
        "filename": "drivers/arm/pl011/aarch64/pl011_console.S",
        "patchSetId": 3
      },
      "lineNbr": 137,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2024-08-01T10:24:41Z",
      "side": 1,
      "message": "Thanks for pointing this out.\n\nWe map the device region as nGnRE - Device non-Gathering, non-Reordering, Early Write Acknowledgement see the code [1] and [2].\n\nIIUC Early Write Acknowledgement means writes to this memory region are acknowledged immediately without waiting for the actual write to complete in hardware. This means that once a write operation is issued, it is considered complete from the perspective of the processor, but the actual hardware write might occur asynchronously.\n\nI\u0027m considering whether we should use ``dsb`` to ensure that device register writes are fully processed and visible, providing complete synchronization. This approach is preferable to using ``dmb st``, which ensures that writes are ordered and visible but may not guarantee full completion of external device operations. Or, we could consider changing the device memory attribute to nGnRnE, This approach would affect all devices, but I\u0027m unsure if changing the attribute for all devices is the best solution. Please let me know what do you think?\n\n[1]: https://review.trustedfirmware.org/plugins/gitiles/TF-A/trusted-firmware-a/+/refs/heads/integration/lib/xlat_tables/aarch64/xlat_tables.c#159 \n[2]: https://review.trustedfirmware.org/plugins/gitiles/TF-A/trusted-firmware-a/+/refs/heads/integration/include/lib/xlat_tables/xlat_tables_defs.h#154",
      "parentUuid": "e7c38334_bda4a2df",
      "range": {
        "startLine": 137,
        "startChar": 1,
        "endLine": 137,
        "endChar": 11
      },
      "revId": "67aa5d2b15ab66565248523d67220234caeb939e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5358aa9_f51345c1",
        "filename": "drivers/arm/pl011/aarch64/pl011_console.S",
        "patchSetId": 3
      },
      "lineNbr": 137,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2024-08-28T05:41:52Z",
      "side": 1,
      "message": "\u003e We map the device region as nGnRE - Device non-Gathering, non-Reordering, Early Write Acknowledgement\n\nThis is an interesting finding and I\u0027m curious that all implementations supports this on all devices held in the mapped range.\n\n\u003e  Early Write Acknowledgement means writes to this memory region are acknowledged immediately without waiting for the actual write to complete in hardware. \n\nTo my understanding this means an entity located before the device (e.g. in the fabric) has the capability to acknowledge the transaction before it reaches the device. This is a hint implying this ack may or may not happen depending on the implementation. nE implies that the terminating device itself acknowledges the transaction.\n\nI\u0027m not yet sure of the DSB/DMB implications wrt Device-nGnRE.\nArm ARM states about DSB behaviour wrt Device-...E implying transaction is guaranteed to be completed after the barrier. But it\u0027s not saying what happens about nE.",
      "parentUuid": "186429c5_61ee0a58",
      "range": {
        "startLine": 137,
        "startChar": 1,
        "endLine": 137,
        "endChar": 11
      },
      "revId": "67aa5d2b15ab66565248523d67220234caeb939e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fcf57dc0_cd70aea8",
        "filename": "drivers/arm/pl011/aarch64/pl011_console.S",
        "patchSetId": 3
      },
      "lineNbr": 137,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2024-08-28T05:46:44Z",
      "side": 1,
      "message": "sorry, last sentence should read\nArm ARM states about DSB behaviour wrt Device-...nE implying a transaction is guaranteed to be completed at the device end after the barrier. But either way it may suggest using a DSB after a transaction to a range marked E does not necessarily guarantees that the transaction reached the device if acknowledged by the fabric itself?",
      "parentUuid": "a5358aa9_f51345c1",
      "range": {
        "startLine": 137,
        "startChar": 1,
        "endLine": 137,
        "endChar": 11
      },
      "revId": "67aa5d2b15ab66565248523d67220234caeb939e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fdadb8b5_677d1512",
        "filename": "drivers/arm/pl011/aarch64/pl011_console.S",
        "patchSetId": 3
      },
      "lineNbr": 137,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2024-08-28T08:21:11Z",
      "side": 1,
      "message": "\u003e This is an interesting finding and I\u0027m curious that all implementations supports this on all devices held in the mapped range.\n\nIt seems we\u0027ve assumed that all implementations across platforms use the device region with the nGnRE attribute. However, some devices might actually require the nGnRnE attribute, but our current code doesn\u0027t offer that flexibility.\n\n\n\u003e To my understanding this means an entity located before the device (e.g. in the fabric) has the capability to acknowledge the transaction before it reaches the device. This is a hint implying this ack may or may not happen depending on the implementation. nE implies that the terminating device itself acknowledges the transaction.\n\n\u003e I\u0027m not yet sure of the DSB/DMB implications wrt Device-nGnRE.\nArm ARM states about DSB behaviour wrt Device-...nE implying a transaction is guaranteed to be completed at the device end after the barrier. But either way it may suggest using a DSB after a transaction to a range marked E does not necessarily guarantees that the transaction reached the device if acknowledged by the fabric itself?\n\nI think you\u0027re right. I misunderstood and interpreted this the opposite way.\n\nNow the question is, if the device region is mapped as nGnRE, how can we ensure that writes are completed on the device side without using a barrier? The only approach I can think of is reading a device status register to confirm this (but device should provide this flexibility), since a DSB wouldn\u0027t be helpful here as it gets retired immediately. I found a few links that support what you mentioned [1] and [2]. I think we should consult the Arch team on this. Let me know what do you think?\n\n[1]: https://community.arm.com/support-forums/f/architectures-and-processors-forum/49661/behavior-of-dsb-with-early-write-acknowledgement-device-memory-attribute\n[2]: https://developer.arm.com/documentation/102336/0100/When-is-an-access-considered-complete-",
      "parentUuid": "fcf57dc0_cd70aea8",
      "range": {
        "startLine": 137,
        "startChar": 1,
        "endLine": 137,
        "endChar": 11
      },
      "revId": "67aa5d2b15ab66565248523d67220234caeb939e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}