{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5ff3a167_0350231c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2022-03-29T12:52:21Z",
      "side": 1,
      "message": "mbedtls_x509.mk is a certificate makefile rather than the crypto makefile. IIUC certificate parser may not need to worry about the hashing algorithm selected right?\nThen, will it makes sense to move the setting of hash related defines (i.e. TF_MBEDTLS_HASH_ALG_ID and TF_MBEDTLS_TPM_HASH_ALG_ID) from mbedtls_common.mk to mbedtls_crypto.mk file?",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 20,
        "endChar": 19
      },
      "revId": "e5a38926239af052bc27b5e0ffeefa06e79cc1ef",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ef5c2c3b_5e5531e2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2022-03-29T13:39:41Z",
      "side": 1,
      "message": "That makes sense to me. I\u0027ll give it some more thoughts, see if there\u0027s nothing we\u0027ve missed that would explain why these variables have to be set from mbedtls_common.mk.\n\nIn the meantime, I\u0027ll abandon this patch.",
      "parentUuid": "5ff3a167_0350231c",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 20,
        "endChar": 19
      },
      "revId": "e5a38926239af052bc27b5e0ffeefa06e79cc1ef",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3c4f987_3e62a7bd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2022-03-29T12:52:21Z",
      "side": 1,
      "message": "IMO it makes sense to have one config with default TPM hash algorithm, so better update this config to not pass TPM_HASH_ALGO (to use default TPM hash algorithm).",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 27,
        "endChar": 100
      },
      "revId": "e5a38926239af052bc27b5e0ffeefa06e79cc1ef",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f46c804_577d221b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2022-03-29T13:39:41Z",
      "side": 1,
      "message": "I thought about it but I didn\u0027t want to rely on the default value from the CI scripts. If we change the default value in TF-A one day, and if that doesn\u0027t explicitly break the CI, there is a risk we will forget to update the CI scripts.\n\nAlthough I still think that, on second thoughts, I suppose we could at least add a *build*-only config that uses the default hash algo value. This might catch some build errors. Not necessarily the one I wanted to fix here, though (as that would also require trusted boot enabled, and I don\u0027t think I would necessarily have thought about combining both measured boot and trusted boot in a basic build-only config).",
      "parentUuid": "c3c4f987_3e62a7bd",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 27,
        "endChar": 100
      },
      "revId": "e5a38926239af052bc27b5e0ffeefa06e79cc1ef",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b2aff0a7_fe5d612c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2022-03-29T13:39:41Z",
      "side": 1,
      "message": "Thanks for the review Manish, and for seeing the problem from a different angle than me!",
      "revId": "e5a38926239af052bc27b5e0ffeefa06e79cc1ef",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}