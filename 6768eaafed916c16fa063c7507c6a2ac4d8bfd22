{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "36774f80_cdbd5b61",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000503
      },
      "writtenOn": "2021-04-13T14:44:11Z",
      "side": 1,
      "message": "I think I\u0027ve handled the comments here, I\u0027ve left the couple open where I didn\u0027t do exactly what was requested in case someone disagrees with what I\u0027ve done. That is the SUCCESS vs 0 parameters where I\u0027m clearing a field which isn\u0027t the SMC return code and the slight style issue, which I understand was sorta on the fence to begin with (and I\u0027m following the lkml style). The SMC_RET calls with 0 as the return code have been updated to use SUCCESS as asked though. While maybe a bit subtle, the code is now differentiating the return code from fields being cleared.\n\n\n",
      "revId": "6768eaafed916c16fa063c7507c6a2ac4d8bfd22",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82289c20_4612610e",
        "filename": "services/std_svc/pci_svc.c",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2021-04-13T16:31:03Z",
      "side": 1,
      "message": "Is the validity of the addr value checked within this call?",
      "range": {
        "startLine": 22,
        "startChar": 40,
        "endLine": 22,
        "endChar": 44
      },
      "revId": "6768eaafed916c16fa063c7507c6a2ac4d8bfd22",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1bdbdb0_055f3c72",
        "filename": "services/std_svc/pci_svc.c",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 1000503
      },
      "writtenOn": "2021-04-13T17:09:41Z",
      "side": 1,
      "message": "I don\u0027t understand the concern. \n\nWe are picking the 16bit segment out of the addr field and passing it to the platform to validate the request is for a valid segment as a sanity check ahead of calling the platform to perform the read/write. The remaining fields in the addr field are valid with any value set. This allows the platform code to assume everything in the addr field is valid.",
      "parentUuid": "82289c20_4612610e",
      "range": {
        "startLine": 22,
        "startChar": 40,
        "endLine": 22,
        "endChar": 44
      },
      "revId": "6768eaafed916c16fa063c7507c6a2ac4d8bfd22",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5578eecb_a11af0a2",
        "filename": "services/std_svc/pci_svc.c",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2021-04-13T17:20:02Z",
      "side": 1,
      "message": "Just trying to understand if using the addr as is is a concern. Or should we sanitize it first?",
      "parentUuid": "b1bdbdb0_055f3c72",
      "range": {
        "startLine": 22,
        "startChar": 40,
        "endLine": 22,
        "endChar": 44
      },
      "revId": "6768eaafed916c16fa063c7507c6a2ac4d8bfd22",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa479610_e6075f93",
        "filename": "services/std_svc/pci_svc.c",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 1000503
      },
      "writtenOn": "2021-04-13T17:28:38Z",
      "side": 1,
      "message": "This is AFAIK the only sanitation/validation we can do in the generic case. All combinations of bus/device/function are valid, but the platform+hardware is required to assure that if a device isn\u0027t fitted into that portion of the address space that reads return as specified by the pcie spec (which says -1).",
      "parentUuid": "5578eecb_a11af0a2",
      "range": {
        "startLine": 22,
        "startChar": 40,
        "endLine": 22,
        "endChar": 44
      },
      "revId": "6768eaafed916c16fa063c7507c6a2ac4d8bfd22",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "95af22b2_bb392941",
        "filename": "services/std_svc/pci_svc.c",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 1000503
      },
      "writtenOn": "2021-04-16T20:34:18Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "fa479610_e6075f93",
      "range": {
        "startLine": 22,
        "startChar": 40,
        "endLine": 22,
        "endChar": 44
      },
      "revId": "6768eaafed916c16fa063c7507c6a2ac4d8bfd22",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94d4acd6_29ced581",
        "filename": "services/std_svc/pci_svc.c",
        "patchSetId": 5
      },
      "lineNbr": 35,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2021-04-13T16:31:03Z",
      "side": 1,
      "message": "We should also check for wrap around",
      "range": {
        "startLine": 35,
        "startChar": 1,
        "endLine": 35,
        "endChar": 36
      },
      "revId": "6768eaafed916c16fa063c7507c6a2ac4d8bfd22",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f0b6b8e_20e99006",
        "filename": "services/std_svc/pci_svc.c",
        "patchSetId": 5
      },
      "lineNbr": 35,
      "author": {
        "id": 1000503
      },
      "writtenOn": "2021-04-13T17:09:41Z",
      "side": 1,
      "message": "I\u0027m confused, shall I truncate them again? because both of them while 64-bit parameters, are now guaranteed to be \u003c\u003d 32-bits. Meaning is not possible to overflow.",
      "parentUuid": "94d4acd6_29ced581",
      "range": {
        "startLine": 35,
        "startChar": 1,
        "endLine": 35,
        "endChar": 36
      },
      "revId": "6768eaafed916c16fa063c7507c6a2ac4d8bfd22",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8dbebbd8_3ce8ac44",
        "filename": "services/std_svc/pci_svc.c",
        "patchSetId": 5
      },
      "lineNbr": 35,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2021-04-13T17:20:02Z",
      "side": 1,
      "message": "Thanks for that explanation. Are you confident that (off + sz) \u003e PCI_OFFSET_MASK will always detect wrap around cases?",
      "parentUuid": "1f0b6b8e_20e99006",
      "range": {
        "startLine": 35,
        "startChar": 1,
        "endLine": 35,
        "endChar": 36
      },
      "revId": "6768eaafed916c16fa063c7507c6a2ac4d8bfd22",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f39e61ce_d4ec4a1e",
        "filename": "services/std_svc/pci_svc.c",
        "patchSetId": 5
      },
      "lineNbr": 35,
      "author": {
        "id": 1000503
      },
      "writtenOn": "2021-04-13T17:28:38Z",
      "side": 1,
      "message": "Its possible the platform code can mess up and write a size \u003e than the requested sz at an unaligned offset and overflow the 4K device window. I don\u0027t think its possible to validate that in this code path. The platform code will have to be carefully reviewed to assure that if that happens to matter on the given platform, the case is handled correctly.",
      "parentUuid": "8dbebbd8_3ce8ac44",
      "range": {
        "startLine": 35,
        "startChar": 1,
        "endLine": 35,
        "endChar": 36
      },
      "revId": "6768eaafed916c16fa063c7507c6a2ac4d8bfd22",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e900b620_c9a1c4c3",
        "filename": "services/std_svc/pci_svc.c",
        "patchSetId": 5
      },
      "lineNbr": 35,
      "author": {
        "id": 1000503
      },
      "writtenOn": "2021-04-13T17:30:33Z",
      "side": 1,
      "message": "Just to clarify a bit more, we are validating that the caller didn\u0027t pass anything wrong, we can\u0027t (yet) validate if the platform does the right thing with it.",
      "parentUuid": "f39e61ce_d4ec4a1e",
      "range": {
        "startLine": 35,
        "startChar": 1,
        "endLine": 35,
        "endChar": 36
      },
      "revId": "6768eaafed916c16fa063c7507c6a2ac4d8bfd22",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6ac9a15_e06ce640",
        "filename": "services/std_svc/pci_svc.c",
        "patchSetId": 5
      },
      "lineNbr": 35,
      "author": {
        "id": 1000503
      },
      "writtenOn": "2021-04-13T17:41:22Z",
      "side": 1,
      "message": "So I guess the easy answer is yes?",
      "parentUuid": "e900b620_c9a1c4c3",
      "range": {
        "startLine": 35,
        "startChar": 1,
        "endLine": 35,
        "endChar": 36
      },
      "revId": "6768eaafed916c16fa063c7507c6a2ac4d8bfd22",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "07eaf656_bc80ab89",
        "filename": "services/std_svc/pci_svc.c",
        "patchSetId": 5
      },
      "lineNbr": 35,
      "author": {
        "id": 1000503
      },
      "writtenOn": "2021-04-13T17:59:20Z",
      "side": 1,
      "message": "Except I think is a different bug here.",
      "parentUuid": "c6ac9a15_e06ce640",
      "range": {
        "startLine": 35,
        "startChar": 1,
        "endLine": 35,
        "endChar": 36
      },
      "revId": "6768eaafed916c16fa063c7507c6a2ac4d8bfd22",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3ffd6eb0_f20f6ecb",
        "filename": "services/std_svc/pci_svc.c",
        "patchSetId": 5
      },
      "lineNbr": 35,
      "author": {
        "id": 1000503
      },
      "writtenOn": "2021-04-13T19:47:16Z",
      "side": 1,
      "message": "Ok, so there was an off by one here because I am using the mask instead of the size which meant the last access would incorrectly fail. Which probably could have existing for a while before someone actually plugged in a device with exactly a 4k config space.\n\nI\u0027m going to mark this resolved because I don\u0027t think there is an \"overflow\" problem.",
      "parentUuid": "07eaf656_bc80ab89",
      "range": {
        "startLine": 35,
        "startChar": 1,
        "endLine": 35,
        "endChar": 36
      },
      "revId": "6768eaafed916c16fa063c7507c6a2ac4d8bfd22",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e40303d7_76dab31a",
        "filename": "services/std_svc/pci_svc.c",
        "patchSetId": 5
      },
      "lineNbr": 76,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2021-04-13T16:31:03Z",
      "side": 1,
      "message": "is there a top limit for this value?",
      "range": {
        "startLine": 76,
        "startChar": 2,
        "endLine": 76,
        "endChar": 17
      },
      "revId": "6768eaafed916c16fa063c7507c6a2ac4d8bfd22",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "864b4cd3_4af60197",
        "filename": "services/std_svc/pci_svc.c",
        "patchSetId": 5
      },
      "lineNbr": 76,
      "author": {
        "id": 1000503
      },
      "writtenOn": "2021-04-13T17:09:41Z",
      "side": 1,
      "message": "Top limit? This code is validating the 2.3 portion of the spec which says that W4 must be zero.",
      "parentUuid": "e40303d7_76dab31a",
      "range": {
        "startLine": 76,
        "startChar": 2,
        "endLine": 76,
        "endChar": 17
      },
      "revId": "6768eaafed916c16fa063c7507c6a2ac4d8bfd22",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7082caa1_975fd831",
        "filename": "services/std_svc/pci_svc.c",
        "patchSetId": 5
      },
      "lineNbr": 76,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2021-04-13T17:20:02Z",
      "side": 1,
      "message": "OK. Please pardon my ignorance.",
      "parentUuid": "864b4cd3_4af60197",
      "range": {
        "startLine": 76,
        "startChar": 2,
        "endLine": 76,
        "endChar": 17
      },
      "revId": "6768eaafed916c16fa063c7507c6a2ac4d8bfd22",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a6e5f814_6f9b3d75",
        "filename": "services/std_svc/pci_svc.c",
        "patchSetId": 5
      },
      "lineNbr": 76,
      "author": {
        "id": 1000503
      },
      "writtenOn": "2021-04-13T19:47:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7082caa1_975fd831",
      "range": {
        "startLine": 76,
        "startChar": 2,
        "endLine": 76,
        "endChar": 17
      },
      "revId": "6768eaafed916c16fa063c7507c6a2ac4d8bfd22",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "44fe0c9a_d78e93ae",
        "filename": "services/std_svc/pci_svc.c",
        "patchSetId": 5
      },
      "lineNbr": 92,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2021-04-13T16:31:03Z",
      "side": 1,
      "message": "Why is this variable not sanity checked like the read case?",
      "range": {
        "startLine": 92,
        "startChar": 37,
        "endLine": 92,
        "endChar": 39
      },
      "revId": "6768eaafed916c16fa063c7507c6a2ac4d8bfd22",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0749107f_85a18349",
        "filename": "services/std_svc/pci_svc.c",
        "patchSetId": 5
      },
      "lineNbr": 92,
      "author": {
        "id": 1000503
      },
      "writtenOn": "2021-04-13T17:09:41Z",
      "side": 1,
      "message": "2.4 of the spec says that w4 is the write data (where as for reads it must be zero). The assumption here is that the platform code is going to be responsible for aligning/whatever is needed on the particular platform to write the given size to the appropriate platform registers/etc as the platform dictates.",
      "parentUuid": "44fe0c9a_d78e93ae",
      "range": {
        "startLine": 92,
        "startChar": 37,
        "endLine": 92,
        "endChar": 39
      },
      "revId": "6768eaafed916c16fa063c7507c6a2ac4d8bfd22",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a13fd863_fdb522a4",
        "filename": "services/std_svc/pci_svc.c",
        "patchSetId": 5
      },
      "lineNbr": 92,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2021-04-13T17:20:02Z",
      "side": 1,
      "message": "Understood. Thanks.",
      "parentUuid": "0749107f_85a18349",
      "range": {
        "startLine": 92,
        "startChar": 37,
        "endLine": 92,
        "endChar": 39
      },
      "revId": "6768eaafed916c16fa063c7507c6a2ac4d8bfd22",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c1cd4a2f_d9bee9a2",
        "filename": "services/std_svc/pci_svc.c",
        "patchSetId": 5
      },
      "lineNbr": 92,
      "author": {
        "id": 1000503
      },
      "writtenOn": "2021-04-13T19:47:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a13fd863_fdb522a4",
      "range": {
        "startLine": 92,
        "startChar": 37,
        "endLine": 92,
        "endChar": 39
      },
      "revId": "6768eaafed916c16fa063c7507c6a2ac4d8bfd22",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}