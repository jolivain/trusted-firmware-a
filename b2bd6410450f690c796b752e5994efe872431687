{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ae259a5a_d00613a2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2023-05-23T11:39:17Z",
      "side": 1,
      "message": "Hi Andre,\n\nI wonder if an easiest solution would just be to put lines 17-20 of plat/qemu/common/qemu_stack_protector.c under #ifdef __aarch64__, like this is the case when trying to read Aarch64 only register?\nThere are examples in bl1/bl1_main.c, drivers/arm/gic/v3/gicv3_main.c, or include/lib/el3_runtime/cpu_data.h.",
      "revId": "b2bd6410450f690c796b752e5994efe872431687",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a1347ef7_85c12fec",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2023-05-23T11:53:43Z",
      "side": 1,
      "message": "I have pushed a patch for this, we can opt for either of the solution.\n\nhttps://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/21069",
      "parentUuid": "ae259a5a_d00613a2",
      "revId": "b2bd6410450f690c796b752e5994efe872431687",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4dab66ee_14ff8742",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2023-05-23T12:48:48Z",
      "side": 1,
      "message": "But that\u0027s fixing this one particular code usage, in the simplest possible fashion. In fact this points to that we forgot to have those helper functions defined for both ISAs in the first place.\nThe majority of new features are only valid for AArch64 nowadays, so we can have those trivial implementations for AArch32. I will extend the patch to just cover all of them.",
      "parentUuid": "a1347ef7_85c12fec",
      "revId": "b2bd6410450f690c796b752e5994efe872431687",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "29e32b6d_04ad8608",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2023-05-23T14:02:49Z",
      "side": 1,
      "message": "For the feature check, I totally agree, and your new patch \"feat(cpufeat): deny AArch64-only features when building for AArch32\" is fine.\nFor this patch, should we also extend the helper for this particular register, to all Aarch64 registers not existing on Aarch32, and not just the one used by QEMU?\nThat\u0027s mainly why I first proposed to put the code under __aarch64__ flag, as this could be a huge task.\nAnother question: is the assert really needed?",
      "parentUuid": "4dab66ee_14ff8742",
      "revId": "b2bd6410450f690c796b752e5994efe872431687",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0dba574_78071657",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2023-05-23T15:24:06Z",
      "side": 1,
      "message": "On a first glance this code is indeed really missing some __aarch64__ clamps: RNDR is AArch64 only, so it shouldn\u0027t be used in C code if we expect QEMU to compile for AArch32 as well(do we, actually?)\nBut I think a better solution is to avoid any #ifdefs, since they make the code hard to read, and hide lines from the compiler.\nAnother alternative would be to implement some generic \"get_random_number()\" routine, per AArch, since this task is not really QEMU specific. So we would put these routines into two different files, one for AArch32, and one for AArch64. But this random number generation gets quickly into platform specific territory, and I am not sure if that\u0027s really worth the effort, for this simple piece of code here.\n\nRegarding: \"extend the helper ... to all Aarch64 registers not existing on Aarch32\": well yes, eventually we should do this - if there is no better solution in avoiding ISA specific access in the first place (like above).\n\nBut between the extremes \"just hack some #ifdefs in\" and \"provide proper wrappers for all system registers\" there are middle grounds: provide a sane wrapper, but do it one-by-one, so only if there is a need, and when we can review and test it properly.\nIn this case someone compiled QEMU for AArch32, which triggered the build failure, so we fix this now, but in the proper way.",
      "parentUuid": "29e32b6d_04ad8608",
      "revId": "b2bd6410450f690c796b752e5994efe872431687",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}