{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ae259a5a_d00613a2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2023-05-23T11:39:17Z",
      "side": 1,
      "message": "Hi Andre,\n\nI wonder if an easiest solution would just be to put lines 17-20 of plat/qemu/common/qemu_stack_protector.c under #ifdef __aarch64__, like this is the case when trying to read Aarch64 only register?\nThere are examples in bl1/bl1_main.c, drivers/arm/gic/v3/gicv3_main.c, or include/lib/el3_runtime/cpu_data.h.",
      "revId": "b2bd6410450f690c796b752e5994efe872431687",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a1347ef7_85c12fec",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2023-05-23T11:53:43Z",
      "side": 1,
      "message": "I have pushed a patch for this, we can opt for either of the solution.\n\nhttps://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/21069",
      "parentUuid": "ae259a5a_d00613a2",
      "revId": "b2bd6410450f690c796b752e5994efe872431687",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4dab66ee_14ff8742",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2023-05-23T12:48:48Z",
      "side": 1,
      "message": "But that\u0027s fixing this one particular code usage, in the simplest possible fashion. In fact this points to that we forgot to have those helper functions defined for both ISAs in the first place.\nThe majority of new features are only valid for AArch64 nowadays, so we can have those trivial implementations for AArch32. I will extend the patch to just cover all of them.",
      "parentUuid": "a1347ef7_85c12fec",
      "revId": "b2bd6410450f690c796b752e5994efe872431687",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "29e32b6d_04ad8608",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2023-05-23T14:02:49Z",
      "side": 1,
      "message": "For the feature check, I totally agree, and your new patch \"feat(cpufeat): deny AArch64-only features when building for AArch32\" is fine.\nFor this patch, should we also extend the helper for this particular register, to all Aarch64 registers not existing on Aarch32, and not just the one used by QEMU?\nThat\u0027s mainly why I first proposed to put the code under __aarch64__ flag, as this could be a huge task.\nAnother question: is the assert really needed?",
      "parentUuid": "4dab66ee_14ff8742",
      "revId": "b2bd6410450f690c796b752e5994efe872431687",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}