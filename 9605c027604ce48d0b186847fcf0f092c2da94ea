{
  "comments": [
    {
      "key": {
        "uuid": "260407e8_4153c873",
        "filename": "drivers/io/io_fip.c",
        "patchSetId": 8
      },
      "lineNbr": 385,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2020-01-24T23:07:31Z",
      "side": 1,
      "message": "can *length be lesser than sizeof(fip_toc_dec_data_t) and cause an underflow ?",
      "revId": "9605c027604ce48d0b186847fcf0f092c2da94ea",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95f9f048_71b1b354",
        "filename": "drivers/io/io_fip.c",
        "patchSetId": 8
      },
      "lineNbr": 438,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2020-01-24T22:58:00Z",
      "side": 1,
      "message": "is an assert sufficient here ? asserts will be compiled out in release builds. should these be if statements, since this data is untrusted ? Is there some path in code that reads/writes past the given buffer? it appears that tag_len and iv_len are passed unfiltered/unchecked to aes_gcm_decrypt() in mbedtls_crypto.c. If tag_len is a large number, you could potentially read past mapped memory and cause a crash in line 266/267.",
      "revId": "9605c027604ce48d0b186847fcf0f092c2da94ea",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5666f937_0957ec5e",
        "filename": "drivers/io/io_fip.c",
        "patchSetId": 8
      },
      "lineNbr": 438,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2020-01-24T22:58:43Z",
      "side": 1,
      "message": "line 266/267 of mbedtls_crypt.c",
      "parentUuid": "95f9f048_71b1b354",
      "revId": "9605c027604ce48d0b186847fcf0f092c2da94ea",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69e16542_bcfaec98",
        "filename": "drivers/io/io_fip.c",
        "patchSetId": 8
      },
      "lineNbr": 491,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2020-01-24T18:40:32Z",
      "side": 1,
      "message": "nit(feel free to ignore): you can move the memset here and in line 495 before the if(result !\u003d 0). Will save you one line and some code repetition.",
      "revId": "9605c027604ce48d0b186847fcf0f092c2da94ea",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    }
  ]
}