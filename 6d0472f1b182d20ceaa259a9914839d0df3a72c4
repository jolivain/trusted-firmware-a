{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c682ca62_89fcb7b7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1000132
      },
      "writtenOn": "2022-04-05T09:16:44Z",
      "side": 1,
      "message": "Can you share details about how this is supposed to work? Who is the update agent? Is there any verification involved prior to updating the NOR flash bank?",
      "revId": "6d0472f1b182d20ceaa259a9914839d0df3a72c4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28d8fd68_9a5b8565",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1000787
      },
      "writtenOn": "2022-04-05T09:53:13Z",
      "side": 1,
      "message": "The AB update is a kind of firmware bank feature, which will switch the banks according to the boot_index.\n\nThe \"boot_index\" counter will be updated by SCP-firmware on CM3 core before booting TF-A.\nSince the TF-A BL2/BL31 will be combined with U-Boot in a FIP binary, BL2 must check the boot_index and select the bank to load the rest of firmware from NOR flash.\n\nThe actual firmware update is done by U-Boot using UEFI capsule update. Thus the firmware image verification will be done by UEFI capsule authentication, and the behavior verification will be done by OS. The OS will run the test and revert the image if it is not acceptable. U-Boot UEFI will update the active_index of FWU metadata. In that case, the boot_index will be updated by SCP-firmware according to the active_index.\n\nThe reason why this uses the boot_index instead of the active_index are, (1) the FWU spec requires it, and (2) the DeveloperBox platform also supports platform level rollback feature, when the SCP-firmware detects the U-Boot doesn\u0027t boot after the boot_index has been updated, it will rollback the boot_index instead of the active_index.",
      "parentUuid": "c682ca62_89fcb7b7",
      "revId": "6d0472f1b182d20ceaa259a9914839d0df3a72c4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ef1eb0d_dc2d3b14",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1000132
      },
      "writtenOn": "2022-04-05T10:19:48Z",
      "side": 1,
      "message": "Thanks for the details Masami. I guess when you say \"SCP-firmware detects the U-Boot doesn\u0027t boot\" meant that there is some sort of watchdog timer setup to detect failed boot, correct?",
      "parentUuid": "28d8fd68_9a5b8565",
      "revId": "6d0472f1b182d20ceaa259a9914839d0df3a72c4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8f3dfd5_16cc935c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1000787
      },
      "writtenOn": "2022-04-05T13:06:08Z",
      "side": 1,
      "message": "Actually, I don\u0027t use the watchdog, instead, there is another counter to count how many time to boot SCP firmware with same boot_index value (this is because a wrong firmware can just reboot the machine). SCP firmware will start the counter (set to 1) and U-Boot will clear it if it reaches some point (board_late_init at this point). In this protocol, TF-A does not touch it.",
      "parentUuid": "2ef1eb0d_dc2d3b14",
      "revId": "6d0472f1b182d20ceaa259a9914839d0df3a72c4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "31995b2c_157f113c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1000132
      },
      "writtenOn": "2022-04-06T12:45:15Z",
      "side": 1,
      "message": "Thanks for the detailed explanation.",
      "parentUuid": "a8f3dfd5_16cc935c",
      "revId": "6d0472f1b182d20ceaa259a9914839d0df3a72c4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fbb686e2_b63cf617",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2022-04-05T07:23:49Z",
      "side": 1,
      "message": "LGTM",
      "revId": "6d0472f1b182d20ceaa259a9914839d0df3a72c4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92ab5f09_fee77108",
        "filename": "plat/socionext/synquacer/sq_io_storage.c",
        "patchSetId": 2
      },
      "lineNbr": 179,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2022-04-05T07:23:49Z",
      "side": 1,
      "message": "nit: add one blank line before this.",
      "range": {
        "startLine": 179,
        "startChar": 1,
        "endLine": 179,
        "endChar": 10
      },
      "revId": "6d0472f1b182d20ceaa259a9914839d0df3a72c4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}