{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "71a688f4_07660889",
        "filename": "plat/intel/soc/common/socfpga_sip_svc.c",
        "patchSetId": 1
      },
      "lineNbr": 283,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-11-20T14:39:26Z",
      "side": 1,
      "message": "(minor) There is the `uint128_t` type for that.",
      "range": {
        "startLine": 283,
        "startChar": 1,
        "endLine": 283,
        "endChar": 18
      },
      "revId": "877e6b2b231362f159dcf3878aa53c3a51bcaa6b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e42e3bf5_c65877af",
        "filename": "plat/intel/soc/common/socfpga_sip_svc.c",
        "patchSetId": 1
      },
      "lineNbr": 294,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-11-20T14:39:26Z",
      "side": 1,
      "message": "Don\u0027t you need to compute `addr + size` in the same manner as `dram_max_sz`? i.e.:\n\n    uint128_t region_end \u003d (uint128_t) addr + (uint128_t) size;\n \nOtherwise, I am worried that `addr + size` might be computed as a `uint64_t` value (overwrapping at `UINT64_MAX`), which would not raise the expected result.",
      "range": {
        "startLine": 294,
        "startChar": 5,
        "endLine": 294,
        "endChar": 16
      },
      "revId": "877e6b2b231362f159dcf3878aa53c3a51bcaa6b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}