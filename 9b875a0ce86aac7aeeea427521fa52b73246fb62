{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "df97b33c_6b26e792",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2023-11-27T11:28:42Z",
      "side": 1,
      "message": "this is not scope available in the changelog.yaml. Better mention only \u0027css\u0027",
      "range": {
        "startLine": 7,
        "startChar": 9,
        "endLine": 7,
        "endChar": 16
      },
      "revId": "9b875a0ce86aac7aeeea427521fa52b73246fb62",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "37650785_af8c03ed",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1000040
      },
      "writtenOn": "2024-02-07T21:01:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "df97b33c_6b26e792",
      "range": {
        "startLine": 7,
        "startChar": 9,
        "endLine": 7,
        "endChar": 16
      },
      "revId": "9b875a0ce86aac7aeeea427521fa52b73246fb62",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "693fefea_82e316c9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2023-11-27T11:28:42Z",
      "side": 1,
      "message": "Extended?",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 6
      },
      "revId": "9b875a0ce86aac7aeeea427521fa52b73246fb62",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59dccb34_1c47a02c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-12-13T07:19:19Z",
      "side": 1,
      "message": "Actually imperative tense in commit messages is recommended by TF-A guidelines. See [1], which refers to [2], where you can read:\n\n```\nWrite your commit message in the imperative: \"Fix bug\" and not\n\"Fixed bug\" or \"Fixes bug.\"\n```\n\nSo \"Extend\" is correct and preferred.\n\n[1] https://trustedfirmware-a.readthedocs.io/en/latest/process/contributing.html\n[2] https://git-scm.com/book/en/v2/Distributed-Git-Contributing-to-a-Project",
      "parentUuid": "693fefea_82e316c9",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 6
      },
      "revId": "9b875a0ce86aac7aeeea427521fa52b73246fb62",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0fb8fbd2_8fae3432",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2023-12-15T08:57:55Z",
      "side": 1,
      "message": "Faire enough!\nMy understanding is that the imperative tense is typically used in the subject line of a commit, while the commit body should provide details about the changes that have been made.\nIt seems that we are consistently using the imperative tense for the subject line, but we may not be maintaining the same consistency in the body of the commit message across TF-A commit messages.",
      "parentUuid": "59dccb34_1c47a02c",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 6
      },
      "revId": "9b875a0ce86aac7aeeea427521fa52b73246fb62",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ce0d2fd_74ee3ab3",
        "filename": "drivers/arm/css/sds/sds.c",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2023-11-27T11:28:42Z",
      "side": 1,
      "message": "can\u0027t we move this structure to \u0027sds_private.h\u0027 instead?",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 33,
        "endChar": 2
      },
      "revId": "9b875a0ce86aac7aeeea427521fa52b73246fb62",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5154047_0aa3bd6b",
        "filename": "drivers/arm/css/sds/sds.c",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-12-13T07:19:19Z",
      "side": 1,
      "message": "This structure definition is only used in this C translation unit so I think this is the correct place for it. sds_private.h should be preferred for type definitions which are used across multiple C files in the implementation, which is not the case here. Let\u0027s not export definitions unless strictly necessary.",
      "parentUuid": "8ce0d2fd_74ee3ab3",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 33,
        "endChar": 2
      },
      "revId": "9b875a0ce86aac7aeeea427521fa52b73246fb62",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ac196127_a1aacb80",
        "filename": "drivers/arm/css/sds/sds.c",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2023-12-15T08:57:55Z",
      "side": 1,
      "message": "Looks reasonable, initially I thought ``sds_private.h`` is included by only ``sds.c`` file but that is not the case.",
      "parentUuid": "c5154047_0aa3bd6b",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 33,
        "endChar": 2
      },
      "revId": "9b875a0ce86aac7aeeea427521fa52b73246fb62",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "218fbe81_0709df46",
        "filename": "drivers/arm/css/sds/sds.c",
        "patchSetId": 3
      },
      "lineNbr": 40,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-12-13T08:35:29Z",
      "side": 1,
      "message": "As `PLAT_ARM_SDS_MEM_BASE`/`PLAT_ARM_SDS_MEM_BASE_2` are platform-specific addresses, and SDS regions indexes are platform-specific values too IMO, I wonder whether we should let platform code define this structure...\n\nWe could introduce the following platform interface to retrieve the list of SDS regions from the SDS driver:\n\n```\nstruct sds_region *plat_sds_get_regions(void);\n```\n\nIf we also need the number of regions defined by the platform (and we probably do) then I guess we\u0027ve got 2 options:\n\n* Option 1: Add an output parameter to the above interface:\n```\nstruct sds_region *plat_sds_get_regions(size_t *count);\n```\n\n* Option 2: Introduce a separate platform interface:\n```\nstruct size_t plat_sds_get_regions_count(void);\n```\n\nI don\u0027t have a strong preference for either option. I guess it will depend on the usage pattern in the SDS driver - whether we often need the `count` value along or whether it forces us to define temporary local variable just for the sake of passing a valid address to this interface.",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 40,
        "endChar": 2
      },
      "revId": "9b875a0ce86aac7aeeea427521fa52b73246fb62",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3325bb9_561cdce0",
        "filename": "drivers/arm/css/sds/sds.c",
        "patchSetId": 3
      },
      "lineNbr": 40,
      "author": {
        "id": 1000040
      },
      "writtenOn": "2024-02-07T21:01:08Z",
      "side": 1,
      "message": "Hi Sandrine,\nI\u0027ve updated the SDS code with the a plat_sds_get_regions() platform function.",
      "parentUuid": "218fbe81_0709df46",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 40,
        "endChar": 2
      },
      "revId": "9b875a0ce86aac7aeeea427521fa52b73246fb62",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ab72bf08_10b6a682",
        "filename": "drivers/arm/css/sds/sds.c",
        "patchSetId": 3
      },
      "lineNbr": 40,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2024-02-09T09:59:38Z",
      "side": 1,
      "message": "Thanks David! I just have some suggestions of improvements but this generally looks aligned with what I had in mind.",
      "parentUuid": "a3325bb9_561cdce0",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 40,
        "endChar": 2
      },
      "revId": "9b875a0ce86aac7aeeea427521fa52b73246fb62",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02db4a6e_b4736080",
        "filename": "drivers/arm/css/sds/sds.c",
        "patchSetId": 3
      },
      "lineNbr": 256,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-12-13T08:35:29Z",
      "side": 1,
      "message": "This is the only place where I\u0027ve spotted such an assertion but I feel it\u0027s needed in all other public functions exported by this driver: `sds_struct_exists()`, `sds_struct_read()` and `sds_struct_write()`. Could you please add it there as well?\n\nBTW, there is the question of how do we check the validity of this id... Using an assertion or an \u0027if\u0027 test? Assertions are fine if the region id is always coming from platform code, which I think is the case right now. Can you please confirm?",
      "range": {
        "startLine": 256,
        "startChar": 1,
        "endLine": 256,
        "endChar": 36
      },
      "revId": "9b875a0ce86aac7aeeea427521fa52b73246fb62",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f7372580_e2922c09",
        "filename": "drivers/arm/css/sds/sds.c",
        "patchSetId": 3
      },
      "lineNbr": 256,
      "author": {
        "id": 1000040
      },
      "writtenOn": "2024-02-07T21:01:08Z",
      "side": 1,
      "message": "I\u0027ve added the asserts. \n\nYes, the region ID macros are defined by platform and the SDS driver calls are from platform code (such as during platform setup).",
      "parentUuid": "02db4a6e_b4736080",
      "range": {
        "startLine": 256,
        "startChar": 1,
        "endLine": 256,
        "endChar": 36
      },
      "revId": "9b875a0ce86aac7aeeea427521fa52b73246fb62",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83a995df_28c29221",
        "filename": "include/drivers/arm/css/sds.h",
        "patchSetId": 3
      },
      "lineNbr": 83,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-12-13T08:35:29Z",
      "side": 1,
      "message": "These macros look misplaced to me. I think we should let platforms define them instead.",
      "range": {
        "startLine": 82,
        "startChar": 0,
        "endLine": 83,
        "endChar": 31
      },
      "revId": "9b875a0ce86aac7aeeea427521fa52b73246fb62",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "70ee7f24_5df4d30c",
        "filename": "include/drivers/arm/css/sds.h",
        "patchSetId": 3
      },
      "lineNbr": 83,
      "author": {
        "id": 1000040
      },
      "writtenOn": "2024-02-07T21:01:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "83a995df_28c29221",
      "range": {
        "startLine": 82,
        "startChar": 0,
        "endLine": 83,
        "endChar": 31
      },
      "revId": "9b875a0ce86aac7aeeea427521fa52b73246fb62",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}