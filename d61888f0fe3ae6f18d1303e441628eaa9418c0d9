{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9e08ecbf_05e56af2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000469
      },
      "writtenOn": "2023-09-27T08:31:11Z",
      "side": 1,
      "message": "I would expect also changes in struct console in include/drivers/console.h where link to getc is placed. And that would also find issue with drivers/arm/dcc/dcc_console.c and plat/socionext/uniphier/uniphier_console_setup.c which also define it.",
      "revId": "d61888f0fe3ae6f18d1303e441628eaa9418c0d9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b5e9d49_761b865f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-09-28T13:02:13Z",
      "side": 1,
      "message": "\u003e I would expect also changes in struct console in include/drivers/console.h where link to getc is placed.\n\nI was actually planning to leave the getc function pointer within the console structure, just set it to NULL when ENABLE_CONSOLE_GETC\u003d0. I admit this function pointer would be useless / would only take up space (although we\u0027re talking about 4 bytes only, a few more if the platform registers several console drivers), but my original intent was to change the multi-console framework as little as possible. Also, if we go with your suggestion then the console structure layout will differ across firmware builds (depending on whether getc is enabled/disabled), which could be undesirable in some cases.\n\n\u003e And that would also find issue with drivers/arm/dcc/dcc_console.c and plat/socionext/uniphier/uniphier_console_setup.c which also define it.\n\nOh right, I only took care of the console drivers which registered with the multi-console framework through the finish_console_register() asm macro and I overlooked  those which do it through the console_register() function. Thanks for pointing this out, I\u0027ll take care of these in the next version of the patch.\n\nYou\u0027re right that I would have caught this if I had removed the getc function pointer from the console structure. I\u0027ll explore this more.",
      "parentUuid": "9e08ecbf_05e56af2",
      "revId": "d61888f0fe3ae6f18d1303e441628eaa9418c0d9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1ef505ff_602d227b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-09-28T13:02:13Z",
      "side": 1,
      "message": "Thank you both for the reviews!",
      "revId": "d61888f0fe3ae6f18d1303e441628eaa9418c0d9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a74dab2_252b7ce5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000060
      },
      "writtenOn": "2023-09-28T17:47:58Z",
      "side": 1,
      "message": "FWIW I agree with Michal that it would be good to remove it from the structure, so that other drivers adding the pointer when the option isn\u0027t set that might be added in the future can be caught automatically by the compiler. There are plenty of structures that exclude some members based on built-time options in TF-A, I don\u0027t think there\u0027s any reason to be particularly concerned about this one.",
      "parentUuid": "5b5e9d49_761b865f",
      "revId": "d61888f0fe3ae6f18d1303e441628eaa9418c0d9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ba905724_3fdc5131",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000469
      },
      "writtenOn": "2023-09-29T06:38:52Z",
      "side": 1,
      "message": "Not sure if there is a way to keep structure the same but error out of someone defines it when disabled. Maybe there is any technique around it.\nAt least in DCC code I don\u0027t think anybody actually tested it too. It means getting rid of untested configurations would be worth too. Or of course keep it based on enablement as you do in your patch but having a way to test it in a automated way.",
      "parentUuid": "1ef505ff_602d227b",
      "revId": "d61888f0fe3ae6f18d1303e441628eaa9418c0d9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6bd71243_9b0ffa3b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-09-29T09:29:46Z",
      "side": 1,
      "message": "Thanks Julius. After putting some thoughts into it, I agree with you, this is probably the best solution. It\u0027s simple - although the resulting code might come out a bit ugly with the #ifdefry and having to define different offsets values for the console fields, depending on the absence/presence of the getc function pointer - and as you say it will consistently catch any misuse in the future.",
      "parentUuid": "1a74dab2_252b7ce5",
      "revId": "d61888f0fe3ae6f18d1303e441628eaa9418c0d9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5be9e8ac_8f280c4f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-09-29T09:29:46Z",
      "side": 1,
      "message": "\u003e Not sure if there is a way to keep structure the same but error out of someone defines it when disabled. Maybe there is any technique around it.\n\nAt least I could not find any technique that catches this scenario at build time so far. And I am no longer convinced it\u0027s worth the effort, I\u0027d now rather remove the getc field entirely, as discussed above.\n\n\u003e At least in DCC code I don\u0027t think anybody actually tested it too. It means getting rid of untested configurations would be worth too. Or of course keep it based on enablement as you do in your patch but having a way to test it in a automated way.\n\nSorry, I am not sure what you\u0027re saying... Are you saying that the getc() implementation of the DCC console has never been tested? If that\u0027s what you meant, why was it introduced in the first place, if there was no use case for it? Should we remove it?\n\nRegarding test automation, I can\u0027t see any Xilinx boards being deployed in TF-A OpenCI LAVA [1], or did I miss it? If there are some then I guess we/Linaro could help you deploy getc() tests on these boards, else I guess it would be a task on you.\n\n[1] https://tf.validation.linaro.org/scheduler/device_types",
      "parentUuid": "ba905724_3fdc5131",
      "revId": "d61888f0fe3ae6f18d1303e441628eaa9418c0d9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23700cbe_930fcb0c",
        "filename": "include/arch/aarch64/console_macros.S",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1000060
      },
      "writtenOn": "2023-09-27T21:05:53Z",
      "side": 1,
      "message": "nit: why not just put the\n```\n#if !ENABLE_CONSOLE_GETC\n.error ...\n#endif\n```\nin here?",
      "revId": "d61888f0fe3ae6f18d1303e441628eaa9418c0d9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff480d39_46730027",
        "filename": "include/arch/aarch64/console_macros.S",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-09-28T13:02:13Z",
      "side": 1,
      "message": "Ack. I agree that should work too and would be a bit more concise. I\u0027ll incorporate this change in the next version.",
      "parentUuid": "23700cbe_930fcb0c",
      "revId": "d61888f0fe3ae6f18d1303e441628eaa9418c0d9",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}