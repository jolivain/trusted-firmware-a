{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "58872318_1251801a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 35
      },
      "lineNbr": 0,
      "author": {
        "id": 1000049
      },
      "writtenOn": "2021-03-19T14:19:32Z",
      "side": 1,
      "message": "As you can see on top patch of this patch stack https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/6167/46 I have been running the CI+1 and CI+2 and this patch in the stack introduces a failure in another component. One of the team is looking into this but it seems related to Sandrine\u0027s comments below. Without this patch we believe the patch stack would pass correctly.\n\nAs I mentioned to you previously small sets of patches progress through review more quickly and it is always better to keep patch stacks under 5 patches. With a patch stack all patches in the stack need to pass the quality bar of passing the CI and the various code reviews. With a stack nothing is ready to be merged until all are ready so you can see the disadvantage of large patch stacks and its often more efficient to build your platform support over a series of patches or small patch stacks rather than one large one like this which is over 45 patches. The sheer size dissuades people from looking at it when compared to smaller patches as patch reviewing is often done along side other activities. \n\nSaying that we are relatively close now with the issues in this patch and I believe one or two others.\n\nPlease do find another person from NXP to do the platform patches Code-Owner-Review on all patches in the NXP platform directory. We require Code-Owner-Review to be done by a different person than the Owner. Assuming everything else is resolved that will eventually block your patch getting merged.",
      "revId": "7a4a44c50a019f871046553e733a67156dd5dab4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "84c9486a_ba70f774",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 35
      },
      "lineNbr": 0,
      "author": {
        "id": 1000049
      },
      "writtenOn": "2021-03-19T16:35:15Z",
      "side": 1,
      "message": "Pankaj, the CI issue is being actively investigated its a breakage in another component due to this patch change but it may be a few days before we can advise what the best course is here. One option you have is to remove this patch from the patch stack and we proceed with the rest of the patch stack submission once you have your code owner reviews. I appreciate that your platform will not work without this change for now hence as I said we will follow up with you on that.\n\nThere is another patch regarding fiptool update that you are still discussing with one of the maintainers. Again you may wan to remove that patch as well and follow up after unless it can be resolved quickly.\n\nAlternatively for both these patches we await their resolution as part of this patch stack but then no patches will be able to be processed for submission at this time.\nJoanna",
      "revId": "7a4a44c50a019f871046553e733a67156dd5dab4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "837900ea_1c65df68",
        "filename": "common/bl_common.c",
        "patchSetId": 35
      },
      "lineNbr": 203,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2021-03-18T15:27:58Z",
      "side": 1,
      "message": "(minor) This sounds redundant with lines 195-197.",
      "range": {
        "startLine": 202,
        "startChar": 4,
        "endLine": 203,
        "endChar": 16
      },
      "revId": "7a4a44c50a019f871046553e733a67156dd5dab4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f71dd504_36a01d33",
        "filename": "common/bl_common.c",
        "patchSetId": 35
      },
      "lineNbr": 203,
      "author": {
        "id": 1000209
      },
      "writtenOn": "2021-03-20T06:25:38Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "837900ea_1c65df68",
      "range": {
        "startLine": 202,
        "startChar": 4,
        "endLine": 203,
        "endChar": 16
      },
      "revId": "7a4a44c50a019f871046553e733a67156dd5dab4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22af219c_3d9ef9d5",
        "filename": "common/bl_common.c",
        "patchSetId": 35
      },
      "lineNbr": 209,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2021-03-18T15:27:58Z",
      "side": 1,
      "message": "I understand why you need to do this change in the context of your platform but I am worried about the performance penalty it might have for other TF-A users. If we now invalidate the cache (using flush_dcache_range(), which does a data cache clean + invalidate maintenance operation) after the image loading operation then the authentication operation is likely to be slower because it won\u0027t benefit from the data being cached.\n\nI wonder whether you could move this cache maintenance operation down in the crypto library layer, closer to the h/w accelerator backend. We would also need a way to avoid the second flush_dcache_range() call after the authentication phase in your case. I need to give it more thoughts... Let me get back to you on this one.",
      "range": {
        "startLine": 205,
        "startChar": 0,
        "endLine": 209,
        "endChar": 0
      },
      "revId": "7a4a44c50a019f871046553e733a67156dd5dab4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "861925b4_d3862c6f",
        "filename": "common/bl_common.c",
        "patchSetId": 35
      },
      "lineNbr": 209,
      "author": {
        "id": 1000209
      },
      "writtenOn": "2021-03-20T06:25:38Z",
      "side": 1,
      "message": "Suggestion:\nCan we use CVAC(clean_dcache_range) instead of CIVAC(flush_dcache_range)?",
      "parentUuid": "22af219c_3d9ef9d5",
      "range": {
        "startLine": 205,
        "startChar": 0,
        "endLine": 209,
        "endChar": 0
      },
      "revId": "7a4a44c50a019f871046553e733a67156dd5dab4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ff346cb_84fa122d",
        "filename": "common/bl_common.c",
        "patchSetId": 35
      },
      "lineNbr": 209,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2021-03-22T07:09:17Z",
      "side": 1,
      "message": "Yes, actually that\u0027s also the conclusion we reached after discussing this within the team. There\u0027s a caveat, however. If we turn the clean+invalidate into a clean here, this seems to break some other test configs. We think there\u0027s code that implicitly relied on the cache being invalidated at this point. We\u0027re currently investigating this.",
      "parentUuid": "861925b4_d3862c6f",
      "range": {
        "startLine": 205,
        "startChar": 0,
        "endLine": 209,
        "endChar": 0
      },
      "revId": "7a4a44c50a019f871046553e733a67156dd5dab4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a415975_724886a2",
        "filename": "common/bl_common.c",
        "patchSetId": 35
      },
      "lineNbr": 209,
      "author": {
        "id": 1000209
      },
      "writtenOn": "2021-03-23T14:57:31Z",
      "side": 1,
      "message": "Did you reach to any conclusion?",
      "parentUuid": "9ff346cb_84fa122d",
      "range": {
        "startLine": 205,
        "startChar": 0,
        "endLine": 209,
        "endChar": 0
      },
      "revId": "7a4a44c50a019f871046553e733a67156dd5dab4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3fb5b238_b3366c35",
        "filename": "common/bl_common.c",
        "patchSetId": 35
      },
      "lineNbr": 209,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2021-03-23T17:18:03Z",
      "side": 1,
      "message": "We\u0027ve made some good progress: we\u0027ve now identified the root cause of the failure we were seeing with this patch and we\u0027ve pinpointed it to a stale L2 cache entry being reused, hence corrupting the SPM image relocation table. This requires a fix in the SPM code, which we\u0027re currently working on. We hope to post the fix for review by the end of this week.\n\nWe cannot take your patch (in its current form or with the changes we discussed in this thread) until the SPM fix is deployed, as this would break the CI loop. Also, we think this patch requires broader discussion on the TF-A mailing list, as it puts in light the requirement for each secure world image to properly invalidate its data cache. We\u0027ll start these discussions in the coming days.\n\nIn the meantime, we can offer you 2 ways to progress the NXP patch stack:\n\n1. either we drop this patch from the stack for the time being and merge the rest of them. We will take this patch back when the SPM dependency is resolved. Until then, your platform port won\u0027t work properly, I am afraid.\n\n2. or, if having the NXP platform port broken for a while is not an option for you, I reckon you could modify this patch such that the cache maintenance operation is moved down into the NXP CAAM driver for now, leaving the generic code unchanged. This would be a temporary solution until we get the SPM fix deployed. Once it is, you should be able to just revert the patch.\n\nPlease let us know which option you\u0027d prefer.",
      "parentUuid": "8a415975_724886a2",
      "range": {
        "startLine": 205,
        "startChar": 0,
        "endLine": 209,
        "endChar": 0
      },
      "revId": "7a4a44c50a019f871046553e733a67156dd5dab4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c53b498b_31f99781",
        "filename": "common/bl_common.c",
        "patchSetId": 35
      },
      "lineNbr": 209,
      "author": {
        "id": 1000209
      },
      "writtenOn": "2021-03-24T03:12:39Z",
      "side": 1,
      "message": "Option 2:\nI will drop this patch. \nI will take this patch to the platform specific code.",
      "parentUuid": "3fb5b238_b3366c35",
      "range": {
        "startLine": 205,
        "startChar": 0,
        "endLine": 209,
        "endChar": 0
      },
      "revId": "7a4a44c50a019f871046553e733a67156dd5dab4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbc25623_b6ff3b56",
        "filename": "common/bl_common.c",
        "patchSetId": 35
      },
      "lineNbr": 209,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2021-03-24T15:35:07Z",
      "side": 1,
      "message": "For the record, the SPM changes are now in the public review:\nhttps://review.trustedfirmware.org/q/topic:%22od%252Fboot-dcache-inv%22+(status:open%20OR%20status:merged)",
      "parentUuid": "c53b498b_31f99781",
      "range": {
        "startLine": 205,
        "startChar": 0,
        "endLine": 209,
        "endChar": 0
      },
      "revId": "7a4a44c50a019f871046553e733a67156dd5dab4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e031d45b_cc35f791",
        "filename": "common/bl_common.c",
        "patchSetId": 35
      },
      "lineNbr": 209,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2021-04-02T13:49:34Z",
      "side": 1,
      "message": "Hi Pankaj,\n\nSorry for not getting back to you earlier.\n\nWhile we wait for Olivier\u0027s SPM patches to be accepted, would you mind changing your patch as we\u0027ve discussed please? i.e. replacing the call to flush_dcache_range() by a call to clean_dcache_range() (keeping it between load_image() and auth_mod_verify_img())?\n\nThis will allow us to trigger the CI loop on this patch as soon as the dependent SPM patches are merged.",
      "parentUuid": "dbc25623_b6ff3b56",
      "range": {
        "startLine": 205,
        "startChar": 0,
        "endLine": 209,
        "endChar": 0
      },
      "revId": "7a4a44c50a019f871046553e733a67156dd5dab4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5238750a_2e77997e",
        "filename": "common/bl_common.c",
        "patchSetId": 35
      },
      "lineNbr": 209,
      "author": {
        "id": 1000209
      },
      "writtenOn": "2021-04-12T08:54:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e031d45b_cc35f791",
      "range": {
        "startLine": 205,
        "startChar": 0,
        "endLine": 209,
        "endChar": 0
      },
      "revId": "7a4a44c50a019f871046553e733a67156dd5dab4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}