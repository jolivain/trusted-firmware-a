{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "58872318_1251801a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 35
      },
      "lineNbr": 0,
      "author": {
        "id": 1000049
      },
      "writtenOn": "2021-03-19T14:19:32Z",
      "side": 1,
      "message": "As you can see on top patch of this patch stack https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/6167/46 I have been running the CI+1 and CI+2 and this patch in the stack introduces a failure in another component. One of the team is looking into this but it seems related to Sandrine\u0027s comments below. Without this patch we believe the patch stack would pass correctly.\n\nAs I mentioned to you previously small sets of patches progress through review more quickly and it is always better to keep patch stacks under 5 patches. With a patch stack all patches in the stack need to pass the quality bar of passing the CI and the various code reviews. With a stack nothing is ready to be merged until all are ready so you can see the disadvantage of large patch stacks and its often more efficient to build your platform support over a series of patches or small patch stacks rather than one large one like this which is over 45 patches. The sheer size dissuades people from looking at it when compared to smaller patches as patch reviewing is often done along side other activities. \n\nSaying that we are relatively close now with the issues in this patch and I believe one or two others.\n\nPlease do find another person from NXP to do the platform patches Code-Owner-Review on all patches in the NXP platform directory. We require Code-Owner-Review to be done by a different person than the Owner. Assuming everything else is resolved that will eventually block your patch getting merged.",
      "revId": "7a4a44c50a019f871046553e733a67156dd5dab4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "84c9486a_ba70f774",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 35
      },
      "lineNbr": 0,
      "author": {
        "id": 1000049
      },
      "writtenOn": "2021-03-19T16:35:15Z",
      "side": 1,
      "message": "Pankaj, the CI issue is being actively investigated its a breakage in another component due to this patch change but it may be a few days before we can advise what the best course is here. One option you have is to remove this patch from the patch stack and we proceed with the rest of the patch stack submission once you have your code owner reviews. I appreciate that your platform will not work without this change for now hence as I said we will follow up with you on that.\n\nThere is another patch regarding fiptool update that you are still discussing with one of the maintainers. Again you may wan to remove that patch as well and follow up after unless it can be resolved quickly.\n\nAlternatively for both these patches we await their resolution as part of this patch stack but then no patches will be able to be processed for submission at this time.\nJoanna",
      "revId": "7a4a44c50a019f871046553e733a67156dd5dab4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "837900ea_1c65df68",
        "filename": "common/bl_common.c",
        "patchSetId": 35
      },
      "lineNbr": 203,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2021-03-18T15:27:58Z",
      "side": 1,
      "message": "(minor) This sounds redundant with lines 195-197.",
      "range": {
        "startLine": 202,
        "startChar": 4,
        "endLine": 203,
        "endChar": 16
      },
      "revId": "7a4a44c50a019f871046553e733a67156dd5dab4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22af219c_3d9ef9d5",
        "filename": "common/bl_common.c",
        "patchSetId": 35
      },
      "lineNbr": 209,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2021-03-18T15:27:58Z",
      "side": 1,
      "message": "I understand why you need to do this change in the context of your platform but I am worried about the performance penalty it might have for other TF-A users. If we now invalidate the cache (using flush_dcache_range(), which does a data cache clean + invalidate maintenance operation) after the image loading operation then the authentication operation is likely to be slower because it won\u0027t benefit from the data being cached.\n\nI wonder whether you could move this cache maintenance operation down in the crypto library layer, closer to the h/w accelerator backend. We would also need a way to avoid the second flush_dcache_range() call after the authentication phase in your case. I need to give it more thoughts... Let me get back to you on this one.",
      "range": {
        "startLine": 205,
        "startChar": 0,
        "endLine": 209,
        "endChar": 0
      },
      "revId": "7a4a44c50a019f871046553e733a67156dd5dab4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}