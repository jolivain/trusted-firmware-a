{
  "comments": [
    {
      "key": {
        "uuid": "cc7474e9_82721413",
        "filename": "drivers/io/io_encrypted.c",
        "patchSetId": 11
      },
      "lineNbr": 158,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2020-03-03T12:29:33Z",
      "side": 1,
      "message": "Why is this initialization required?\n\nIt seems to me that it is fetched from the header flags at line 181 and is not used before that so it seems safe to me to leave the variable uninitialized until then.",
      "range": {
        "startLine": 158,
        "startChar": 34,
        "endLine": 158,
        "endChar": 51
      },
      "revId": "c7b800eb0c5d0dcbd77efb0144b5d89388f06ca6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b092645c_9bcf4220",
        "filename": "drivers/io/io_encrypted.c",
        "patchSetId": 11
      },
      "lineNbr": 158,
      "author": {
        "id": 1000132
      },
      "writtenOn": "2020-03-03T13:32:19Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "cc7474e9_82721413",
      "range": {
        "startLine": 158,
        "startChar": 34,
        "endLine": 158,
        "endChar": 51
      },
      "revId": "c7b800eb0c5d0dcbd77efb0144b5d89388f06ca6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "699cefdb_d3df4aac",
        "filename": "drivers/io/io_encrypted.c",
        "patchSetId": 11
      },
      "lineNbr": 184,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2020-03-03T12:29:33Z",
      "side": 1,
      "message": "MISRA will require this to have further parentheses:\n\n\tif ((header.iv_len \u003e ENC_MAX_IV_SIZE) ||\n\t    (header.tag_len \u003e ENC_MAX_TAG_SIZE))\n\nAs it\u0027s in common code, we thrive not to violate MISRA guidelines.",
      "range": {
        "startLine": 183,
        "startChar": 1,
        "endLine": 184,
        "endChar": 41
      },
      "revId": "c7b800eb0c5d0dcbd77efb0144b5d89388f06ca6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f7df4f1_88c8d852",
        "filename": "drivers/io/io_encrypted.c",
        "patchSetId": 11
      },
      "lineNbr": 184,
      "author": {
        "id": 1000132
      },
      "writtenOn": "2020-03-03T13:32:19Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "699cefdb_d3df4aac",
      "range": {
        "startLine": 183,
        "startChar": 1,
        "endLine": 184,
        "endChar": 41
      },
      "revId": "c7b800eb0c5d0dcbd77efb0144b5d89388f06ca6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b6af0c8_3798f96e",
        "filename": "include/tools_share/firmware_encrypted.h",
        "patchSetId": 11
      },
      "lineNbr": 29,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2020-03-03T12:29:33Z",
      "side": 1,
      "message": "Are these macros not redundant with the ones in include/drivers/auth/crypto_mod.h (CRYPTO_MAX_IV_SIZE and CRYPTO_MAX_TAG_SIZE)?",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 29,
        "endChar": 29
      },
      "revId": "c7b800eb0c5d0dcbd77efb0144b5d89388f06ca6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8098f02_717cb463",
        "filename": "include/tools_share/firmware_encrypted.h",
        "patchSetId": 11
      },
      "lineNbr": 29,
      "author": {
        "id": 1000132
      },
      "writtenOn": "2020-03-03T13:32:19Z",
      "side": 1,
      "message": "I am not sure if they are redundant. How would you like to have shareable macros among crypto header and a IO header that is shared with tools?",
      "parentUuid": "6b6af0c8_3798f96e",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 29,
        "endChar": 29
      },
      "revId": "c7b800eb0c5d0dcbd77efb0144b5d89388f06ca6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "049a0778_6d7837ff",
        "filename": "include/tools_share/firmware_encrypted.h",
        "patchSetId": 11
      },
      "lineNbr": 29,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2020-03-03T16:01:56Z",
      "side": 1,
      "message": "I guess I didn\u0027t properly think this through but initially thought that the crypto driver could use this header (include/tools_share/firmware_encrypted.h). Is this not possible? Would that pollute the firmware namespace with irrelevant tools definitions? At first glance, I don\u0027t see anything in this file that the firmware would not want to pull in but I might be overlooking something.",
      "parentUuid": "f8098f02_717cb463",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 29,
        "endChar": 29
      },
      "revId": "c7b800eb0c5d0dcbd77efb0144b5d89388f06ca6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8706e38_83dd5ec2",
        "filename": "include/tools_share/firmware_encrypted.h",
        "patchSetId": 11
      },
      "lineNbr": 29,
      "author": {
        "id": 1000132
      },
      "writtenOn": "2020-03-03T16:28:06Z",
      "side": 1,
      "message": "It looks like almost every macro/enum in header: include/drivers/auth/crypto_mod.h starts with CRYPTO_*. Although its definitely possible to include tools header in crypto_mod.h but given the naming convention in crypto module it doesn\u0027t sounds appropriate to me. Also, we may want to extend this tools header in future and having this dependency sounds limiting to me.",
      "parentUuid": "049a0778_6d7837ff",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 29,
        "endChar": 29
      },
      "revId": "c7b800eb0c5d0dcbd77efb0144b5d89388f06ca6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83c63166_d080c197",
        "filename": "include/tools_share/firmware_encrypted.h",
        "patchSetId": 11
      },
      "lineNbr": 29,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2020-03-04T07:40:54Z",
      "side": 1,
      "message": "Fair enough.",
      "parentUuid": "c8706e38_83dd5ec2",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 29,
        "endChar": 29
      },
      "revId": "c7b800eb0c5d0dcbd77efb0144b5d89388f06ca6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e816de02_10d6e618",
        "filename": "include/tools_share/firmware_encrypted.h",
        "patchSetId": 11
      },
      "lineNbr": 32,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2020-03-03T12:29:33Z",
      "side": 1,
      "message": "The coding style in TF-A advocates not to typedef structures, see https://trustedfirmware-a.readthedocs.io/en/latest/process/coding-style.html#typedefs\n\nCould you please remove the typedef and simply export struct fw_enc_hdr?",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 32,
        "endChar": 7
      },
      "revId": "c7b800eb0c5d0dcbd77efb0144b5d89388f06ca6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d45e9fe7_b605cf0a",
        "filename": "include/tools_share/firmware_encrypted.h",
        "patchSetId": 11
      },
      "lineNbr": 32,
      "author": {
        "id": 1000132
      },
      "writtenOn": "2020-03-03T13:32:19Z",
      "side": 1,
      "message": "This typedef was inspired from existing typedef in file: include/tools_share/firmware_image_package.h. But since we would like to avoid this practice going forward as per coding style, so will make it a simple struct.",
      "parentUuid": "e816de02_10d6e618",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 32,
        "endChar": 7
      },
      "revId": "c7b800eb0c5d0dcbd77efb0144b5d89388f06ca6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    }
  ]
}