{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2573eef6_90402b2f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2021-03-11T05:45:42Z",
      "side": 1,
      "message": "Can you please document the root cause and the fix in the commit message?",
      "revId": "58bab294794da77d12ae6b743aae9dc6b62892a0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5b4f4429_59ead97d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2021-03-12T22:03:38Z",
      "side": 1,
      "message": "\u003e Can you please document the root cause and the fix in the commit message?\n\nDone.",
      "parentUuid": "2573eef6_90402b2f",
      "revId": "58bab294794da77d12ae6b743aae9dc6b62892a0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b5c76e8_cafa3c4e",
        "filename": "services/spd/tspd/tspd_main.c",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2021-03-06T00:59:37Z",
      "side": 1,
      "message": "where is this done and why is this done? When tsp yields, should you not unconditionally switch back to normal world? if that happens, and the HPPIR is a S-EL1 interrupt, on ERET to normal world, we would simply enter back EL3 where we can eret back to S-EL1 no?",
      "range": {
        "startLine": 136,
        "startChar": 7,
        "endLine": 137,
        "endChar": 32
      },
      "revId": "58bab294794da77d12ae6b743aae9dc6b62892a0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82124fb7_336495a7",
        "filename": "services/spd/tspd/tspd_main.c",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2021-03-08T21:14:37Z",
      "side": 1,
      "message": "I am not sure I completely understand your suggestions. Can you clarify the statement \"if that happens, and the HPPIR is a S-EL1 interrupt, on ERET to normal world, we would simply enter back EL3\" ?\n\nI have provided my replies here:\n\nIt is done in the common exception handler code: https://git.trustedfirmware.org/TF-A/trusted-firmware-a.git/tree/bl31/aarch64/runtime_exceptions.S#n232\nIt helps to know which interrupt caused the exception and then invoke the appropriate handler. In this scenario, the world switch to EL3 was originally due to a NS interrupt routed as an FIQ when core was in S-EL1. But in the meantime, since a secure timer interrupt got triggered, I think we should drop back to S-EL1 since it has been configured to be of higher priority, service the secure timer and then switch to EL3 and then further to normal world where the non-secure interrupt will be handled. \nPlease suggest if there is any issue in this implementation. I think I have not violated the basic principles of interrupt management framework:\n1. Secure world should be in charge of handling secure interrupts\n2. Interrupts from other world need a context(world) switch while making sure the pre-empted context is preserved.\nPlease correct me if I am wrong.",
      "parentUuid": "6b5c76e8_cafa3c4e",
      "range": {
        "startLine": 136,
        "startChar": 7,
        "endLine": 137,
        "endChar": 32
      },
      "revId": "58bab294794da77d12ae6b743aae9dc6b62892a0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99eaa3c4_3019c45e",
        "filename": "services/spd/tspd/tspd_main.c",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2021-03-10T22:29:30Z",
      "side": 1,
      "message": "Hi Madhukar, i think what you have is fine. I\u0027m trying to understand the sequence correctly:\n1) we are executing in S-EL1.\n2) We get a NS interrupt. This takes us to EL3 FIQ handler.\n3) EL3 FIQ handler starts executing and within a few instructions the secure timer fires, making it the HPPIR.\n3) EL3 FIQ handler sees the HPPIR and sees that it is a secure interrupt and calls this function?\n\nWhen a NS interrup fires, i thought tspd_ns_interrupt_handler is called so i\u0027m trying to understand why the fix is in this function. It seems fundamentally wrong that this function is called when execution is in secure world...",
      "parentUuid": "82124fb7_336495a7",
      "range": {
        "startLine": 136,
        "startChar": 7,
        "endLine": 137,
        "endChar": 32
      },
      "revId": "58bab294794da77d12ae6b743aae9dc6b62892a0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca3e0672_6fdd4d8d",
        "filename": "services/spd/tspd/tspd_main.c",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2021-03-12T21:58:35Z",
      "side": 1,
      "message": "Hi Raghu\nThanks a lot for taking time to review this patch.\n\nYour questions are exactly what I had when I started debugging this issue last year. Here is my understanding of how the execution ends up in tspd_sel1_interrupt_handler() rather than tspd_ns_interrupt_handler() when a non-secure timer got fired while cpu is in S-EL1.\nUpon jumping to FIQ handler, this is the sequence of steps :\nhttp://git.trustedfirmware.org/TF-A/trusted-firmware-a.git/tree/bl31/aarch64/runtime_exceptions.S\n\nLine 380 -\u003e 383 -\u003e 236(plat_ic_get_pending_interrupt_type)\n\nhttp://git.trustedfirmware.org/TF-A/trusted-firmware-a.git/tree/plat/common/plat_gicv3.c#n76\n\nBefore execution reaches this function(line 76), since a high priority secure interrupt got fired, this function returns \"INTR_TYPE_S_EL1\" i.e., spurious 1020. (Ideally, if this secure interrupt didn\u0027t get fired, we would have expected this function to return \"INTR_TYPE_NS\" i.e., spurious 1021). This is passed as an argument to function get_interrupt_type_handler() which then returns the function pointer tspd_sel1_interrupt_handler().\n\nPlease advise if I was able to answer your question.",
      "parentUuid": "99eaa3c4_3019c45e",
      "range": {
        "startLine": 136,
        "startChar": 7,
        "endLine": 137,
        "endChar": 32
      },
      "revId": "58bab294794da77d12ae6b743aae9dc6b62892a0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}