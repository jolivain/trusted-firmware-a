{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "496e45a6_86683f82",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1000443
      },
      "writtenOn": "2024-01-10T16:01:06Z",
      "side": 1,
      "message": "CI fails on commit message :-(\n\nShould I drop empty lines around list or something?",
      "revId": "688fd4f4d70bfd7c9a470a89922b7c158ef80fe1",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "749ada27_9a42a6be",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2024-01-10T16:31:13Z",
      "side": 1,
      "message": "Hi Marcin, the scope should be qemu-sbsa instead of qemu_sbsa. But it seems the CI fails because of checkpatch: spaces at the beginning of some comments lines instead of tabs",
      "parentUuid": "496e45a6_86683f82",
      "revId": "688fd4f4d70bfd7c9a470a89922b7c158ef80fe1",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "232115c2_b70529f0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1000443
      },
      "writtenOn": "2024-01-10T16:46:22Z",
      "side": 1,
      "message": "Thanks, will fix",
      "parentUuid": "749ada27_9a42a6be",
      "revId": "688fd4f4d70bfd7c9a470a89922b7c158ef80fe1",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a3c1aad1_25d3d1bf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000120
      },
      "writtenOn": "2024-01-10T13:24:47Z",
      "side": 1,
      "message": "As I asked before. Why is it better to do the device tree parsing at EL3 instead of normal world? It would be nice to know the technical argument for if I should review something here.",
      "revId": "688fd4f4d70bfd7c9a470a89922b7c158ef80fe1",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3fe1ba43_92bce074",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000541
      },
      "writtenOn": "2024-01-10T14:46:42Z",
      "side": 1,
      "message": "And yet again I regret my choice to reuse an existing encapsulation format instead of inventing my own.\n\nAs we have explained before, this is not a linux device tree. It is not even a firmware device tree. It is information passed from qemu to describe the information a hardware platform would have other mechanisms to discover at runtime, that are affected by the qemu command line. Ultimately this device tree be replaced by IPC calls to an emulated SCP. And when we do that, we won\u0027t then have to rewrite Normal world firmware to cope.",
      "parentUuid": "a3c1aad1_25d3d1bf",
      "revId": "688fd4f4d70bfd7c9a470a89922b7c158ef80fe1",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26ac2764_70ba5a8a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000120
      },
      "writtenOn": "2024-01-10T15:58:40Z",
      "side": 1,
      "message": "Are you planning to route these SiP SMCs to an emulated SCP? Marcin said previously that these SMCs are unique for the QEMU platform port. Does that mean this concept will only be used for this platform and others will use something else?",
      "parentUuid": "3fe1ba43_92bce074",
      "revId": "688fd4f4d70bfd7c9a470a89922b7c158ef80fe1",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f488da55_f0e81cdd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000443
      },
      "writtenOn": "2024-01-10T16:07:27Z",
      "side": 1,
      "message": "Each SBSA/SBBR/SystemReadySR platform is using own firmware. From TF-A to EDK2 (or equivalents).\n\nQEMU/sbsa-ref shares parts of TF-A with QEMU/virt but SIP part is sbsa-ref specific. And there are no plans for reusing it for other platforms as this is platform specific.",
      "parentUuid": "26ac2764_70ba5a8a",
      "revId": "688fd4f4d70bfd7c9a470a89922b7c158ef80fe1",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9a315b1_6a853e40",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000541
      },
      "writtenOn": "2024-01-11T12:57:44Z",
      "side": 1,
      "message": "What Marcin said. I\u0027m adding some superfluous detail below:\n\nYes. Ish. Well, route implies a specific design. The DT will go away and the information will instead come from the SCP. There is no need to map the SMC call directly to an SCP query. More likely we\u0027d retrieve the information once on boot and cache it.  \n\nThese SMCs are unique for the qemu sbsa-ref machine (known in tf-a as qemu_sbsa).\nIf we were to add generic qemu machines for other, current or future, SystemReady profiles I guess it\u0027s feasible they could be shared, or that they would have a different set of SiP functions. (There is currently no plan for this.)\n\nWhile I think it would be great if Arm could standardise some of these platform discovery type calls, I\u0027m sure the response would be along the lines of \"don\u0027t want to stifle innovation\". If they did, those would move from the SiP function ID space to the Arch function ID space and be covered by some official specification.",
      "parentUuid": "f488da55_f0e81cdd",
      "revId": "688fd4f4d70bfd7c9a470a89922b7c158ef80fe1",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2cb7354_2a9bc435",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000120
      },
      "writtenOn": "2024-01-11T14:37:13Z",
      "side": 1,
      "message": "So this is an intermediate interface until you can make an SCP query?",
      "parentUuid": "f9a315b1_6a853e40",
      "revId": "688fd4f4d70bfd7c9a470a89922b7c158ef80fe1",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66878aef_2e96cedf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000541
      },
      "writtenOn": "2024-01-11T16:42:22Z",
      "side": 1,
      "message": "This is platform-specific data being passed to TF-A in a platform specific way for platform-specific purposes, and made available to Non-secure firmware/software via a set of SiP-specific SMC functions.\nWhat are you trying to determine?",
      "parentUuid": "f2cb7354_2a9bc435",
      "revId": "688fd4f4d70bfd7c9a470a89922b7c158ef80fe1",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a3edef7d_3597b4c9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000120
      },
      "writtenOn": "2024-01-11T16:58:45Z",
      "side": 1,
      "message": "I\u0027m trying to find an answer to my question \"Why is it better to do the device tree parsing at EL3 instead of normal world?\".\n\nIt seems that The Non-secure firmware/software could have done the platform-specific thing directly on the platform-specific data. That would have saved us some churn and being stuck with another ABI. I guess I have my answer now.",
      "parentUuid": "66878aef_2e96cedf",
      "revId": "688fd4f4d70bfd7c9a470a89922b7c158ef80fe1",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dd086e38_6dd2e811",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000541
      },
      "writtenOn": "2024-01-11T17:23:36Z",
      "side": 1,
      "message": "Yes, but I was an idiot, and decided to pass the information from qemu to TF-A in the DT storage format since that meant libraries for encoding/decoding the info already existed in both, thinking that would simplify things compared to inventing our own custom format.\n\nInstead, this keeps leading to misunderstandings of what the data *is*\nand this exact conversation keeps popping up again and again and again.\n\nThis platform has been developed in an iterative fashion, which is why the DT *was* initially passed to Non-secure firmware (because again, libfdt was available, and I\u0027m an idiot). The churn was caused by the iterative platform development, not the use of the DT storage format for passing qemu runtime configuration.\nThe ABI this data-unfortunately-stored-in-device-tree forms will go away when the device tree goes away.\n\nThe purpose of this platform is the mimic a generic sbsa platform on which to run sbbr-compliant firmware, to provide a generic SystemReady SR development environment. Device tree has no relevance on a SystemReady SR platform.",
      "parentUuid": "a3edef7d_3597b4c9",
      "revId": "688fd4f4d70bfd7c9a470a89922b7c158ef80fe1",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}