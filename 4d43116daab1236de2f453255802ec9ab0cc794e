{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9788d98b_7cf0b7df",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 7
      },
      "lineNbr": 191,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2024-02-29T01:06:19Z",
      "side": 1,
      "message": "why DSB here but not in other places above?",
      "revId": "4d43116daab1236de2f453255802ec9ab0cc794e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42745ff0_da8fd10b",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 7
      },
      "lineNbr": 191,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2024-02-29T09:11:01Z",
      "side": 1,
      "message": "Line #221",
      "parentUuid": "9788d98b_7cf0b7df",
      "revId": "4d43116daab1236de2f453255802ec9ab0cc794e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9cc0eceb_90f03fa7",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 7
      },
      "lineNbr": 191,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2024-02-29T23:01:10Z",
      "side": 1,
      "message": "yes but why make the lookup table for others but not this?",
      "parentUuid": "42745ff0_da8fd10b",
      "revId": "4d43116daab1236de2f453255802ec9ab0cc794e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64eabfe9_f4d9053f",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 7
      },
      "lineNbr": 191,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2024-03-01T17:38:01Z",
      "side": 1,
      "message": "because tlbi_2mb(), tlbi_32mb() \u0026 tlbi_512mb() don\u0027t depend on GPCCR_EL3.PGS value, but tlbi_page() does.",
      "parentUuid": "9cc0eceb_90f03fa7",
      "revId": "4d43116daab1236de2f453255802ec9ab0cc794e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "553ea8c7_b4bcffaa",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 7
      },
      "lineNbr": 740,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2024-02-29T01:06:19Z",
      "side": 1,
      "message": "These clean up changes can be a separate patch. this just adds to review complexity since you have to squint to make sure there is no functional change.",
      "revId": "4d43116daab1236de2f453255802ec9ab0cc794e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e629b847_b5e1a3db",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 7
      },
      "lineNbr": 740,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2024-02-29T09:13:01Z",
      "side": 1,
      "message": "There is no point in a separate clean up patch, because of the major change in functionality.",
      "parentUuid": "553ea8c7_b4bcffaa",
      "revId": "4d43116daab1236de2f453255802ec9ab0cc794e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c86bd81_dd2128ea",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 7
      },
      "lineNbr": 740,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2024-02-29T22:19:27Z",
      "side": 1,
      "message": "disagree. that\u0027s why we have conventional commits for chore, refactor, feature etc. The patch is flagged as extra large, so this can help reduce review difficulty.",
      "parentUuid": "e629b847_b5e1a3db",
      "revId": "4d43116daab1236de2f453255802ec9ab0cc794e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d16250f_a0a2a48e",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 7
      },
      "lineNbr": 913,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2024-02-29T01:06:19Z",
      "side": 1,
      "message": "what does removing the gpt_ buy us?",
      "range": {
        "startLine": 913,
        "startChar": 17,
        "endLine": 913,
        "endChar": 31
      },
      "revId": "4d43116daab1236de2f453255802ec9ab0cc794e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "117df64b_419e4445",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 7
      },
      "lineNbr": 913,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2024-02-29T09:11:01Z",
      "side": 1,
      "message": "\"gpt_\" removed from all static functions names, \u0026 kept for functions with external linkage.",
      "parentUuid": "8d16250f_a0a2a48e",
      "range": {
        "startLine": 913,
        "startChar": 17,
        "endLine": 913,
        "endChar": 31
      },
      "revId": "4d43116daab1236de2f453255802ec9ab0cc794e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12049073_7cee176f",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 7
      },
      "lineNbr": 913,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2024-02-29T22:19:27Z",
      "side": 1,
      "message": "this is a good candidate to move to separate patches. just because it is large, doesn\u0027t mean you pack in all the changes you can. That\u0027s why we have conventional commits with different scopes so it can help reviewers as well.",
      "parentUuid": "117df64b_419e4445",
      "range": {
        "startLine": 913,
        "startChar": 17,
        "endLine": 913,
        "endChar": 31
      },
      "revId": "4d43116daab1236de2f453255802ec9ab0cc794e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5c2a78f_6b263ddc",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 7
      },
      "lineNbr": 1365,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2024-02-29T01:06:19Z",
      "side": 1,
      "message": "not clear why you are calculating these values. would be good to have some more detailed comments. example, not clear why you want log2 for number of l1 entries in 512mb, but number of entries for 2mb.",
      "range": {
        "startLine": 1358,
        "startChar": 1,
        "endLine": 1365,
        "endChar": 55
      },
      "revId": "4d43116daab1236de2f453255802ec9ab0cc794e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6efdf6e_0e1f99b4",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 7
      },
      "lineNbr": 1365,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2024-02-29T09:11:01Z",
      "side": 1,
      "message": "It\u0027s clear from usage of these variables:\nline #1364: explains what gpt_l1_cnt_2mb is used for.\nline #1442: gpt_512mb_bit is used to calculate index of 512MB block.",
      "parentUuid": "d5c2a78f_6b263ddc",
      "range": {
        "startLine": 1358,
        "startChar": 1,
        "endLine": 1365,
        "endChar": 55
      },
      "revId": "4d43116daab1236de2f453255802ec9ab0cc794e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17452834_df931b41",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 7
      },
      "lineNbr": 1365,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2024-02-29T22:19:27Z",
      "side": 1,
      "message": "new patches have been added. can you provide new line numbers?\nThe comment does not read well since it isn\u0027t clear to me (another reader, which is the purpose of a comment).",
      "parentUuid": "a6efdf6e_0e1f99b4",
      "range": {
        "startLine": 1358,
        "startChar": 1,
        "endLine": 1365,
        "endChar": 55
      },
      "revId": "4d43116daab1236de2f453255802ec9ab0cc794e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "533db048_00d0cc4d",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 7
      },
      "lineNbr": 1420,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2024-02-29T01:06:19Z",
      "side": 1,
      "message": "can this not change from run_time init and as we change",
      "range": {
        "startLine": 1420,
        "startChar": 16,
        "endLine": 1420,
        "endChar": 28
      },
      "revId": "4d43116daab1236de2f453255802ec9ab0cc794e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1512ac45_191bde20",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 7
      },
      "lineNbr": 1420,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2024-02-29T09:11:01Z",
      "side": 1,
      "message": "NO.",
      "parentUuid": "533db048_00d0cc4d",
      "range": {
        "startLine": 1420,
        "startChar": 16,
        "endLine": 1420,
        "endChar": 28
      },
      "revId": "4d43116daab1236de2f453255802ec9ab0cc794e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d780715_2635989c",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 7
      },
      "lineNbr": 1420,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2024-02-29T22:19:27Z",
      "side": 1,
      "message": "can you explain more why it cannot change? what happens if there are delegates and undelegates at lower granularity as time goes on? won\u0027t the first L1 block descriptor location change?",
      "parentUuid": "1512ac45_191bde20",
      "range": {
        "startLine": 1420,
        "startChar": 16,
        "endLine": 1420,
        "endChar": 28
      },
      "revId": "4d43116daab1236de2f453255802ec9ab0cc794e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58b17aa4_dfb22310",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 7
      },
      "lineNbr": 1420,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2024-03-01T17:38:01Z",
      "side": 1,
      "message": "1. Existing API supports only single 4KB page delegation/undelegation.\n2. With block (multiple pages delegation/undelegation) API added, it is still won\u0027t be possible to reprogram GPCCR_EL3.L0GPTSZ \u0026 GPCCR_EL3.PGS in runtime, as it would have required to re-initialise GPT L0 \u0026 all L1 tables, which would break existing mappings.",
      "parentUuid": "1d780715_2635989c",
      "range": {
        "startLine": 1420,
        "startChar": 16,
        "endLine": 1420,
        "endChar": 28
      },
      "revId": "4d43116daab1236de2f453255802ec9ab0cc794e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aaecde7f_6627667e",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 7
      },
      "lineNbr": 1655,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2024-02-29T01:06:19Z",
      "side": 1,
      "message": "assert is insufficient. it gets compiled out in production builds, and NS can simply send the SMC and we would assume it is secure. This needs to be an if check.",
      "range": {
        "startLine": 1655,
        "startChar": 2,
        "endLine": 1655,
        "endChar": 8
      },
      "revId": "4d43116daab1236de2f453255802ec9ab0cc794e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58b2b301_e549e063",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 7
      },
      "lineNbr": 1655,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2024-02-29T09:11:01Z",
      "side": 1,
      "message": "what\u0027s about\n\t/* Delegate request can only come from REALM or SECURE */\n\tassert(src_sec_state \u003d\u003d SMC_FROM_REALM ||\n\t       src_sec_state \u003d\u003d SMC_FROM_SECURE);\nin the original code?",
      "parentUuid": "aaecde7f_6627667e",
      "range": {
        "startLine": 1655,
        "startChar": 2,
        "endLine": 1655,
        "endChar": 8
      },
      "revId": "4d43116daab1236de2f453255802ec9ab0cc794e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d963c3bf_9fb10d30",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 7
      },
      "lineNbr": 1655,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2024-02-29T22:19:27Z",
      "side": 1,
      "message": "yes it is a problem in the original code as well. can be a separate patch to fix this.",
      "parentUuid": "58b2b301_e549e063",
      "range": {
        "startLine": 1655,
        "startChar": 2,
        "endLine": 1655,
        "endChar": 8
      },
      "revId": "4d43116daab1236de2f453255802ec9ab0cc794e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2db4577_ddf03f4f",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 7
      },
      "lineNbr": 1655,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2024-03-01T17:42:06Z",
      "side": 1,
      "message": "Are you suggesting to replace all 24 assertions in the original code with a code returning an error?",
      "parentUuid": "d963c3bf_9fb10d30",
      "range": {
        "startLine": 1655,
        "startChar": 2,
        "endLine": 1655,
        "endChar": 8
      },
      "revId": "4d43116daab1236de2f453255802ec9ab0cc794e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "056836a6_cc93ffd0",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 7
      },
      "lineNbr": 1661,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2024-02-29T01:06:19Z",
      "side": 1,
      "message": "not clear that get_gpu_params acquires the lokc. Can we not acquire it before calling get_gpi_params? otherwise bit_unlock looks like you missed the lock.",
      "revId": "4d43116daab1236de2f453255802ec9ab0cc794e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0064bad7_0a61832c",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 7
      },
      "lineNbr": 1661,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2024-02-29T09:11:01Z",
      "side": 1,
      "message": "line #1453. Lock is acquired only after all checks have been performed, There is no point to acquire it before \u0026 then release in case of an error.",
      "parentUuid": "056836a6_cc93ffd0",
      "revId": "4d43116daab1236de2f453255802ec9ab0cc794e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bcb27229_058abaf2",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 7
      },
      "lineNbr": 1661,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2024-02-29T22:19:27Z",
      "side": 1,
      "message": "yes, this is a readability issue. Other folks who write the code may not do it. There needs to be discipline in how we code lock acquire and releases and randomly acquiring it in some function and releasing it makes no sense. in that case, you can also release the lock in the function itself on error, for example.",
      "parentUuid": "0064bad7_0a61832c",
      "revId": "4d43116daab1236de2f453255802ec9ab0cc794e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a55581a7_9ba72567",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 7
      },
      "lineNbr": 1661,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2024-03-01T17:42:06Z",
      "side": 1,
      "message": "Who are \"Other folks who write the code\"?\nThe lock is the whole 512MB block \u0026 should be kept for a little time as possible.",
      "parentUuid": "bcb27229_058abaf2",
      "revId": "4d43116daab1236de2f453255802ec9ab0cc794e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}