{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8c1e9ef4_df6e6b97",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000655
      },
      "writtenOn": "2023-01-26T15:56:53Z",
      "side": 1,
      "message": "Hello,\n\nWhen validating ATF v2.8 on Hikey960, in FF-A configuration (SPMC_AT_EL3\u003d1), we are hitting this assert().\nReverting the patch allows us to boot the board.\n\nInterestingly, the issue does not appear on non-FFA configuration (SPD\u003dtbase).\n\nThanks,\nLukas",
      "revId": "660c208d9bd2770f295005fc26a9b6f788567f41",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b84af23d_810db89d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2023-01-27T09:52:48Z",
      "side": 1,
      "message": "Madhukar, could it be reverted since it fails on hikey960?",
      "parentUuid": "8c1e9ef4_df6e6b97",
      "revId": "660c208d9bd2770f295005fc26a9b6f788567f41",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8bfde2a_6ef4fff9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2023-01-27T14:11:30Z",
      "side": 1,
      "message": "Hi Haojian\nI would like the patch author to take a look at this issue before reverting the patch.\n\nCC @Anand",
      "parentUuid": "b84af23d_810db89d",
      "revId": "660c208d9bd2770f295005fc26a9b6f788567f41",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee270118_b077b45e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000700
      },
      "writtenOn": "2023-01-31T08:30:19Z",
      "side": 1,
      "message": "Hello LukasHanel, which assert are you hitting? \n\nThe spec clearly says HCS DP will be set along with IS.UCCS and no polling is required:\n```\nIn case the GenericErrorCode of the completed DME_LINKSTARTUP command is SUCCESS, the HCS.DP is set in addition to the IS.UCCS bit.\n```\nSo after we see IS.UCCS bit and GenericErrorCode, we should instantly see HCS DP set (https://elixir.bootlin.com/linux/v6.1.7/source/drivers/ufs/core/ufshcd.c#L4764)\n\nAs for the other assert, I see this in JEDEC spec:\n```\nUTP Transfer Request List Ready (UTRLRDY): This field indicates whether the host\ncontroller is ready to process UTP Transfer Request.\nThis field is cleared to ‘0’ by host controller when one of the following conditions occur:\n The device presence is not detected;\n UTP Transfer Request List is full;\n There is an error with host controller or device that is not command specific.\nHost software shall only set the UTRLRSR bit to ‘1’ if HCS. UTRLRDY is set to ‘1\u0027\n```\nIf you are hitting the UTRLRSR assert, then we should check if HCS.UTRLRDY is set before setting UTRLRSR, if it isn\u0027t then it\u0027s an IO error (https://elixir.bootlin.com/linux/v6.1.7/source/drivers/ufs/core/ufshcd.c#L4556)",
      "parentUuid": "d8bfde2a_6ef4fff9",
      "revId": "660c208d9bd2770f295005fc26a9b6f788567f41",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42b457c6_0e18559f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000655
      },
      "writtenOn": "2023-01-31T09:23:16Z",
      "side": 1,
      "message": "Hi Anand, I hit the DP assert.\nIt would seem to me, that the board is not aligned with the spec.\nMaybe an errata should be issued and then we can keep the loop (possibly adding a bound), and annotate it with the reference of the errata.\nI have not yet tried a release build, since still few other blockers with v2.8.\nI could imagine that we could also remove the assert completely.",
      "parentUuid": "ee270118_b077b45e",
      "revId": "660c208d9bd2770f295005fc26a9b6f788567f41",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "312ff595_369bc833",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000700
      },
      "writtenOn": "2023-01-31T09:25:57Z",
      "side": 1,
      "message": "Understood, a loop with a bound sounds better to me than removing the assert.",
      "parentUuid": "42b457c6_0e18559f",
      "revId": "660c208d9bd2770f295005fc26a9b6f788567f41",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d39d41cd_85f01259",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000655
      },
      "writtenOn": "2023-01-31T09:38:14Z",
      "side": 1,
      "message": "Hi,\nActually, I just checked with the our engineer, the problem is different than what I said.\nThe assert should say \n`assert((mmio_read_32(base + HCS) \u0026 HCS_DP) \u003d\u003d 1);`\nInstead of\n`assert((mmio_read_32(base + HCS) \u0026 HCS_DP) \u003d\u003d 0);`\nThe loop was waiting for it to be not 0 anymore. But as you said, we expect it to be 1 immediately.",
      "parentUuid": "312ff595_369bc833",
      "revId": "660c208d9bd2770f295005fc26a9b6f788567f41",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49e65a2d_e1a858b8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000700
      },
      "writtenOn": "2023-01-31T09:42:02Z",
      "side": 1,
      "message": "Ah, correct, that\u0027s most likely the issue here. Thanks for clarifying!\n\nOne question: you still have a scenario where this assert works? Wonder if a loop is needed in that case.",
      "parentUuid": "d39d41cd_85f01259",
      "revId": "660c208d9bd2770f295005fc26a9b6f788567f41",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}