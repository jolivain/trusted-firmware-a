{
  "comments": [
    {
      "key": {
        "uuid": "567fbf51_6fa45cad",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2019-12-10T08:12:58Z",
      "side": 1,
      "message": "Is this still true when LTO are enabled?\n\nMy understanding is that making these variables global fixes the problem here because then the compiler cannot assume that they won\u0027t be modified outside of this file so it has to be conservative and really emit the ldr instruction.\n\nHowever, if LTO are enabled then the compiler might have enough information about the complete program to figure out that these variables are in fact only accessed in this file and then it\u0027s as if they were static in the first place and we\u0027re back to square one...",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 20,
        "endChar": 0
      },
      "revId": "63fded217fb01c9f6a6f958452c70aebe05b0aa3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec363d0c_8e8ba2f7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1000219
      },
      "writtenOn": "2019-12-11T00:14:44Z",
      "side": 1,
      "message": "That\u0027s a good point. I have resorted to using the \u0027used\u0027 attribute for the variables. This should also resolve potential LTO issue.",
      "parentUuid": "567fbf51_6fa45cad",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 20,
        "endChar": 0
      },
      "revId": "63fded217fb01c9f6a6f958452c70aebe05b0aa3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b5ce76c_1bbb5582",
        "filename": "include/lib/utils.h",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2019-12-10T08:12:58Z",
      "side": 1,
      "message": "Don\u0027t we need to tell the compiler that _name is an input operand here? And then I am guessing that it won\u0027t complain about the variable not being used (which makes the cast at line 86 useless).",
      "range": {
        "startLine": 85,
        "startChar": 1,
        "endLine": 85,
        "endChar": 50
      },
      "revId": "63fded217fb01c9f6a6f958452c70aebe05b0aa3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80bbfa82_ca7f02f8",
        "filename": "include/lib/utils.h",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1000080
      },
      "writtenOn": "2019-12-10T11:15:41Z",
      "side": 1,
      "message": "Indeed. Something like __asm__ volatile (\"ldr %0, \u003d\" #_name : \"\u003dr\" (v) : \"X\" (#_name)) should work without the need for global variables (to be tested).",
      "parentUuid": "5b5ce76c_1bbb5582",
      "range": {
        "startLine": 85,
        "startChar": 1,
        "endLine": 85,
        "endChar": 50
      },
      "revId": "63fded217fb01c9f6a6f958452c70aebe05b0aa3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57829f53_5e20e717",
        "filename": "include/lib/utils.h",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1000219
      },
      "writtenOn": "2019-12-11T00:14:44Z",
      "side": 1,
      "message": "I made the suggested changes. But this by itself didn\u0027t solve the \u0027variables not being needed\u0027 issue. The\u0027used\u0027 attribute was needed to fix that issue.",
      "parentUuid": "80bbfa82_ca7f02f8",
      "range": {
        "startLine": 85,
        "startChar": 1,
        "endLine": 85,
        "endChar": 50
      },
      "revId": "63fded217fb01c9f6a6f958452c70aebe05b0aa3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    }
  ]
}