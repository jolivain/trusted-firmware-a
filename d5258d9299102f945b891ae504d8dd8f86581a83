{
  "comments": [
    {
      "key": {
        "uuid": "3ebcaae2_233aa03c",
        "filename": "lib/cpus/aarch64/dsu_helpers.S",
        "patchSetId": 6
      },
      "lineNbr": 85,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2020-06-09T08:15:29Z",
      "side": 1,
      "message": "learning is we must have a comment here what can be clobbered \n \u0027can clobber only: x0-x16, x30\u0027\nso that overriding functions can refer.",
      "revId": "d5258d9299102f945b891ae504d8dd8f86581a83",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9f7b6b6_624f955c",
        "filename": "lib/cpus/aarch64/dsu_helpers.S",
        "patchSetId": 6
      },
      "lineNbr": 120,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2020-05-30T14:12:35Z",
      "side": 1,
      "message": "IMO, status always gets captured in x0. May I know reason behind \"ret x8\"?",
      "range": {
        "startLine": 120,
        "startChar": 1,
        "endLine": 120,
        "endChar": 7
      },
      "revId": "d5258d9299102f945b891ae504d8dd8f86581a83",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e050410_688b6406",
        "filename": "lib/cpus/aarch64/dsu_helpers.S",
        "patchSetId": 6
      },
      "lineNbr": 120,
      "author": {
        "id": 1000327
      },
      "writtenOn": "2020-05-30T14:24:20Z",
      "side": 1,
      "message": "This is not status. its LR values stored in x8 before calling is_scu_present_in_dsu.",
      "parentUuid": "d9f7b6b6_624f955c",
      "range": {
        "startLine": 120,
        "startChar": 1,
        "endLine": 120,
        "endChar": 7
      },
      "revId": "d5258d9299102f945b891ae504d8dd8f86581a83",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "171a9140_81dd3aa0",
        "filename": "lib/cpus/aarch64/dsu_helpers.S",
        "patchSetId": 6
      },
      "lineNbr": 120,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2020-05-30T14:47:07Z",
      "side": 1,
      "message": "Ack, ok got it. Can you explicitly mention comment for better understanding?\nAs this function previously returns whether to apply/not-apply errata in x0 and returns that value.\nNow with this new approach, this function do below stuff:\n1. Update status in x0\n2. return LR.",
      "parentUuid": "1e050410_688b6406",
      "range": {
        "startLine": 120,
        "startChar": 1,
        "endLine": 120,
        "endChar": 7
      },
      "revId": "d5258d9299102f945b891ae504d8dd8f86581a83",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eea11112_c6470402",
        "filename": "lib/cpus/aarch64/dsu_helpers.S",
        "patchSetId": 6
      },
      "lineNbr": 120,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2020-05-30T16:15:37Z",
      "side": 1,
      "message": "Previously, ret defaults to x30 value as it was not mentioned explicitly with x0 updated to status whether to apply errata or not.\n\nAs you introduced function call\u003cis_scu_present_in_dsu\u003e, Just nice to have comment to mention that this function returns to LR value stored in x8.",
      "parentUuid": "171a9140_81dd3aa0",
      "range": {
        "startLine": 120,
        "startChar": 1,
        "endLine": 120,
        "endChar": 7
      },
      "revId": "d5258d9299102f945b891ae504d8dd8f86581a83",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "af4f8c2f_39bd3e73",
        "filename": "lib/cpus/aarch64/dsu_helpers.S",
        "patchSetId": 6
      },
      "lineNbr": 120,
      "author": {
        "id": 1000327
      },
      "writtenOn": "2020-05-31T07:21:06Z",
      "side": 1,
      "message": "Thanks for review, Manish. I don\u0027t feel its worth of commenting as its general practice. I\u0027ve not seen anyone/anywhere doing this. See below function errata_dsu_936184_wa.",
      "parentUuid": "eea11112_c6470402",
      "range": {
        "startLine": 120,
        "startChar": 1,
        "endLine": 120,
        "endChar": 7
      },
      "revId": "d5258d9299102f945b891ae504d8dd8f86581a83",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e72834ee_78edabf0",
        "filename": "lib/cpus/aarch64/dsu_helpers.S",
        "patchSetId": 6
      },
      "lineNbr": 120,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2020-05-31T10:08:03Z",
      "side": 1,
      "message": "@Pramod please use \u0027x19\u0027(callee saved register) to stash \u0027x30\u0027 to be ABI complaint. We cant assume implementation of the overriding function.",
      "revId": "d5258d9299102f945b891ae504d8dd8f86581a83",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69be4a10_82ad3f88",
        "filename": "lib/cpus/aarch64/dsu_helpers.S",
        "patchSetId": 6
      },
      "lineNbr": 120,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2020-05-31T13:22:05Z",
      "side": 1,
      "message": "Thanks. No need to add comment if you think it is not worth to mention it.",
      "parentUuid": "af4f8c2f_39bd3e73",
      "range": {
        "startLine": 120,
        "startChar": 1,
        "endLine": 120,
        "endChar": 7
      },
      "revId": "d5258d9299102f945b891ae504d8dd8f86581a83",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "29efeb47_4f1ac3ea",
        "filename": "lib/cpus/aarch64/dsu_helpers.S",
        "patchSetId": 6
      },
      "lineNbr": 120,
      "author": {
        "id": 1000327
      },
      "writtenOn": "2020-05-31T13:24:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e72834ee_78edabf0",
      "revId": "d5258d9299102f945b891ae504d8dd8f86581a83",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6bf4639a_484f7f18",
        "filename": "lib/cpus/aarch64/dsu_helpers.S",
        "patchSetId": 6
      },
      "lineNbr": 130,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2020-06-09T08:15:29Z",
      "side": 1,
      "message": "from the comment @line 65~75  looks like check_errata_dsu_936184 can be called from c function as well ?\n\nSo better we call here \u0027is_scu_present_in_dsu\u0027  if not cbz x0, 1f\nBy that you avoid introducing another level of LR stashing requirement and don\u0027t worry about breaking existing clobbering rules.",
      "revId": "d5258d9299102f945b891ae504d8dd8f86581a83",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "320c9a82_9a68ba5a",
        "filename": "lib/cpus/aarch64/dsu_helpers.S",
        "patchSetId": 6
      },
      "lineNbr": 130,
      "author": {
        "id": 1000327
      },
      "writtenOn": "2020-06-09T08:35:18Z",
      "side": 1,
      "message": "below routine, check_errata_dsu_936184, is supposed to consider all the possible cases which says decides whether this errata could be applied or not. is_scu_present_is_dsu calling outside of this routine does not consider all other calls. check_errata_dsu_936184 is called outside of this function as well. \n\nHave a look on the func, func neoverse_n1_errata_report, defined in lib/cpus/aarch64/neoverse_n1.S.\n\nI feel clobbers register comment at line #75 need to be changed by from x0-x16 in case we use x16 register here.",
      "parentUuid": "6bf4639a_484f7f18",
      "revId": "d5258d9299102f945b891ae504d8dd8f86581a83",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "083233c1_8e28bcc4",
        "filename": "lib/cpus/aarch64/dsu_helpers.S",
        "patchSetId": 6
      },
      "lineNbr": 130,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2020-06-09T10:45:43Z",
      "side": 1,
      "message": "Got it cant move out the function.  \u0027check_errata_dsu_936184\u0027 has to check \u0027is_scu_present_in_dsu\u0027. \n\nIn reset path it is all hand-coded assembly and \u0027x16\u0027 or any\nregister (whats in comment) for that matter is ok. But to consider call from C\nenvironment it looks little odd to use \u0027x16\u0027/\u0027x17\u0027. may be \u0027x15\u0027 with a constraint\nin comment that \u0027is_scu_presetn_in_dsu\u0027 can clobber only x0~x14 ?\n\nOther option is to move to macro.",
      "parentUuid": "320c9a82_9a68ba5a",
      "revId": "d5258d9299102f945b891ae504d8dd8f86581a83",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6cfb8b62_f9c3ecff",
        "filename": "lib/cpus/aarch64/dsu_helpers.S",
        "patchSetId": 6
      },
      "lineNbr": 130,
      "author": {
        "id": 1000327
      },
      "writtenOn": "2020-06-09T12:42:58Z",
      "side": 1,
      "message": "\u003e\u003e\u003eBut to consider call from C environment it looks little odd to use \u0027x16\u0027/\u0027x17\u0027.\nDoes it mean we considering that it could be used by compiler in c environment? hence you reccomends me to use x15. I don\u0027t see any issue. I\u0027ll use it and change the clobber register comment for check_errata api above.",
      "parentUuid": "083233c1_8e28bcc4",
      "revId": "d5258d9299102f945b891ae504d8dd8f86581a83",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    }
  ]
}