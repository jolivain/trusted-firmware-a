{
  "comments": [
    {
      "key": {
        "uuid": "3a6111b6_c8abcd47",
        "filename": "lib/psci/psci_setup.c",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2020-12-02T17:21:27Z",
      "side": 1,
      "message": "Some functions that receive node_idx as parameter might not work properly now. For instance:\n\n* cpu_data_by_index() expects an uint32_t, which can be problematic as the size of an unsigned int is not guaranteed to be 32bits.\n* psci_lock_init() expects an unsigned char for node_idx. This function would need to be fixed accordingly.\n\nThere might be other functions as well, I didn\u0027t check all of them.",
      "range": {
        "startLine": 37,
        "startChar": 19,
        "endLine": 37,
        "endChar": 44
      },
      "revId": "ad0a2ecd708333967cc72443508296e8ce97d650",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3668fb74_c1d7c63b",
        "filename": "lib/psci/psci_setup.c",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1000435
      },
      "writtenOn": "2020-12-02T17:32:14Z",
      "side": 1,
      "message": "Should we choose a sensible limit for CPUs that we are not likely to hit in the near future. Then choose the data types based on that?\n\nuint16_t would give us 65536",
      "parentUuid": "3a6111b6_c8abcd47",
      "range": {
        "startLine": 37,
        "startChar": 19,
        "endLine": 37,
        "endChar": 44
      },
      "revId": "ad0a2ecd708333967cc72443508296e8ce97d650",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8beed39_6f84eb3b",
        "filename": "lib/psci/psci_setup.c",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2020-12-02T18:47:40Z",
      "side": 1,
      "message": "I think the root of the problem is the \"unsigned char lock_index\" member of the non_cpu_pwr_domain_node struct. I am open to increasing its size to accommodate higher limits such as 64K.",
      "parentUuid": "3668fb74_c1d7c63b",
      "range": {
        "startLine": 37,
        "startChar": 19,
        "endLine": 37,
        "endChar": 44
      },
      "revId": "ad0a2ecd708333967cc72443508296e8ce97d650",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    }
  ]
}