{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e200092e_40ba7ba5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1000822
      },
      "writtenOn": "2023-05-25T07:41:50Z",
      "side": 1,
      "message": "Yi\n\nPlease fix the following failures.\n\nhttps://ci.trustedfirmware.org/job/tf-a-builder/2113443/console\n```\n14:50:57 aarch64-none-elf-ld.bfd: /home/buildslave/workspace/tf-a-builder/trusted-firmware-a/build/mt8195/debug/bl31/bl31.elf section `.xlat_table\u0027 will not fit in region `RAM\u0027\n14:50:57 aarch64-none-elf-ld.bfd: BL31 image has exceeded its limit.\n14:50:57 aarch64-none-elf-ld.bfd: region `RAM\u0027 overflowed by 4096 bytes\n14:50:57 make: *** [Makefile:1470: /home/buildslave/workspace/tf-a-builder/trusted-firmware-a/build/mt8195/debug/bl31/bl31.elf] Error 1\n```\n\nhttps://ci.trustedfirmware.org/job/tf-a-commitlint/4877/console\n```\n⧗   input: feat(cros_widevine): Add ChromeOS widevine SMC handler\n\nThe ChromeOS will use the SMC to pass some secrets from firmware to\noptee.\n\nChange-Id: Iaf3357d40a7ed22415926acd9d7979df24dd81f1\nSigned-off-by: Yi Chou \u003cyich@google.com\u003e\n✖   subject must not be sentence-case, start-case, pascal-case, upper-case [subject-case]\n⚠   header must not be longer than 50 characters, current length is 54 [header-max-length]\n```",
      "revId": "2e95ef8f26062eb5f7b9b28b897a10ae1b680a8d",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cecfcc51_506a6dfe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2023-05-25T08:26:03Z",
      "side": 1,
      "message": "hmmm, I think the main problem is\n```\n#define OPTEED_FDT_SIZE 1536\n```",
      "parentUuid": "e200092e_40ba7ba5",
      "revId": "2e95ef8f26062eb5f7b9b28b897a10ae1b680a8d",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a3917ffb_d1a90bb5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2023-05-30T11:10:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cecfcc51_506a6dfe",
      "revId": "2e95ef8f26062eb5f7b9b28b897a10ae1b680a8d",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bfbdaa52_659557e0",
        "filename": "services/spd/opteed/opteed_main.c",
        "patchSetId": 11
      },
      "lineNbr": 263,
      "author": {
        "id": 1000120
      },
      "writtenOn": "2023-05-24T06:28:28Z",
      "side": 1,
      "message": "I guess the Linux kernel is supposed to find this, but I can\u0027t find anything about this binding in the kernel. Has it been reviewed anywhere?",
      "range": {
        "startLine": 263,
        "startChar": 47,
        "endLine": 263,
        "endChar": 62
      },
      "revId": "2e95ef8f26062eb5f7b9b28b897a10ae1b680a8d",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8eb5693_707b4e21",
        "filename": "services/spd/opteed/opteed_main.c",
        "patchSetId": 11
      },
      "lineNbr": 263,
      "author": {
        "id": 1000060
      },
      "writtenOn": "2023-05-24T19:56:54Z",
      "side": 1,
      "message": "No, this is just being passed to OP-TEE. The kernel won\u0027t (and mustn\u0027t, for security reasons) get these values in its DT. That\u0027s why we can\u0027t really make these bindings \"official\" and submit them to the kernel\u0027s Documentation/bindings, because they\u0027re not really bindings for the kernel so it would seem kinda silly to try to document them there (and presumably would not be accepted by the kernel maintainers).",
      "parentUuid": "bfbdaa52_659557e0",
      "range": {
        "startLine": 263,
        "startChar": 47,
        "endLine": 263,
        "endChar": 62
      },
      "revId": "2e95ef8f26062eb5f7b9b28b897a10ae1b680a8d",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a56b030_773cdb0a",
        "filename": "services/spd/opteed/opteed_main.c",
        "patchSetId": 11
      },
      "lineNbr": 263,
      "author": {
        "id": 1000120
      },
      "writtenOn": "2023-05-26T08:59:50Z",
      "side": 1,
      "message": "Well, they must be reviewed and made official in some way. I can\u0027t do that myself so we may need external help. It\u0027s not unheard of to document bindings in the kernel even if they are not used by the kernel.",
      "parentUuid": "c8eb5693_707b4e21",
      "range": {
        "startLine": 263,
        "startChar": 47,
        "endLine": 263,
        "endChar": 62
      },
      "revId": "2e95ef8f26062eb5f7b9b28b897a10ae1b680a8d",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64d4a867_0161d8f5",
        "filename": "services/spd/opteed/opteed_main.c",
        "patchSetId": 11
      },
      "lineNbr": 263,
      "author": {
        "id": 1000962
      },
      "writtenOn": "2023-05-26T18:36:29Z",
      "side": 1,
      "message": "That\u0027s why I was originally suggesting using the \"chosen\" node and putting our custom properties underneath it. The device tree spec does account for non-standard property names, which just need a company specific prefix (i.e. \"google,\") on them.  And the \"chosen\" node is for properties that don\u0027t represent a real device in the system. So I would presume they don\u0027t need to be made official if that technique is followed.",
      "parentUuid": "2a56b030_773cdb0a",
      "range": {
        "startLine": 263,
        "startChar": 47,
        "endLine": 263,
        "endChar": 62
      },
      "revId": "2e95ef8f26062eb5f7b9b28b897a10ae1b680a8d",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45a492f2_3eb68cc1",
        "filename": "services/spd/opteed/opteed_main.c",
        "patchSetId": 11
      },
      "lineNbr": 263,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2023-05-30T11:10:28Z",
      "side": 1,
      "message": "Changed the node to chosen/widevine",
      "parentUuid": "64d4a867_0161d8f5",
      "range": {
        "startLine": 263,
        "startChar": 47,
        "endLine": 263,
        "endChar": 62
      },
      "revId": "2e95ef8f26062eb5f7b9b28b897a10ae1b680a8d",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80b4f2bd_ec5db181",
        "filename": "services/spd/opteed/opteed_main.c",
        "patchSetId": 11
      },
      "lineNbr": 263,
      "author": {
        "id": 1000060
      },
      "writtenOn": "2023-05-31T00:03:48Z",
      "side": 1,
      "message": "That seems like a hack and doing the wrong thing to work around an arbitrary restriction to me, honestly. I\u0027m not sure I understand the decision of OP-TEE to only accept device tree bindings that are defined in kernel documentation and I don\u0027t really agree with it -- if the device tree is the only official way to pass information into OP-TEE, then there will necessarily be use cases for some things in it that are not pure hardware-description but are actually user data specific to OP-TEE, like this is. And in those cases, I don\u0027t think it\u0027s reasonable to expect those bindings to be documented in some completely different, unrelated project. It would maybe make sense to add device tree binding documentation directly in OP-TEE for this purpose instead.\n\nBut if OP-TEE maintainers disagree with that and say that kernel bindings are the only way, then we should at least try to honor that and actually get it documented in the kernel. We can still go back to bad workarounds if that fails.",
      "parentUuid": "45a492f2_3eb68cc1",
      "range": {
        "startLine": 263,
        "startChar": 47,
        "endLine": 263,
        "endChar": 62
      },
      "revId": "2e95ef8f26062eb5f7b9b28b897a10ae1b680a8d",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef30fd43_0dff9210",
        "filename": "services/spd/opteed/opteed_main.c",
        "patchSetId": 11
      },
      "lineNbr": 263,
      "author": {
        "id": 1000120
      },
      "writtenOn": "2023-05-31T05:45:02Z",
      "side": 1,
      "message": "I\u0027m not saying that all bindings must be documented in the Linux kernel tree, but I would like to have them reviewed by a device tree maintainer. It wouldn\u0027t be the first time that bindings unused by the kernel where documented there. How about reaching out to the kernel device tree mailing list and ask for help?\n\nThat said, when reading the device tree documentation it seems to me that under \"chosen\" is the right place.",
      "parentUuid": "80b4f2bd_ec5db181",
      "range": {
        "startLine": 263,
        "startChar": 47,
        "endLine": 263,
        "endChar": 62
      },
      "revId": "2e95ef8f26062eb5f7b9b28b897a10ae1b680a8d",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e515a76_7f9f2666",
        "filename": "services/spd/opteed/opteed_main.c",
        "patchSetId": 11
      },
      "lineNbr": 263,
      "author": {
        "id": 1000120
      },
      "writtenOn": "2023-07-21T09:06:23Z",
      "side": 1,
      "message": "This is still unresolved.",
      "parentUuid": "ef30fd43_0dff9210",
      "range": {
        "startLine": 263,
        "startChar": 47,
        "endLine": 263,
        "endChar": 62
      },
      "revId": "2e95ef8f26062eb5f7b9b28b897a10ae1b680a8d",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8769e386_4b75b372",
        "filename": "services/spd/opteed/opteed_main.c",
        "patchSetId": 11
      },
      "lineNbr": 263,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2023-08-14T09:42:42Z",
      "side": 1,
      "message": "Hello,\nFollowing Jens\u0027 comments, has this topic been discussed with kernel DT maintainers?\nI know that we had a similar case for STM32MP sdmmc peripheral. The compatible was used only by bootloaders at the time, and we were able to add it in kernel Documentation/devicetree/bindings/mmc/arm,pl18x.yaml. But maybe it\u0027s a bit more complex here.\n\nAnother thing, could you also fill the \u0027Full name\u0027 box in the gerrit settings? That avoids mails sent with \"Name of user not set (Code Review) \u003creview@review.trustedfirmware.org\u003e\" address. And avoid the quite cryptic qazwsxedcrfvtg14 user name ;-)",
      "parentUuid": "8e515a76_7f9f2666",
      "range": {
        "startLine": 263,
        "startChar": 47,
        "endLine": 263,
        "endChar": 62
      },
      "revId": "2e95ef8f26062eb5f7b9b28b897a10ae1b680a8d",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}