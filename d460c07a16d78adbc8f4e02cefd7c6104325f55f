{
  "comments": [
    {
      "key": {
        "uuid": "b02ec584_6bbdd274",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000051
      },
      "writtenOn": "2019-06-04T15:17:22Z",
      "side": 1,
      "message": "can be removed",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 13
      },
      "revId": "d460c07a16d78adbc8f4e02cefd7c6104325f55f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "91b8f41d_3c42b678",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000051
      },
      "writtenOn": "2019-06-04T15:17:22Z",
      "side": 1,
      "message": "can also be removed",
      "range": {
        "startLine": 7,
        "startChar": 23,
        "endLine": 7,
        "endChar": 27
      },
      "revId": "d460c07a16d78adbc8f4e02cefd7c6104325f55f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4908805_1422ef9b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000060
      },
      "writtenOn": "2019-06-04T21:03:25Z",
      "side": 1,
      "message": "Will do in next update.",
      "parentUuid": "b02ec584_6bbdd274",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 13
      },
      "revId": "d460c07a16d78adbc8f4e02cefd7c6104325f55f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "98b93fb5_d523dcc3",
        "filename": "include/plat/common/bl31_params.h",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1000051
      },
      "writtenOn": "2019-06-04T15:17:22Z",
      "side": 1,
      "message": "TF-A",
      "range": {
        "startLine": 40,
        "startChar": 70,
        "endLine": 40,
        "endChar": 72
      },
      "revId": "d460c07a16d78adbc8f4e02cefd7c6104325f55f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "720b2a50_3e6cfa0d",
        "filename": "include/plat/common/bl31_params.h",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1000060
      },
      "writtenOn": "2019-06-04T21:03:25Z",
      "side": 1,
      "message": "Will do.",
      "parentUuid": "98b93fb5_d523dcc3",
      "range": {
        "startLine": 40,
        "startChar": 70,
        "endLine": 40,
        "endChar": 72
      },
      "revId": "d460c07a16d78adbc8f4e02cefd7c6104325f55f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b289ce24_65b74819",
        "filename": "include/plat/common/bl31_params.h",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2019-06-06T16:12:26Z",
      "side": 1,
      "message": "I understand this is being positioned as a generic data structure for passing parameters to BL31, but I am inclined to suggest calling this `cb_plat_params because COREBOOT_TABLE is the only generic param in the list.\n\nFollowing that line of thought, this file and header can move into the plat/common/coreboot folder.\n\nOr the other alternative is instead of positioning this as only for BL31, if this is a format that can be used by all BL images to pass config around, that would mean making this more generic\nby calling it `list_bl_params` \n\nIn which case this can move into the /lib/common folder. \n\nLet me know of your thoughts.",
      "range": {
        "startLine": 50,
        "startChar": 5,
        "endLine": 50,
        "endChar": 25
      },
      "revId": "d460c07a16d78adbc8f4e02cefd7c6104325f55f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "674b9a66_89b41d81",
        "filename": "include/plat/common/bl31_params.h",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1000060
      },
      "writtenOn": "2019-06-07T22:26:09Z",
      "side": 1,
      "message": "COREBOOT_TABLE is the only generic parameter (for now), but it\u0027s not the only parameter. The Rockchip platform-specific parameters have nothing to do with coreboot and would be just as relevant if e.g. chain-loaded from U-Boot instead. So I would definitely prefer to keep this independent from coreboot.\n\nExpanding this to other BLs sounds fine. What do you think about John\u0027s naming concerns (commented earlier on this CL)? bl_list_params or bl_aux_params would both sound fine to me (although since bl_params_t is now also a list, maybe the latter would be better to avoid confusion between the two?).\n\nThere is no /lib/common, did you mean /common? I\u0027m happy putting it there if you want, I\u0027m not sure where exactly the line between /common and /plat/common is supposed to be. Although since this is supposed to be an optional feature that platforms have to explicitly select from their platform.mk, wouldn\u0027t /plat/common be more suitable (that seems to be the standard for files in there, whereas all the files in /common seem to be selected unconditionally by the toplevel Makefile)?",
      "parentUuid": "b289ce24_65b74819",
      "range": {
        "startLine": 50,
        "startChar": 5,
        "endLine": 50,
        "endChar": 25
      },
      "revId": "d460c07a16d78adbc8f4e02cefd7c6104325f55f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da834733_6e239247",
        "filename": "include/plat/common/bl31_params.h",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2019-06-06T16:12:26Z",
      "side": 1,
      "message": "nit: the multi line comment is not as per guidelines.",
      "range": {
        "startLine": 97,
        "startChar": 2,
        "endLine": 97,
        "endChar": 3
      },
      "revId": "d460c07a16d78adbc8f4e02cefd7c6104325f55f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "67d1ea8a_aab36f44",
        "filename": "include/plat/common/bl31_params.h",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 1000060
      },
      "writtenOn": "2019-06-07T22:26:09Z",
      "side": 1,
      "message": "Will fix.",
      "parentUuid": "da834733_6e239247",
      "range": {
        "startLine": 97,
        "startChar": 2,
        "endLine": 97,
        "endChar": 3
      },
      "revId": "d460c07a16d78adbc8f4e02cefd7c6104325f55f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b74d0ad_f22bdae8",
        "filename": "include/plat/common/bl31_params.h",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 1000051
      },
      "writtenOn": "2019-06-04T15:17:22Z",
      "side": 1,
      "message": "Depending on how you used this function in the next file, I would say it actually *parses* the argument, not just \"recognises\" it. Maybe we need to clarify that in this comment.",
      "range": {
        "startLine": 98,
        "startChar": 24,
        "endLine": 98,
        "endChar": 34
      },
      "revId": "d460c07a16d78adbc8f4e02cefd7c6104325f55f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ab390bf_a54cadde",
        "filename": "include/plat/common/bl31_params.h",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 1000060
      },
      "writtenOn": "2019-06-04T21:03:25Z",
      "side": 1,
      "message": "Okay... so do you just want me to write \"if the parameter was parsed\" instead? I don\u0027t really see a difference between recognize and parse here, but am happy to take suggestions. (Essentially what I wanna say here is \"return true if you don\u0027t want the caller to make its own attempt at parsing it anymore\"... maybe I should just rewrite it like that?)",
      "parentUuid": "3b74d0ad_f22bdae8",
      "range": {
        "startLine": 98,
        "startChar": 24,
        "endLine": 98,
        "endChar": 34
      },
      "revId": "d460c07a16d78adbc8f4e02cefd7c6104325f55f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "766d3a3e_d1d8385e",
        "filename": "include/plat/common/bl31_params.h",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 1000051
      },
      "writtenOn": "2019-06-05T09:40:29Z",
      "side": 1,
      "message": "IMHO it would make a bit more clear what the function does.\n\nHowever I don\u0027t have a strong opinion on that. For example in my case by \"recognise\" I assumed something like \"validated\", in a sense e.g. that it\u0027s properly formatted. Maybe an accompanying comment in line 18 of the next file would explain better the usage of the function.\n\nAgain, I don\u0027t mean to be pedantic. The only reason I\u0027m saying that it\u0027s because while reading the next file I was slightly confused by the fact that if the function returns true you are exiting the loop without further parsing.\n\nBut I leave it up to your discretion.",
      "parentUuid": "7ab390bf_a54cadde",
      "range": {
        "startLine": 98,
        "startChar": 24,
        "endLine": 98,
        "endChar": 34
      },
      "revId": "d460c07a16d78adbc8f4e02cefd7c6104325f55f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "965d6a99_1ba46198",
        "filename": "plat/common/bl31_params.c",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1000051
      },
      "writtenOn": "2019-06-04T15:17:22Z",
      "side": 1,
      "message": "param-\u003enext is already a (void *)",
      "range": {
        "startLine": 16,
        "startChar": 49,
        "endLine": 16,
        "endChar": 57
      },
      "revId": "d460c07a16d78adbc8f4e02cefd7c6104325f55f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2edd0d7f_e6d279b4",
        "filename": "plat/common/bl31_params.c",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1000051
      },
      "writtenOn": "2019-06-04T15:17:22Z",
      "side": 1,
      "message": "Why not directly (bl31_plat_param_header_t *) ?",
      "range": {
        "startLine": 16,
        "startChar": 14,
        "endLine": 16,
        "endChar": 22
      },
      "revId": "d460c07a16d78adbc8f4e02cefd7c6104325f55f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2223208_1c143eba",
        "filename": "plat/common/bl31_params.c",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1000060
      },
      "writtenOn": "2019-06-04T21:03:25Z",
      "side": 1,
      "message": "Right, sorry, I changed it to uint64_t in https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/1207, I should pull that change forward to this CL. (I generally try to only use fixed-width integer types in data structures that pass information between different programs, for cases where you pass architecture boundaries. I guess it\u0027s unlikely but not impossible that this structure might be written from aarch32 code. Although bl_params_t in \u003cbl_common.h\u003e also uses pointers and I presume you wouldn\u0027t want to change those, so maybe trying to be more versatile here is pointless.)",
      "parentUuid": "965d6a99_1ba46198",
      "range": {
        "startLine": 16,
        "startChar": 49,
        "endLine": 16,
        "endChar": 57
      },
      "revId": "d460c07a16d78adbc8f4e02cefd7c6104325f55f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d4906903_5307655e",
        "filename": "plat/common/bl31_params.c",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1000060
      },
      "writtenOn": "2019-06-04T21:03:25Z",
      "side": 1,
      "message": "It\u0027s shorter and makes this fit on one line? In my opinion writing the full type doesn\u0027t really add anything here (since \u0027param\u0027 is defined a few lines earlier anyway) and the readability benefits of keeping the code concise weigh higher, but I\u0027m happy to change it if you want me to.",
      "parentUuid": "2edd0d7f_e6d279b4",
      "range": {
        "startLine": 16,
        "startChar": 14,
        "endLine": 16,
        "endChar": 22
      },
      "revId": "d460c07a16d78adbc8f4e02cefd7c6104325f55f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce7e830a_aab9196b",
        "filename": "plat/common/bl31_params.c",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1000051
      },
      "writtenOn": "2019-06-04T15:17:22Z",
      "side": 1,
      "message": "coreboot_table_setup() is expecting a void * argument anyway. Is the explicit cast needed?",
      "range": {
        "startLine": 23,
        "startChar": 24,
        "endLine": 23,
        "endChar": 32
      },
      "revId": "d460c07a16d78adbc8f4e02cefd7c6104325f55f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c07bbfbb_6b0c838e",
        "filename": "plat/common/bl31_params.c",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1000060
      },
      "writtenOn": "2019-06-04T21:03:25Z",
      "side": 1,
      "message": "bl31_plat_param_uint64_t.value is a uint64_t.",
      "parentUuid": "ce7e830a_aab9196b",
      "range": {
        "startLine": 23,
        "startChar": 24,
        "endLine": 23,
        "endChar": 32
      },
      "revId": "d460c07a16d78adbc8f4e02cefd7c6104325f55f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    }
  ]
}