{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e736bfd2_d4b766bc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2023-12-11T17:40:59Z",
      "side": 1,
      "message": "Andrey, many thanks for pushing for the LTO patches, and for coming back to this patch!\nIt should be noted that the LTO trick is not enough for every compiler: on Ubuntu 20.04\u0027s GCC 9.4 it still overflows by 216 bytes. But it seems to work with Debian\u0027s 12.2.0. I had no luck with any of the non-libc compilers from kernel.org, though.\n\nAnd it\u0027s a shame that we cannot enable LTO in the platform.mk. @Jayanth, how hard would this be to change?",
      "revId": "d5fa2dcf603eccf45e62568dca7418a273667ada",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83ff1590_0224387f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1001087
      },
      "writtenOn": "2023-12-11T19:57:14Z",
      "side": 1,
      "message": "I\u0027ve tried to build with LTO enabled for all platforms built by tf-l1-build-plat test group with global ENABLE_LTO\u003d1 and have some build fixes for other platforms. I\u0027ll push them as well as different topic for review. But I\u0027ve tested only build and can\u0027t do runtime tests because I don\u0027t have hardware.",
      "parentUuid": "e736bfd2_d4b766bc",
      "revId": "d5fa2dcf603eccf45e62568dca7418a273667ada",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a0fa1a8_b4585b18",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2023-12-12T13:49:01Z",
      "side": 1,
      "message": "Oh sorry, I didn\u0027t mean you should do the work and evaluate LTO for other platforms. It just looks odd to have platform specific definition in a generic Makefile helper, especially if we have platform specific Makefiles already.\nBut that doesn\u0027t need to be solved by you, it\u0027s more a general question to people caring about the build system, why this doesn\u0027t work in the first place and how this could be fixed.",
      "parentUuid": "83ff1590_0224387f",
      "revId": "d5fa2dcf603eccf45e62568dca7418a273667ada",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ad099e0_273f3b53",
        "filename": "make_helpers/defaults.mk",
        "patchSetId": 4
      },
      "lineNbr": 310,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2023-12-11T17:40:59Z",
      "side": 1,
      "message": "It looks like this indeed needs to go here, I had no luck with putting this in A64\u0027s platform.mk.\nCan you please add a comment here that we need LTO on this platform due to memory constraints? Otherwise it might puzzle people as to why this is here.\n\nIdeally we could try to move the default definition, so that it can be overridden in platform Makefiles?",
      "revId": "d5fa2dcf603eccf45e62568dca7418a273667ada",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6100ac45_a826a223",
        "filename": "make_helpers/defaults.mk",
        "patchSetId": 4
      },
      "lineNbr": 310,
      "author": {
        "id": 1001087
      },
      "writtenOn": "2023-12-11T20:21:01Z",
      "side": 1,
      "message": "Added comment about memory constraints.\n\nAbout moving default definition, I\u0027ve looked quickly and some platform.mk files use $(LD) to select proper linker flags and LD definition is based on ENABLE_LTO. And comment in main Makefile states, that platform.mk could use any previous definitions.",
      "parentUuid": "1ad099e0_273f3b53",
      "revId": "d5fa2dcf603eccf45e62568dca7418a273667ada",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}