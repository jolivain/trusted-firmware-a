{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c9b9d0f3_ebf81dcd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2024-01-30T11:28:38Z",
      "side": 1,
      "message": "Needs https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/26171 to progress",
      "revId": "cdf44a3af5487304b53f04c4741ad5e1da8f1493",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "659bf449_1509fa59",
        "filename": "lib/aarch64/cache_helpers.S",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-01-25T12:28:49Z",
      "side": 1,
      "message": "nit: could add the sys encoding as reference as comment.",
      "revId": "cdf44a3af5487304b53f04c4741ad5e1da8f1493",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4cbde766_8879f212",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 2
      },
      "lineNbr": 1099,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-01-25T12:28:49Z",
      "side": 1,
      "message": "is_feat_mte_supported() ?\n\nsame comment for below.",
      "range": {
        "startLine": 1099,
        "startChar": 5,
        "endLine": 1099,
        "endChar": 28
      },
      "revId": "cdf44a3af5487304b53f04c4741ad5e1da8f1493",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "439de781_fa2502be",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 2
      },
      "lineNbr": 1099,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2024-01-25T13:10:04Z",
      "side": 1,
      "message": "I think this won\u0027t work anymore because we seek for MTE2 specifically, not MTE. Need to check if it remains helpers to get the exact implemented MTE version.",
      "parentUuid": "4cbde766_8879f212",
      "range": {
        "startLine": 1099,
        "startChar": 5,
        "endLine": 1099,
        "endChar": 28
      },
      "revId": "cdf44a3af5487304b53f04c4741ad5e1da8f1493",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3cfa5c3f_9b049700",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 2
      },
      "lineNbr": 1099,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-01-25T14:53:25Z",
      "side": 1,
      "message": "Hmm, I see. There are DC operations for allocation tags when FEAT_MTE is present but this particular DC PoPA for same tags is only applicable when FEAT_MTE2 is present.\n\n\n(btw, we may have a bug in TF-A here : https://github.com/ARM-software/arm-trusted-firmware/blob/07da4854e919b0d0a217886666aefd95a003829a/lib/el3_runtime/aarch64/context_mgmt.c#L1259 as this register is only available when MTE2 is present).\n\n\nEither ways, we can define a combined helper or a specific mte2 variant.\n\n\n(is_feat_mte_supported() \u0026\u0026 get_armv8_5_mte_support() \u003e\u003d MTE_IMPLEMENTED_ELX)\n\nwhich might give the optimization when FEAT_MTE is 1 (or 0).",
      "parentUuid": "439de781_fa2502be",
      "range": {
        "startLine": 1099,
        "startChar": 5,
        "endLine": 1099,
        "endChar": 28
      },
      "revId": "cdf44a3af5487304b53f04c4741ad5e1da8f1493",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef39a586_f64fbfad",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 2
      },
      "lineNbr": 1099,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2024-01-25T15:45:18Z",
      "side": 1,
      "message": "For the bug Ack, will have a look.\n\nFor the is_feat_mte_supported() \u0026\u0026 get_armv8_5_mte_supported() comment\n\nFor features which support multiple versions (MTE, CSV2) I think we should introduce a wrapper function on top to support both feature states and versioning together of is_feat_xxx_ver1_supporte() is_feat_xxx_ver2_supported()\n\nget_feat_xxx_version()\n{\n  is_feat_xxx_version2_supported()  //Feature states sorted out here\n     return 2;\n  is_feat_xxx_version1_supported()\n     return1;\n     \n   return unsupported\n  }\n  \n  I have a comments for CSV2 feature here https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/25411/10/lib/el3_runtime/aarch64/context_mgmt.c#183",
      "parentUuid": "3cfa5c3f_9b049700",
      "range": {
        "startLine": 1099,
        "startChar": 5,
        "endLine": 1099,
        "endChar": 28
      },
      "revId": "cdf44a3af5487304b53f04c4741ad5e1da8f1493",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8dad1182_4b48336e",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 2
      },
      "lineNbr": 1099,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2024-01-25T15:47:32Z",
      "side": 1,
      "message": "This will always return PE value and it can\u0027t be controlled by build macros.",
      "range": {
        "startLine": 1099,
        "startChar": 5,
        "endLine": 1099,
        "endChar": 28
      },
      "revId": "cdf44a3af5487304b53f04c4741ad5e1da8f1493",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de0f3875_aeef809f",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 2
      },
      "lineNbr": 1099,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2024-01-30T11:34:28Z",
      "side": 1,
      "message": "Expecting the new is_feat_mte2_supported() introduced by Govind will do the job.",
      "parentUuid": "8dad1182_4b48336e",
      "range": {
        "startLine": 1099,
        "startChar": 5,
        "endLine": 1099,
        "endChar": 28
      },
      "revId": "cdf44a3af5487304b53f04c4741ad5e1da8f1493",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ce16a50_a09b73d8",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 2
      },
      "lineNbr": 1099,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2024-01-31T14:55:36Z",
      "side": 1,
      "message": "I intend to change the statement into \n\n    if (is_feat_mte2_supported()) {\n\nThis seems to imply that when willing to enable MTE2 following options must be used:\nENABLE_FEAT_MTE\u003d1 ENABLE_FEAT_MTE2\u003d1\n\nI\u0027m curious about what happens with combinations like\nENABLE_FEAT_MTE2\u003d1  (only and ENABLE_FEAT_MTE defaults to 0)\nor ENABLE_FEAT_MTE\u003d0 ENABLE_FEAT_MTE2\u003d1\n\nIMO, this should be considered illegal.",
      "parentUuid": "ef39a586_f64fbfad",
      "range": {
        "startLine": 1099,
        "startChar": 5,
        "endLine": 1099,
        "endChar": 28
      },
      "revId": "cdf44a3af5487304b53f04c4741ad5e1da8f1493",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a0b9165_24328f91",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 2
      },
      "lineNbr": 1100,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-01-25T12:28:49Z",
      "side": 1,
      "message": "Should this helper just say : flush_dcache_to_popa_range_mte (remove the `2` suffix) ? We might get variants of MTE in future and these PoPA operations are likely to remain the same.",
      "range": {
        "startLine": 1100,
        "startChar": 29,
        "endLine": 1100,
        "endChar": 33
      },
      "revId": "cdf44a3af5487304b53f04c4741ad5e1da8f1493",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a883812c_642f2de0",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 2
      },
      "lineNbr": 1100,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2024-01-25T13:10:04Z",
      "side": 1,
      "message": "ok, this was to emphasize the above that it only applies to MTE2 and above.\nWith FEAT_MTE it shall use flush_dcache_to_popa_range (no mte variant)",
      "parentUuid": "4a0b9165_24328f91",
      "range": {
        "startLine": 1100,
        "startChar": 29,
        "endLine": 1100,
        "endChar": 33
      },
      "revId": "cdf44a3af5487304b53f04c4741ad5e1da8f1493",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78a2c523_a28d58de",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 2
      },
      "lineNbr": 1100,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-01-25T14:53:25Z",
      "side": 1,
      "message": "Yes, this was strange to me as there are cache maintenance operations for MTE and not sure why the PoPA variant is only MTE2",
      "parentUuid": "a883812c_642f2de0",
      "range": {
        "startLine": 1100,
        "startChar": 29,
        "endLine": 1100,
        "endChar": 33
      },
      "revId": "cdf44a3af5487304b53f04c4741ad5e1da8f1493",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb21521d_a8825210",
        "filename": "lib/gpt_rme/gpt_rme.c",
        "patchSetId": 2
      },
      "lineNbr": 1100,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2024-01-30T11:34:28Z",
      "side": 1,
      "message": "As discussed in other threads, there is no DC by PA to PoPA variant for FEAT_MTE (because MTE only avail. from EL0).\nFor the purpose of implementations starting with FEAT_MTE2, I can rename to flush_dcache_to_popa_range_mte but that will only be exercised in case of is_feat_mte2_supported() \u003d\u003d true",
      "parentUuid": "78a2c523_a28d58de",
      "range": {
        "startLine": 1100,
        "startChar": 29,
        "endLine": 1100,
        "endChar": 33
      },
      "revId": "cdf44a3af5487304b53f04c4741ad5e1da8f1493",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}