{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e3fa2a6a_ed442458",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 23
      },
      "lineNbr": 0,
      "author": {
        "id": 1000279
      },
      "writtenOn": "2021-06-24T08:07:50Z",
      "side": 1,
      "message": "Failed tests pasing on rerun: https://ci.trustedfirmware.org/job/tf-ci-gateway/9114/\nLava jobs hang out.",
      "revId": "4f886ff48579d06c169bc918c86adae8e5eaf66b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8752a5ad_ecc4e5ea",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 23
      },
      "lineNbr": 0,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2021-06-24T17:13:08Z",
      "side": 1,
      "message": "The FVP model with SVE plugin sets 512 bits vector length by default (SVE.ScalableVectorExtension.veclen\u003d8).\nAlthough ZCR_EL2.LEN has a default value of 0xD out of reset for some reason.\nWould it be fair to control/set it from TFTF to an expected vector length (or otherwise the maximum vector length provided ZCR_EL3 narrows it to 512bits)?\n",
      "revId": "4f886ff48579d06c169bc918c86adae8e5eaf66b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6d8ea2d2_795ea4e0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 23
      },
      "lineNbr": 0,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2021-06-24T17:13:59Z",
      "side": 1,
      "message": "Sorry this comment is meant for the TF-A-tests change. Pasting it there.",
      "parentUuid": "8752a5ad_ecc4e5ea",
      "revId": "4f886ff48579d06c169bc918c86adae8e5eaf66b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad47d9ef_df127648",
        "filename": "include/arch/aarch64/arch.h",
        "patchSetId": 23
      },
      "lineNbr": 533,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2021-06-24T16:51:04Z",
      "side": 1,
      "message": "Similar question, the bit is RES0 if system register access to trace functionality is not supported. Though I see it\u0027s cleared in common macros so this might not be an issue.",
      "range": {
        "startLine": 533,
        "startChar": 50,
        "endLine": 533,
        "endChar": 57
      },
      "revId": "4f886ff48579d06c169bc918c86adae8e5eaf66b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db6608f6_6c2fc84a",
        "filename": "include/arch/aarch64/arch.h",
        "patchSetId": 23
      },
      "lineNbr": 533,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2021-06-24T16:51:04Z",
      "side": 1,
      "message": "Just a thought, this bit is RES0 if FEAT_AMUv1 is not implemented.\nWhen FEAT_AMUv1 is implemented it is effectively in unknown state at reset so agree it\u0027s better to force it to a known value. Though if we\u0027re picky we\u0027d need checking if the feature is implemented beforehand.",
      "range": {
        "startLine": 533,
        "startChar": 40,
        "endLine": 533,
        "endChar": 47
      },
      "revId": "4f886ff48579d06c169bc918c86adae8e5eaf66b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fec1f81f_c65bb586",
        "filename": "include/arch/aarch64/arch.h",
        "patchSetId": 23
      },
      "lineNbr": 533,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2021-06-25T05:34:52Z",
      "side": 1,
      "message": "Why we should check feature implementation before operating this bit(TAM)?\n1. If FEAT_AMUv1 is not implemented, setting TAM does not impact anything. Expecting this bit does not get checked for trap from EL2 to EL3 while accessing AMU registers, maybe decoding instruction fault happen in this case.\n2. If FEAT_AMUv1 is implemented, setting TAM bit causes access of AMU registers from EL2 results in a trap in EL3. \n\nand, if any platform want to allow EL2 to access AMU registers , they can enable the option \u0027ENABLE_AMU\u0027 for that purpose (implementation under this option covers clearing of TAM bit). (assuming this feature is implemented).\n\nPlease let me know if this understanding is correct or not?",
      "parentUuid": "db6608f6_6c2fc84a",
      "range": {
        "startLine": 533,
        "startChar": 40,
        "endLine": 533,
        "endChar": 47
      },
      "revId": "4f886ff48579d06c169bc918c86adae8e5eaf66b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53e33073_a358ff40",
        "filename": "include/arch/aarch64/arch.h",
        "patchSetId": 23
      },
      "lineNbr": 533,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2021-06-25T05:34:52Z",
      "side": 1,
      "message": "IMO, default clearing of TTA bit serve below purposes:\n1. act as RES0 (ignoring it is 0), when system register access to the PE Trace Unit registers is not implemented.\n2. allows EL2 to access trace system registers, when system register access to the PE Trace Unit registers is implemented.\n\nCurrently, code does not clear TTA bit in any other places apart from this common macros routine.\n\nI can see in FVP model\u003cFVP_Base_RevC-2xAEMv8A\u003e there is an option \u0027cluster0.trace_has_sysreg_access\u003d1\u0027 to enable trace system register access to PE trace unit register, that means model is supporting both above options.\n\nLet me know, what do you think?",
      "parentUuid": "ad47d9ef_df127648",
      "range": {
        "startLine": 533,
        "startChar": 50,
        "endLine": 533,
        "endChar": 57
      },
      "revId": "4f886ff48579d06c169bc918c86adae8e5eaf66b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f054800_8efd86c7",
        "filename": "include/arch/aarch64/el3_common_macros.S",
        "patchSetId": 23
      },
      "lineNbr": 189,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2021-06-24T16:51:04Z",
      "side": 1,
      "message": "Arm ARM says the value is unknown at reset when FEAT_AMUv1 is implemented, RES0 otherwise.\nThe comment suggests the value is one out of reset.\nSo should it better say \"Set to one so that ...\" as above?",
      "range": {
        "startLine": 189,
        "startChar": 18,
        "endLine": 189,
        "endChar": 36
      },
      "revId": "4f886ff48579d06c169bc918c86adae8e5eaf66b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f9006d2_03b45a24",
        "filename": "include/arch/aarch64/el3_common_macros.S",
        "patchSetId": 23
      },
      "lineNbr": 192,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2021-06-24T16:51:04Z",
      "side": 1,
      "message": "Set to zero",
      "range": {
        "startLine": 192,
        "startChar": 17,
        "endLine": 192,
        "endChar": 36
      },
      "revId": "4f886ff48579d06c169bc918c86adae8e5eaf66b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}