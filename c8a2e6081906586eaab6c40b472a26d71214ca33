{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "27e24b81_8b41e7e7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2023-08-31T10:08:38Z",
      "side": 1,
      "message": "I don\u0027t think we should error out: if people want to shoot themselves in the foot, we should let them. They will realise that this doesn\u0027t work when the build fails. Also the size issue might be fixed later.\nSo I think what we want is the *default* to be set depending on the build settings:\nSUNXI_AMEND_DTB should be enabled by default if SCPI is enabled or we run from DRAM.\nSUNXI_AMEND_DTB should be off by default if this is an A64 DEBUG\u003d1 build.\n\nSo people should be able to always override it on the command line, but a normal \"make PLAT\u003dsun50i_x DEBUG\u003dy\" build would always succeed.\n\nWhat I\u0027d suggest:\nLet it default to 1 in allwinner-common.mk for SCPI or DRAM builds.\nLet it default to 0 in sun50i-a64/platform.mk for DEBUG\u003d1 builds (before the include!).\nWould that work?",
      "revId": "c8a2e6081906586eaab6c40b472a26d71214ca33",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a32e1352_2021e18b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001087
      },
      "writtenOn": "2023-09-03T15:27:28Z",
      "side": 1,
      "message": "I\u0027ve implemented that and tested locally. That would work. \nIf Samuel agrees, I could push that for review.\n\nBy the way SUNXI_BL31_IN_DRAM\u003d1 build is broken currently (not related to this change). I\u0027ve fixed build locally for testing the build (not sure about functional correctness, because I\u0027ve not tested it yet). Maybe I can push it as part of other branch for review.",
      "parentUuid": "27e24b81_8b41e7e7",
      "revId": "c8a2e6081906586eaab6c40b472a26d71214ca33",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "18fb0f06_80c341f3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2023-09-05T08:31:33Z",
      "side": 1,
      "message": "SUNXI_BL31_IN_DRAM\u003d1 for A64, you mean? Please note that this option is only meant for the H616, which doesn\u0027t have (secure) SRAM, so we are forced to run in DRAM there. All other SoCs should use secure SRAM.",
      "parentUuid": "a32e1352_2021e18b",
      "revId": "c8a2e6081906586eaab6c40b472a26d71214ca33",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e337450_4936983a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001087
      },
      "writtenOn": "2023-09-05T10:15:53Z",
      "side": 1,
      "message": "yeah, I\u0027ve built SUNXI_BL31_IN_DRAM\u003d1 for A64. I thought SUNXI_BL31_IN_DRAM could be used as workaround for SRAM size limitation on A64. Apparently I was wrong.\n\nThere is no problem with SUNXI_BL31_IN_DRAM\u003d1 for H616. So it looks like no changes are needed then. Thanks for clarification.\n\nSo let\u0027s wait for Samuel\u0027s answer about SUNXI_AMEND_DTB.",
      "parentUuid": "18fb0f06_80c341f3",
      "revId": "c8a2e6081906586eaab6c40b472a26d71214ca33",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc9de2b9_35009a14",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000126
      },
      "writtenOn": "2023-09-05T10:47:51Z",
      "side": 1,
      "message": "\u003e Would that work?\n\nNo. I am not okay with DEBUG\u003d0/1 intentionally changing the behavior of the firmware in ways unrelated to debugging. That creates situations where enabling debugging magically makes problems go away, or introduces new problems, thus preventing debugging the original issue. We can set the defaults for SUNXI_* options however we want, but DEBUG\u003d must not affect them.\n\nIf you want to omit the forced error message, I am okay with that, though I expect it will lead to increased complaints about build failures, since I doubt most people following some HOWTO can/will want to investigate any build failures. (And if we make this change, `make PLAT\u003dsun50i_a64 DEBUG\u003d1 bl31` will fail. I don\u0027t really know why various documentation suggests a DEBUG\u003d1 build anyway, but that\u0027s the situation we\u0027re in.)",
      "parentUuid": "1e337450_4936983a",
      "revId": "c8a2e6081906586eaab6c40b472a26d71214ca33",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c86d1a06_cd36b619",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2023-09-05T11:17:39Z",
      "side": 1,
      "message": "So I see your point that DEBUG\u003d1 should not affect the feature set built in.\nThe suggestion of using DEBUG\u003d1 by default was to help \"remote debugging\", so that people can report meaningful information with an out-of-the-box build, not requiring them to rebuild TF-A.\nSo I think we need to solve this properly: SUNXI_AMEND_DTB should be enabled by default, but I don\u0027t want to lose the ability to do DEBUG\u003d1 builds.\nMaybe we can scale back on some debug messages, to decrease code and data size? And my gut feeling is that we still waste code and data somewhere, especially due to the vector table alignment. So I will try (again) to find some tricks to avoid excessive padding, and make more use of the available space.\n\nIf anyone (Samuel?) has any good pointers or some insight or ideas, I am all ears.\n\nIn the long run there is hope with us losing the regulator setup code, this can be done by U-Boot, with now mostly default build options missing. So maybe in a year or so we could switch the default to SUNXI_SETUP_REGULATORS\u003d0, saving us some space.",
      "parentUuid": "dc9de2b9_35009a14",
      "revId": "c8a2e6081906586eaab6c40b472a26d71214ca33",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fda7e2b7_4fa3beac",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001087
      },
      "writtenOn": "2023-09-06T09:18:59Z",
      "side": 1,
      "message": "I did some measurements of memory footprint:\n\n1) Build with SUNXI_AMEND_DTB\u003d0\n.text   - 44000-4a964 (0x698 free bytes to page boundary)\n.rodata - 4c000-4ca38\n.data   - 4d000-4d0d8\n\n2) Build with SUNXI_AMEND_DTB\u003d1\n.text 44000-4b904 (0x6f8 free bytes to page boundary),\n.rodata - 4d000-4dc18\n.data   - 4e000-4e0d8\n\nBuilding with SUNXI_AMEND_DTB\u003d1 increases code size with 4000 (0xFA0) bytes. Because of page alignment of .rodata, .data, these section have enough space and optimizations here (string merges and so on) will not help much. The problem is increased .text section.\n\nIMHO, getting rid of vector table alignment will not help without some extra code reduction. vector table has size of 0x800 bytes and free space after the code and before vector table is 0x698/0x6f8 bytes. Without removing some extra code number of used pages will be the same.",
      "parentUuid": "c86d1a06_cd36b619",
      "revId": "c8a2e6081906586eaab6c40b472a26d71214ca33",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "71f2d0ea_ad2935bd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2023-10-17T13:36:09Z",
      "side": 1,
      "message": "Hi there were no updates since mid September, can you please have a look at open comments and resolve as necessary? Thanks!",
      "revId": "c8a2e6081906586eaab6c40b472a26d71214ca33",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e32ff43_d577ea0b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2023-10-18T16:37:11Z",
      "side": 1,
      "message": "Hi @Olivier, so the general problem of this patch breaking the DEBUG\u003d1 build still persists. Andrey is on a mission to bring the code size down (his LTO patches). There might be other tricks to reduce the memory footprint, but until this isn\u0027t solved, I am against just merging this patch as is.\nNot an expert in gerrit workflow, but would marking this patch as WIP be the right thing here?",
      "parentUuid": "71f2d0ea_ad2935bd",
      "revId": "c8a2e6081906586eaab6c40b472a26d71214ca33",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6dee4daa_d520d48e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001087
      },
      "writtenOn": "2023-10-23T08:32:43Z",
      "side": 1,
      "message": "I\u0027ve marked this change as WIP as Andre suggested.\n\nIt would be nice if someone could help with review of LTO patches:\nhttps://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/23374\nhttps://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/23375\nhttps://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/23376",
      "parentUuid": "8e32ff43_d577ea0b",
      "revId": "c8a2e6081906586eaab6c40b472a26d71214ca33",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "262ec09c_c4ce4ed5",
        "filename": "plat/allwinner/common/allwinner-common.mk",
        "patchSetId": 3
      },
      "lineNbr": 97,
      "author": {
        "id": 1001087
      },
      "writtenOn": "2023-09-06T09:18:59Z",
      "side": 1,
      "message": "Samuel, Andre,\n\ndo we want to solve size problem as part of this review or as separate change? Is this change need some more changes? For example, removing \u0027error\u0027 enforcement or make it \u0027warning\u0027?",
      "revId": "c8a2e6081906586eaab6c40b472a26d71214ca33",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}