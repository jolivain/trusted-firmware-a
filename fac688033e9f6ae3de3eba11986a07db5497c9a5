{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "45198f3a_a483d3bb",
        "filename": "plat/st/common/stm32mp_crypto_lib.c",
        "patchSetId": 6
      },
      "lineNbr": 113,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2022-10-26T12:01:30Z",
      "side": 1,
      "message": "Should you run some (debug?) checks on alg_params to make sure it\u0027s actually a BrainPool curve, rather than assuming it is (if it\u0027s not a P256-NIST one)?",
      "range": {
        "startLine": 113,
        "startChar": 3,
        "endLine": 113,
        "endChar": 51
      },
      "revId": "fac688033e9f6ae3de3eba11986a07db5497c9a5",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "574d00b0_91be89b5",
        "filename": "plat/st/common/stm32mp_crypto_lib.c",
        "patchSetId": 6
      },
      "lineNbr": 113,
      "author": {
        "id": 1000144
      },
      "writtenOn": "2022-10-26T16:09:12Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "45198f3a_a483d3bb",
      "range": {
        "startLine": 113,
        "startChar": 3,
        "endLine": 113,
        "endChar": 51
      },
      "revId": "fac688033e9f6ae3de3eba11986a07db5497c9a5",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "56cf402c_7c09b26b",
        "filename": "plat/st/common/stm32mp_crypto_lib.c",
        "patchSetId": 6
      },
      "lineNbr": 287,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2022-10-26T09:55:39Z",
      "side": 1,
      "message": "In the intent to reduce the amount of duplicated code, I think there would be value in moving this helper function into the generic authentication framework. Then the default crypto lib (drivers/auth/mbedtls/mbedtls_crypto.c) could call it from verify_hash() and so could any platform-specific crypto library, like yours. I imagine this is a common use case for crypto libs based on hardware crypto accelerators.\n\nWhat do you think? I could not see anything specific in your implementation, except you\u0027re assuming a SHA-256 digest, which I suppose could be enforced outside of this helper function?\n\nSame comment would apply to get_plain_pk_from_asn1().",
      "range": {
        "startLine": 242,
        "startChar": 0,
        "endLine": 287,
        "endChar": 1
      },
      "revId": "fac688033e9f6ae3de3eba11986a07db5497c9a5",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "082e43c7_910b3b3e",
        "filename": "plat/st/common/stm32mp_crypto_lib.c",
        "patchSetId": 6
      },
      "lineNbr": 287,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2022-10-26T11:33:01Z",
      "side": 1,
      "message": "\u003e Same comment would apply to get_plain_pk_from_asn1().\n\nHmm, maybe not... I see that drivers/auth/mbedtls/mbedtls_crypto.c uses mbedtls_x509_get_sig_alg() to parse the ASN.1-wrapped public key, whereas you do something more targeted at ECDSA keys, since this is what you\u0027re using on STMP32MP1 platforms and you want to avoid pulling the x509 module of mbedtls... This one might be hard to share across crypto libs.",
      "parentUuid": "56cf402c_7c09b26b",
      "range": {
        "startLine": 242,
        "startChar": 0,
        "endLine": 287,
        "endChar": 1
      },
      "revId": "fac688033e9f6ae3de3eba11986a07db5497c9a5",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8551f7f0_8abba087",
        "filename": "plat/st/common/stm32mp_crypto_lib.c",
        "patchSetId": 6
      },
      "lineNbr": 287,
      "author": {
        "id": 1000144
      },
      "writtenOn": "2022-10-27T15:43:30Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "082e43c7_910b3b3e",
      "range": {
        "startLine": 242,
        "startChar": 0,
        "endLine": 287,
        "endChar": 1
      },
      "revId": "fac688033e9f6ae3de3eba11986a07db5497c9a5",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f92bcb5f_613abaab",
        "filename": "plat/st/common/stm32mp_crypto_lib.c",
        "patchSetId": 6
      },
      "lineNbr": 537,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2022-10-26T12:01:30Z",
      "side": 1,
      "message": "Should the key be wiped from memory before exiting the function here?\n\nAnd perhaps also at line 525, even though only part of the key might be available, this might be worth wiping out as well.",
      "range": {
        "startLine": 537,
        "startChar": 0,
        "endLine": 537,
        "endChar": 17
      },
      "revId": "fac688033e9f6ae3de3eba11986a07db5497c9a5",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ef4a278_c30247cc",
        "filename": "plat/st/common/stm32mp_crypto_lib.c",
        "patchSetId": 6
      },
      "lineNbr": 537,
      "author": {
        "id": 1000144
      },
      "writtenOn": "2022-10-26T16:09:12Z",
      "side": 1,
      "message": "I think, rechecking, that there is no reason to check the code error return as the function always return true.\nOtherwise, you\u0027re right, the key might be clear in case of error.",
      "parentUuid": "f92bcb5f_613abaab",
      "range": {
        "startLine": 537,
        "startChar": 0,
        "endLine": 537,
        "endChar": 17
      },
      "revId": "fac688033e9f6ae3de3eba11986a07db5497c9a5",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}