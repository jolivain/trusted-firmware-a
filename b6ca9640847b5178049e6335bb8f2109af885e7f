{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7d653919_417d1a31",
        "filename": "include/plat/arm/common/arm_def.h",
        "patchSetId": 19
      },
      "lineNbr": 436,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2021-05-21T10:53:35Z",
      "side": 1,
      "message": "Can you mention in the commit message why this change is necessary? It seems unrelated to the MMU change on the first glance?",
      "revId": "b6ca9640847b5178049e6335bb8f2109af885e7f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c3d25d3_0fff0596",
        "filename": "include/plat/arm/common/arm_def.h",
        "patchSetId": 19
      },
      "lineNbr": 436,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2021-05-21T11:27:52Z",
      "side": 1,
      "message": "I discussed this with David. It was actually part of another patch that was included here by accident. I\u0027ll remove it",
      "parentUuid": "7d653919_417d1a31",
      "revId": "b6ca9640847b5178049e6335bb8f2109af885e7f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f4d4417_43714568",
        "filename": "include/plat/arm/common/arm_def.h",
        "patchSetId": 19
      },
      "lineNbr": 436,
      "author": {
        "id": 1000440
      },
      "writtenOn": "2021-05-21T11:32:28Z",
      "side": 1,
      "message": "No it wasn\u0027t!\nThis is to allow PIE to be disabled on the arm_fpga platform, since it doesn\u0027t currently work.",
      "parentUuid": "4c3d25d3_0fff0596",
      "revId": "b6ca9640847b5178049e6335bb8f2109af885e7f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02ea6359_ceda8218",
        "filename": "include/plat/arm/common/arm_def.h",
        "patchSetId": 19
      },
      "lineNbr": 436,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2021-05-21T11:55:37Z",
      "side": 1,
      "message": "In any case that smells like a separate patch ;-)",
      "parentUuid": "3f4d4417_43714568",
      "revId": "b6ca9640847b5178049e6335bb8f2109af885e7f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53de4118_1e1b8966",
        "filename": "plat/arm/board/arm_fpga/fpga_bl31_setup.c",
        "patchSetId": 19
      },
      "lineNbr": 96,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2021-05-21T10:53:35Z",
      "side": 1,
      "message": "So this is duplicating the code from fpga_gicv3.c, right?\nI actually have patches to change this one, so is there any chance we can unify this code?\nSomething like fpga_get_resources(), which fills some struct with GICD_BASE, GICR_BASE, UART_BASE, and then uses this later on?",
      "revId": "b6ca9640847b5178049e6335bb8f2109af885e7f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "51f7e076_f17fc3b3",
        "filename": "plat/arm/board/arm_fpga/fpga_bl31_setup.c",
        "patchSetId": 19
      },
      "lineNbr": 96,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2021-05-21T11:27:52Z",
      "side": 1,
      "message": "Yes, that would be great. I wasn\u0027t a fan of having this code here.",
      "parentUuid": "53de4118_1e1b8966",
      "revId": "b6ca9640847b5178049e6335bb8f2109af885e7f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee89bdce_8e111186",
        "filename": "plat/arm/board/arm_fpga/fpga_common.c",
        "patchSetId": 19
      },
      "lineNbr": 1,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2021-05-21T10:53:35Z",
      "side": 1,
      "message": "Why is this in a separate file? Can\u0027t this be just inside fpga_bl31_setup.c? That should export parm_arm_mmap[] as well, shouldn\u0027t it?",
      "revId": "b6ca9640847b5178049e6335bb8f2109af885e7f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec5667d2_a15de9ad",
        "filename": "plat/arm/board/arm_fpga/fpga_common.c",
        "patchSetId": 19
      },
      "lineNbr": 1,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2021-05-21T11:27:52Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ee89bdce_8e111186",
      "revId": "b6ca9640847b5178049e6335bb8f2109af885e7f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dca22535_4ef012c1",
        "filename": "plat/arm/board/arm_fpga/include/platform_def.h",
        "patchSetId": 19
      },
      "lineNbr": 79,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2021-05-21T10:53:35Z",
      "side": 1,
      "message": "Is there any reason we use 36 bits here? Wouldn\u0027t 32 be totally sufficient?",
      "revId": "b6ca9640847b5178049e6335bb8f2109af885e7f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91002a13_87e71c53",
        "filename": "plat/arm/board/arm_fpga/include/platform_def.h",
        "patchSetId": 19
      },
      "lineNbr": 79,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2021-05-21T11:27:52Z",
      "side": 1,
      "message": "I think we got this from the FVP platform. I will double check to confirm and I will also test with 32 bits",
      "parentUuid": "dca22535_4ef012c1",
      "revId": "b6ca9640847b5178049e6335bb8f2109af885e7f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d246c5c_9c2ad940",
        "filename": "plat/arm/board/arm_fpga/include/platform_def.h",
        "patchSetId": 19
      },
      "lineNbr": 79,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2021-05-21T11:55:37Z",
      "side": 1,
      "message": "I think that\u0027s a trap I fell into before: For the EL3 page tables we don\u0027t need to cover all of memory, but just the memory that BL31 will ever need for its own purposes. And in our case this is 2GB -\u003e 2GB+512KB, to cover BL31\u0027s sections.\nNon-secure might ask for a secondary to enter outside of this region, but that doesn\u0027t bother us and the page tables, since we never touch this memory in EL3.",
      "parentUuid": "91002a13_87e71c53",
      "revId": "b6ca9640847b5178049e6335bb8f2109af885e7f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}