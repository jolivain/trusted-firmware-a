{
  "comments": [
    {
      "key": {
        "uuid": "bd93a867_b39a7a4a",
        "filename": "drivers/arm/gic/v3/gicv3_helpers.c",
        "patchSetId": 3
      },
      "lineNbr": 342,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-09-25T15:27:37Z",
      "side": 1,
      "message": "Andre, did you already resolve the case where GICR frames might not be linearly mapped and will have holes due to CPU cores fused off? Did you say that is potential issue? Sorry, I didn\u0027t understand the conclusion from the previous discussion",
      "range": {
        "startLine": 342,
        "startChar": 2,
        "endLine": 342,
        "endChar": 46
      },
      "revId": "533b49f419205c6c9b41558351423569ddfc7e88",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bdf915d3_11b84653",
        "filename": "drivers/arm/gic/v3/gicv3_helpers.c",
        "patchSetId": 3
      },
      "lineNbr": 342,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2020-09-25T15:37:27Z",
      "side": 1,
      "message": "Ah, I think I promised a comment. Will fix this ASAP.\n(In a nutshell: this function is per frame, so if your platform has multiple GICR ranges, the caller would need to iterate (and add) anyway. Also: We assume that each region is contiguous when it cames to GICR_TYPER accessibility, as this is what the Linux kernel does as well).",
      "parentUuid": "bd93a867_b39a7a4a",
      "range": {
        "startLine": 342,
        "startChar": 2,
        "endLine": 342,
        "endChar": 46
      },
      "revId": "533b49f419205c6c9b41558351423569ddfc7e88",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac77f0be_3500ac7e",
        "filename": "drivers/arm/gic/v3/gicv3_helpers.c",
        "patchSetId": 3
      },
      "lineNbr": 342,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-09-25T16:05:34Z",
      "side": 1,
      "message": "Thanks. Let me confirm with our internal teams to see that this proposal works for us too. Will circle back shortly.",
      "parentUuid": "bdf915d3_11b84653",
      "range": {
        "startLine": 342,
        "startChar": 2,
        "endLine": 342,
        "endChar": 46
      },
      "revId": "533b49f419205c6c9b41558351423569ddfc7e88",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e80dd62_2ce0ddf0",
        "filename": "drivers/arm/gic/v3/gicv3_helpers.c",
        "patchSetId": 3
      },
      "lineNbr": 342,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2020-09-25T16:23:10Z",
      "side": 1,
      "message": "So do you plan on using this function? While this is generic code, it is not called by generic code, but instead by platforms that need it, to cover varying number of cores. In the moment the ARM FPGA code is the only user.\n\nIn case of silicon down-coring I would not expect this to be necessary, because either the GICR frames are remapped to control only the active cores, or all GICR frames stay active. TYPER contains the MPIDR, so having more GICR frames than cores is not a problem.\n\nThe only requirement that this function has is that each GICR_TYPER can be read, and there is one instance where the LAST bit is set. That should be the same assumption that the Linux kernel\u0027s GICv3 driver makes.",
      "parentUuid": "ac77f0be_3500ac7e",
      "range": {
        "startLine": 342,
        "startChar": 2,
        "endLine": 342,
        "endChar": 46
      },
      "revId": "533b49f419205c6c9b41558351423569ddfc7e88",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62be56b6_477cb331",
        "filename": "drivers/arm/gic/v3/gicv3_helpers.c",
        "patchSetId": 3
      },
      "lineNbr": 342,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-09-25T17:09:46Z",
      "side": 1,
      "message": "Since this is a common function, available to all platforms, I would like to check if this would work for Tegra platforms.\n\n\u003e\u003e TYPER contains the MPIDR, so having more GICR frames than cores is not a problem.\nThe current logic in this patch would not cover this scenario. Did I get that right?",
      "parentUuid": "1e80dd62_2ce0ddf0",
      "range": {
        "startLine": 342,
        "startChar": 2,
        "endLine": 342,
        "endChar": 46
      },
      "revId": "533b49f419205c6c9b41558351423569ddfc7e88",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    }
  ]
}