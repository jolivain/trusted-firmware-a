{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a4205186_fac50055",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000443
      },
      "writtenOn": "2023-11-13T20:34:13Z",
      "side": 1,
      "message": "Adding Jean-Philippe Brucker cause this patch replaces some parts of https://review.trustedfirmware.org/q/topic:%22qemu-rme%22 set.",
      "revId": "642c4aac95f9fc6eb3b8043113cd64b9a7579520",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b3b0f310_ee4fdb64",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2023-11-14T10:51:27Z",
      "side": 1,
      "message": "That looks the right approach in general. One comment about RAS inside.\n\nAlso, doing some cross checking I wonder about ENABLE_SME_FOR_NS: shouldn\u0027t that be set to 2 as well?\nAnd for the sake of completeness we should have ENABLE_FEAT_CSV2_2\u003d2 also. That doesn\u0027t seem to do anything outside of feat_detect(), but shouldn\u0027t hurt to have it anyways.",
      "revId": "642c4aac95f9fc6eb3b8043113cd64b9a7579520",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "25f77ee6_3bffaa23",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000443
      },
      "writtenOn": "2023-11-14T11:17:02Z",
      "side": 1,
      "message": "SME_FOR_NS is 2 already. Unless SPM_MM which force to disable SVE/SME.\n\nWill add CSV2_2 one.",
      "parentUuid": "b3b0f310_ee4fdb64",
      "revId": "642c4aac95f9fc6eb3b8043113cd64b9a7579520",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "da05bbbb_4378667f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1001039
      },
      "writtenOn": "2023-11-14T11:27:26Z",
      "side": 1,
      "message": "Thanks, excellent cleanup, that gets rid of a couple of patches in the RME series",
      "parentUuid": "a4205186_fac50055",
      "revId": "642c4aac95f9fc6eb3b8043113cd64b9a7579520",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b653ad00_7278fb8a",
        "filename": "plat/qemu/common/common.mk",
        "patchSetId": 4
      },
      "lineNbr": 99,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2023-11-14T10:51:27Z",
      "side": 1,
      "message": "Why is this set to 1? Shouldn\u0027t it be 2 as well? Otherwise we will use an \"esb\" in the context switch path, which is a NOP in v8.0.",
      "revId": "642c4aac95f9fc6eb3b8043113cd64b9a7579520",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79a060e0_94015fce",
        "filename": "plat/qemu/common/common.mk",
        "patchSetId": 4
      },
      "lineNbr": 99,
      "author": {
        "id": 1000443
      },
      "writtenOn": "2023-11-14T11:14:46Z",
      "side": 1,
      "message": "\"Makefile:1158: *** ENABLE_FEAT_RAS must be boolean. Stop.\"",
      "parentUuid": "b653ad00_7278fb8a",
      "revId": "642c4aac95f9fc6eb3b8043113cd64b9a7579520",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "55f030e4_90ae7264",
        "filename": "plat/qemu/common/common.mk",
        "patchSetId": 4
      },
      "lineNbr": 99,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2023-11-14T11:45:51Z",
      "side": 1,
      "message": "@Andre : https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/23982\n\nRAS is a special case and we can\u0027t have dynamic detection of this feature.\n\nAlso, the esb scenario you are mentioning is not going to have much impact on simulation platforms like FVP/QEMU",
      "parentUuid": "79a060e0_94015fce",
      "revId": "642c4aac95f9fc6eb3b8043113cd64b9a7579520",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17a0fe91_c05e835a",
        "filename": "plat/qemu/common/common.mk",
        "patchSetId": 4
      },
      "lineNbr": 99,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2023-11-14T15:42:01Z",
      "side": 1,
      "message": "Ah, I see, I missed that patch, and had checked out an older branch when grep\u0027ing for FEAT_RAS.\nBut fixing FEAT_RAS to 1 is now dangerous, because we skip the \"dsb; isb\" sequence in .macro synchronize_errors, for instance, so we miss this barrier on v8.0 CPUs (emulations).\n\nAnd I wouldn\u0027t sign this \"the esb scenario you are mentioning is not going to have much impact on simulation platforms\", as especially emulators could be tempted to postpone certain expensive emulation chores when not seeing an explicit barrier. We have seen this in the FVP before, where missing barriers actually broke code, which ran fine on real hardware, because buffers and reorder windows would be potentially much smaller in a silicon implementation compared to a software emulation.",
      "parentUuid": "55f030e4_90ae7264",
      "revId": "642c4aac95f9fc6eb3b8043113cd64b9a7579520",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a129904f_47ec2f4c",
        "filename": "plat/qemu/common/common.mk",
        "patchSetId": 4
      },
      "lineNbr": 99,
      "author": {
        "id": 1000443
      },
      "writtenOn": "2023-11-14T16:00:02Z",
      "side": 1,
      "message": "Disabled RAS for now. We will get to it later.",
      "parentUuid": "17a0fe91_c05e835a",
      "revId": "642c4aac95f9fc6eb3b8043113cd64b9a7579520",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "707b9ec5_4fd472f9",
        "filename": "plat/qemu/common/common.mk",
        "patchSetId": 4
      },
      "lineNbr": 99,
      "author": {
        "id": 1000541
      },
      "writtenOn": "2023-11-14T16:01:28Z",
      "side": 1,
      "message": "Yes. Also, being able to run the exact same software as on hardware is the explicit point of qemu_sbsa/sbsa-ref. If we need to run with different codegen options, we risk missing software bugs that corrupt different locations depending on image size/layout.",
      "parentUuid": "17a0fe91_c05e835a",
      "revId": "642c4aac95f9fc6eb3b8043113cd64b9a7579520",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8bc13366_6d237b17",
        "filename": "plat/qemu/common/common.mk",
        "patchSetId": 4
      },
      "lineNbr": 99,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2023-11-14T21:44:59Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "707b9ec5_4fd472f9",
      "revId": "642c4aac95f9fc6eb3b8043113cd64b9a7579520",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "18eedf6b_350f4880",
        "filename": "plat/qemu/common/common.mk",
        "patchSetId": 4
      },
      "lineNbr": 103,
      "author": {
        "id": 1000443
      },
      "writtenOn": "2023-11-14T11:23:07Z",
      "side": 1,
      "message": "dropped TRF as QEMU does not implement it",
      "revId": "642c4aac95f9fc6eb3b8043113cd64b9a7579520",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}