{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c5e310b0_04dc22b6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2021-03-23T01:01:34Z",
      "side": 1,
      "message": "But this is switching to a different way of reserving memory, right? From the /reserved-memory *DT node* (Documentation/devicetree/bindings/reserved-memory/reserved-memory.txt) to that now somewhat deprecated /memreserve/ special FDT feature? At the very least this deserves some comment in the commit message.\nBut actually I wonder if we should keep the node version, but enhance the code to properly detect overlaps, and merge them?",
      "revId": "cc9b02e52bd956cd10e33662570eb8b39e4deadc",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "590dde7d_40f3f522",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000306
      },
      "writtenOn": "2021-03-23T14:58:41Z",
      "side": 1,
      "message": "Yes, and that is the trick to make things work: The kernel uses memreserve already (probably just like for rpi3), and we cannot put reserved-memory over that any more. See https://lore.kernel.org/lkml/6a283aef-388d-c300-8304-503bc88a4dcf@siemens.com/ for more background.",
      "parentUuid": "c5e310b0_04dc22b6",
      "revId": "cc9b02e52bd956cd10e33662570eb8b39e4deadc",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1831c64_457b1dc4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2021-03-23T17:16:45Z",
      "side": 1,
      "message": "Yeah, so I think the proper solution would be to remove the /memreserve/, since that is no longer needed for the secondaries\u0027 spin-tables (they are now spinning in TF-A).\nAnd then replace this with the /reserved-memory node, since we (theoretically) need the stronger no-map property to prevent speculation into secure memory. (On the RPi this doesn\u0027t matter, since we cannot make this real secure memory, but still we should at least try to do the right thing).\nI will look into it this week, unless you beat me to it.",
      "parentUuid": "590dde7d_40f3f522",
      "revId": "cc9b02e52bd956cd10e33662570eb8b39e4deadc",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed87d240_6ad355a9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000306
      },
      "writtenOn": "2021-03-23T17:27:22Z",
      "side": 1,
      "message": "I\u0027m happy if you could address this with an even better pattern - just make sure to also share the solution between rpi3 and 4.",
      "parentUuid": "e1831c64_457b1dc4",
      "revId": "cc9b02e52bd956cd10e33662570eb8b39e4deadc",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0344e28_5752fa82",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000306
      },
      "writtenOn": "2021-04-18T06:29:05Z",
      "side": 1,
      "message": "Any news on this, Andr√©?",
      "parentUuid": "ed87d240_6ad355a9",
      "revId": "cc9b02e52bd956cd10e33662570eb8b39e4deadc",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b9884642_00f783bc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2021-04-18T20:23:37Z",
      "side": 1,
      "message": "So I had a stab at implementing check-for-overlap-and merge for the /reserved-memory node, but I think I misunderstood the problem:\nThis is because there are overlapping /reserved-memory and /memreserve/ regions, right? So we could just easily remove /memreserve/, which we actually don\u0027t need, because the secondaries don\u0027t spin there anymore? And then keep the current code, adding the new /reserved-memory node?\nAnd in a second step move the RPi3 over to do the same?",
      "parentUuid": "c0344e28_5752fa82",
      "revId": "cc9b02e52bd956cd10e33662570eb8b39e4deadc",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41cd63e5_8a694fb2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000306
      },
      "writtenOn": "2021-04-19T06:41:11Z",
      "side": 1,
      "message": "Yes, double-reserve fails now, and the TF-A provided reserved-memory region was the victim. If we get rid of memreserve, existing code should work. But I did not test that path yet. And I\u0027m also not sure if the kernel should/could already drop the memreserve or if that would cause compatibility issues.",
      "parentUuid": "b9884642_00f783bc",
      "revId": "cc9b02e52bd956cd10e33662570eb8b39e4deadc",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4cc7e971_1b591e5d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000306
      },
      "writtenOn": "2021-06-03T11:23:42Z",
      "side": 1,
      "message": "Ping, where are we with this topic?",
      "parentUuid": "41cd63e5_8a694fb2",
      "revId": "cc9b02e52bd956cd10e33662570eb8b39e4deadc",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1714a31b_fe0850a7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2021-06-25T15:09:19Z",
      "side": 1,
      "message": "sorry for the delays, other fruit Pi\u0027s begging for attention ;-)\nI pushed https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/10465, which seems to fix the problem for me. Can you confirm?",
      "parentUuid": "4cc7e971_1b591e5d",
      "revId": "cc9b02e52bd956cd10e33662570eb8b39e4deadc",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ca79cafe_0fb243e0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2021-07-07T14:19:53Z",
      "side": 1,
      "message": "Please refer to this email and fix the commit message.\nhttps://lists.trustedfirmware.org/pipermail/tf-a/2021-May/001178.html",
      "revId": "cc9b02e52bd956cd10e33662570eb8b39e4deadc",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2174c12d_74bba937",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2021-07-07T15:02:49Z",
      "side": 1,
      "message": "I was hoping that 10465 would supersede this patch here. Waiting for Jan to comment.",
      "parentUuid": "ca79cafe_0fb243e0",
      "revId": "cc9b02e52bd956cd10e33662570eb8b39e4deadc",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "10fa8206_6855c9e3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000049
      },
      "writtenOn": "2021-07-28T19:30:13Z",
      "side": 1,
      "message": "Andre/Jan, has this patch stalled and is it going anywhere? If not I will abandon it.",
      "revId": "cc9b02e52bd956cd10e33662570eb8b39e4deadc",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}