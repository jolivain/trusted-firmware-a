{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8bbb3d05_e440109c",
        "filename": "lib/xlat_tables_v2/xlat_tables_utils.c",
        "patchSetId": 5
      },
      "lineNbr": 433,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-07-09T14:08:04Z",
      "side": 1,
      "message": "I didn\u0027t get why secure attribute is valid if only SEL2 is implemented ?",
      "range": {
        "startLine": 433,
        "startChar": 26,
        "endLine": 433,
        "endChar": 68
      },
      "revId": "d47900e37b4f58e3df01e3c09ca035c868affa7a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43bf0381_0693d853",
        "filename": "lib/xlat_tables_v2/xlat_tables_utils.c",
        "patchSetId": 5
      },
      "lineNbr": 433,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2024-07-09T14:15:47Z",
      "side": 1,
      "message": "Yes I was also a bit curious about this,\nI believe this is assuming the combinations of:\nFEAT_RME implemented + FEAT_SEL2 implemented \u003d\u003e in which case secure PAS is chosen\nor\nFEAT_RME implemented + FEAT_SEL2 not implemented \u003d\u003e results in NS PAS",
      "parentUuid": "8bbb3d05_e440109c",
      "range": {
        "startLine": 433,
        "startChar": 26,
        "endLine": 433,
        "endChar": 68
      },
      "revId": "d47900e37b4f58e3df01e3c09ca035c868affa7a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae0b86c5_066848d7",
        "filename": "lib/xlat_tables_v2/xlat_tables_utils.c",
        "patchSetId": 5
      },
      "lineNbr": 433,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2024-07-09T14:16:57Z",
      "side": 1,
      "message": "But perhaps we should distinguish \u0027FEAT_SEL2 implemented\u0027 from \u0027TZ implemented\u0027",
      "parentUuid": "43bf0381_0693d853",
      "range": {
        "startLine": 433,
        "startChar": 26,
        "endLine": 433,
        "endChar": 68
      },
      "revId": "d47900e37b4f58e3df01e3c09ca035c868affa7a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3d6ed66_5e3ade05",
        "filename": "lib/xlat_tables_v2/xlat_tables_utils.c",
        "patchSetId": 5
      },
      "lineNbr": 442,
      "author": {
        "id": 1000124
      },
      "writtenOn": "2024-06-27T17:42:01Z",
      "side": 1,
      "message": "is_feat_sel2_supported() \u003d\u003d 0",
      "range": {
        "startLine": 442,
        "startChar": 7,
        "endLine": 442,
        "endChar": 29
      },
      "revId": "d47900e37b4f58e3df01e3c09ca035c868affa7a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2f86226_fc397761",
        "filename": "lib/xlat_tables_v2/xlat_tables_utils.c",
        "patchSetId": 5
      },
      "lineNbr": 442,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2024-06-28T14:26:19Z",
      "side": 1,
      "message": "``is_feat_sel2_supported()`` function is intended to return a boolean value only, so I think the current check is fine.",
      "parentUuid": "e3d6ed66_5e3ade05",
      "range": {
        "startLine": 442,
        "startChar": 7,
        "endLine": 442,
        "endChar": 29
      },
      "revId": "d47900e37b4f58e3df01e3c09ca035c868affa7a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2809a6bc_c4a849e2",
        "filename": "lib/xlat_tables_v2/xlat_tables_utils.c",
        "patchSetId": 5
      },
      "lineNbr": 442,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2024-07-09T14:00:57Z",
      "side": 1,
      "message": "I guess Mark emphasizes the function return value should be tested against an explicit value (true/false). I kind of recall of such a MISRA rule?\n\nDespite current code being functionally correct, for readability, I\u0027m a bit concerned there is no case of using the MT_SECURE flag e.g.:\n\n    case 0U:\n        if (is_feat_sel2_supported() \u003d\u003d true) {\n            *attributes |\u003d MT_SECURE;\n        } else {\n            *attributes |\u003d MT_NS;\n        }\n        \nor remove else statement, and fall through case 1U following.\nThis is just a suggestion, you can ignore if it\u0027s not worth.",
      "parentUuid": "d2f86226_fc397761",
      "range": {
        "startLine": 442,
        "startChar": 7,
        "endLine": 442,
        "endChar": 29
      },
      "revId": "d47900e37b4f58e3df01e3c09ca035c868affa7a",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}