{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4665b908_25a65f03",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 28
      },
      "lineNbr": 0,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-07-08T07:51:37Z",
      "side": 1,
      "message": "Need a flow chart for FFH flow in EL3. Can add on for KFH too.",
      "revId": "957a5ca128ab2ae0b2fed98773403d665b0bd87e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2da84ea3_91f429aa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 28
      },
      "lineNbr": 0,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2023-07-10T17:31:48Z",
      "side": 1,
      "message": "Will post the doc patch soon.",
      "parentUuid": "4665b908_25a65f03",
      "revId": "957a5ca128ab2ae0b2fed98773403d665b0bd87e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47d190a7_84dbe810",
        "filename": "bl31/aarch64/ea_delegate.S",
        "patchSetId": 28
      },
      "lineNbr": 142,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-07-08T07:50:51Z",
      "side": 1,
      "message": "When FFH is enabled, then EA routing has to be dynamically tested. Each world may have its own EA routing and cannot assume the same across the 3 worlds. \n\nCan test for scr_el3.EA bit and select the path KFH path when EA \u003d\u003d 0.",
      "range": {
        "startLine": 142,
        "startChar": 4,
        "endLine": 142,
        "endChar": 26
      },
      "revId": "957a5ca128ab2ae0b2fed98773403d665b0bd87e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e15b25f6_813f7519",
        "filename": "bl31/aarch64/ea_delegate.S",
        "patchSetId": 28
      },
      "lineNbr": 142,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2023-07-10T17:31:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "47d190a7_84dbe810",
      "range": {
        "startLine": 142,
        "startChar": 4,
        "endLine": 142,
        "endChar": 26
      },
      "revId": "957a5ca128ab2ae0b2fed98773403d665b0bd87e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9ae6776_571836e7",
        "filename": "bl31/aarch64/ea_delegate.S",
        "patchSetId": 28
      },
      "lineNbr": 148,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-07-10T06:34:32Z",
      "side": 1,
      "message": "i\u0027m even more confused now, surely this fits in just the ELR context entry? I get the counter, but why significantly increase the context struct when it\u0027s already uncomfortably big?",
      "range": {
        "startLine": 148,
        "startChar": 42,
        "endLine": 148,
        "endChar": 59
      },
      "revId": "957a5ca128ab2ae0b2fed98773403d665b0bd87e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "553368d3_aa755114",
        "filename": "bl31/aarch64/ea_delegate.S",
        "patchSetId": 28
      },
      "lineNbr": 148,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-07-10T08:32:43Z",
      "side": 1,
      "message": "yes, it does seem we need to only stash the ESR_EL3. Any re-entry back to NS (like SDEI) will take care to preserve the elr_el3, spsr_el3 before re-entry and then restore it back on SDEI complete.",
      "parentUuid": "c9ae6776_571836e7",
      "range": {
        "startLine": 148,
        "startChar": 42,
        "endLine": 148,
        "endChar": 59
      },
      "revId": "957a5ca128ab2ae0b2fed98773403d665b0bd87e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f861fcf_3089d4b8",
        "filename": "bl31/aarch64/ea_delegate.S",
        "patchSetId": 28
      },
      "lineNbr": 148,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2023-07-10T08:41:14Z",
      "side": 1,
      "message": "It only increases for Firmware First Handling, the default KFH(for most of the configs/plats) still has same size.\n\n@Soby, We need to stash both SPSR and ELR_EL3 otherwise we will loose the original ones as the newly saved values will the value at the execution in handle_pended_serror.",
      "parentUuid": "c9ae6776_571836e7",
      "range": {
        "startLine": 148,
        "startChar": 42,
        "endLine": 148,
        "endChar": 59
      },
      "revId": "957a5ca128ab2ae0b2fed98773403d665b0bd87e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "835cb521_5ade2a0e",
        "filename": "bl31/aarch64/ea_delegate.S",
        "patchSetId": 28
      },
      "lineNbr": 148,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-07-10T15:29:38Z",
      "side": 1,
      "message": "ah, yes, forgot that we are triggering the Serror at current EL after the isb(). Ok.",
      "parentUuid": "9f861fcf_3089d4b8",
      "range": {
        "startLine": 148,
        "startChar": 42,
        "endLine": 148,
        "endChar": 59
      },
      "revId": "957a5ca128ab2ae0b2fed98773403d665b0bd87e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "20a6cf47_7efdf9f4",
        "filename": "bl31/aarch64/ea_delegate.S",
        "patchSetId": 28
      },
      "lineNbr": 148,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2023-07-10T17:31:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "835cb521_5ade2a0e",
      "range": {
        "startLine": 148,
        "startChar": 42,
        "endLine": 148,
        "endChar": 59
      },
      "revId": "957a5ca128ab2ae0b2fed98773403d665b0bd87e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35fd6f59_3f6486ec",
        "filename": "bl31/aarch64/ea_delegate.S",
        "patchSetId": 28
      },
      "lineNbr": 152,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-07-08T07:50:51Z",
      "side": 1,
      "message": "CTX_NESTED_EA_FLAG",
      "range": {
        "startLine": 152,
        "startChar": 42,
        "endLine": 152,
        "endChar": 60
      },
      "revId": "957a5ca128ab2ae0b2fed98773403d665b0bd87e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a1f7444c_598b16a4",
        "filename": "bl31/aarch64/ea_delegate.S",
        "patchSetId": 28
      },
      "lineNbr": 152,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2023-07-10T17:31:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "35fd6f59_3f6486ec",
      "range": {
        "startLine": 152,
        "startChar": 42,
        "endLine": 152,
        "endChar": 60
      },
      "revId": "957a5ca128ab2ae0b2fed98773403d665b0bd87e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5fe75a5_dad9add3",
        "filename": "bl31/aarch64/ea_delegate.S",
        "patchSetId": 28
      },
      "lineNbr": 153,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2023-07-07T20:28:22Z",
      "side": 1,
      "message": "Is a \"bl pauth_load_bl31_apiakey\" not needed here?",
      "revId": "957a5ca128ab2ae0b2fed98773403d665b0bd87e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5db8a8ea_bb116608",
        "filename": "bl31/aarch64/ea_delegate.S",
        "patchSetId": 28
      },
      "lineNbr": 153,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2023-07-10T17:31:48Z",
      "side": 1,
      "message": "Yes, thanks for pointing out.",
      "parentUuid": "a5fe75a5_dad9add3",
      "revId": "957a5ca128ab2ae0b2fed98773403d665b0bd87e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f03421c6_79abc70a",
        "filename": "bl31/aarch64/ea_delegate.S",
        "patchSetId": 28
      },
      "lineNbr": 155,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-07-08T07:50:51Z",
      "side": 1,
      "message": "Need a comment here that the pending SError will trigger at current EL.",
      "revId": "957a5ca128ab2ae0b2fed98773403d665b0bd87e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb7573f5_4748d422",
        "filename": "bl31/aarch64/ea_delegate.S",
        "patchSetId": 28
      },
      "lineNbr": 155,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-07-10T15:29:38Z",
      "side": 1,
      "message": "Thinking further, actually PSTATE updates are self synchronizing, so isb is not particularly not needed for the A bit update.\n\nSince the intention is to synchronize flags to isolate the error to a particular world, it can be argued that dsb+isb (non RAS case), and esb (RAS case) is more useful. \n\nThen , since this is error path, optimizing with esb may not be useful. Can keep it simple with dsb + isb.",
      "parentUuid": "f03421c6_79abc70a",
      "revId": "957a5ca128ab2ae0b2fed98773403d665b0bd87e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4306261a_2352ac2d",
        "filename": "bl31/aarch64/ea_delegate.S",
        "patchSetId": 28
      },
      "lineNbr": 155,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-07-10T15:38:51Z",
      "side": 1,
      "message": "\u003e dsb+isb (non RAS case)\n\nWould be worth checking the Kernel team whether dsb+isb is needed or just dsb is sufficient for the Error sync.",
      "parentUuid": "bb7573f5_4748d422",
      "revId": "957a5ca128ab2ae0b2fed98773403d665b0bd87e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f53d81a_eec8c285",
        "filename": "bl31/aarch64/ea_delegate.S",
        "patchSetId": 28
      },
      "lineNbr": 155,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2023-07-10T17:31:48Z",
      "side": 1,
      "message": "Clearing PSTATE.A bit here is to be able to take EAs. Considering there is already a pending error so as soon as this bit is cleared (ISB ensures that the instruction will be in program order, no? ) it will take the exception. IOW this piece of code is not about syncing errors.",
      "parentUuid": "4306261a_2352ac2d",
      "revId": "957a5ca128ab2ae0b2fed98773403d665b0bd87e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "794419ef_59fd3eef",
        "filename": "bl31/aarch64/ea_delegate.S",
        "patchSetId": 28
      },
      "lineNbr": 318,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-07-10T08:39:02Z",
      "side": 1,
      "message": "There is another stash and unstash of ESR_EL3 happening in this function. It would be worth analyzing whether this is enough to :\n\n1. Preserve the original ESR_EL3 once the nested EA handling is done.\n2. detect double fault cases.",
      "revId": "957a5ca128ab2ae0b2fed98773403d665b0bd87e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a1cf76d_33c8f639",
        "filename": "bl31/aarch64/runtime_exceptions.S",
        "patchSetId": 28
      },
      "lineNbr": 269,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2023-07-07T20:28:22Z",
      "side": 1,
      "message": "I think it is beneficial to reset the nested flag here rather than in the line 157 of handle_pended_async_ea",
      "revId": "957a5ca128ab2ae0b2fed98773403d665b0bd87e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc307245_510e05f4",
        "filename": "bl31/aarch64/runtime_exceptions.S",
        "patchSetId": 28
      },
      "lineNbr": 269,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-07-08T07:50:51Z",
      "side": 1,
      "message": "Agree, the flag can be reset at line 172 here",
      "parentUuid": "0a1cf76d_33c8f639",
      "revId": "957a5ca128ab2ae0b2fed98773403d665b0bd87e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8fc90019_f3c77666",
        "filename": "bl31/aarch64/runtime_exceptions.S",
        "patchSetId": 28
      },
      "lineNbr": 269,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2023-07-10T17:31:48Z",
      "side": 1,
      "message": "I can do it, but though of setting and clearing this flag at same place. Moving it to line #272 would not bring any benefit as the first instruction after exception return is to clear this flag.\n\nBringing it before delegate_async_ea is troublesome because, execution after this is considered as EL3 execution and if an SError comes it should be treated as an SError from EL3 and hence call plat_handle_el3_ea.\n\nI don\u0027t have strong preference for clearing this flag but if you guys think then i can move it here.",
      "parentUuid": "cc307245_510e05f4",
      "revId": "957a5ca128ab2ae0b2fed98773403d665b0bd87e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2c0fabf_408abaab",
        "filename": "bl31/aarch64/runtime_exceptions.S",
        "patchSetId": 28
      },
      "lineNbr": 269,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2023-07-10T17:55:06Z",
      "side": 1,
      "message": "In patchset 28, you used cbnz instruction but in patchset 29, it changed to cbz. Is it intentional? I think it influences where the flag is reset.",
      "parentUuid": "8fc90019_f3c77666",
      "revId": "957a5ca128ab2ae0b2fed98773403d665b0bd87e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc0cc9b0_cabaa63f",
        "filename": "bl31/aarch64/runtime_exceptions.S",
        "patchSetId": 28
      },
      "lineNbr": 271,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-07-08T07:50:51Z",
      "side": 1,
      "message": "Need to figure out the double fault handling mechanism in ea_proceed. Looks like that logic is broken.",
      "revId": "957a5ca128ab2ae0b2fed98773403d665b0bd87e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e67b035c_f1912051",
        "filename": "bl31/aarch64/runtime_exceptions.S",
        "patchSetId": 28
      },
      "lineNbr": 271,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-07-10T08:29:55Z",
      "side": 1,
      "message": "On looking again , this seems to be in place.",
      "parentUuid": "cc0cc9b0_cabaa63f",
      "revId": "957a5ca128ab2ae0b2fed98773403d665b0bd87e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d784e19d_feaf6867",
        "filename": "bl31/aarch64/runtime_exceptions.S",
        "patchSetId": 28
      },
      "lineNbr": 316,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-07-10T08:29:55Z",
      "side": 1,
      "message": "So SError will not arrive to EL3 from lower EL for KFH. \n\nIn case of FFH, branching off to to nested EA handling does not seem necessary. also if all the errors are handled in the nested loop, then the `handle_lower_el_async_ea` may not have any error outstanding to handle.\n\nSuggest to do el3_panic for KFH and in case of FFH, just sync and handle_lower_el_async_ea from here.",
      "revId": "957a5ca128ab2ae0b2fed98773403d665b0bd87e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a064ea4_9405348c",
        "filename": "bl31/aarch64/runtime_exceptions.S",
        "patchSetId": 28
      },
      "lineNbr": 316,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2023-07-10T08:41:14Z",
      "side": 1,
      "message": "In patch revision #13, i had similar inline comments. I can add the code but it will make vector entry complicated (which we agreed to keep simple)\n\n\"Serror from lower EL is only expected if scr_el3.EA is set. It is fatal and unexpected, if it reaches here for lower EL which has not configured SErrors to be routed to EL3. We don\u0027t need special handling here but it will eventually panic and die.\"",
      "parentUuid": "d784e19d_feaf6867",
      "revId": "957a5ca128ab2ae0b2fed98773403d665b0bd87e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8255a309_a79089d7",
        "filename": "bl31/aarch64/runtime_exceptions.S",
        "patchSetId": 28
      },
      "lineNbr": 316,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-07-10T15:29:38Z",
      "side": 1,
      "message": "Yes, the logic then was to reflect ack to lower EL for both FFH and KFH. \n\nNow since this is separated, reflection logic for KFH is wrong and should panic at EL3.\n\nfor FFH, as mentioned, the nested handling may handle the error and on return to the main path , there may not be any error to handle which may be unexpected for platform handler.",
      "parentUuid": "7a064ea4_9405348c",
      "revId": "957a5ca128ab2ae0b2fed98773403d665b0bd87e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e92bceb8_537f29f9",
        "filename": "bl31/aarch64/runtime_exceptions.S",
        "patchSetId": 28
      },
      "lineNbr": 316,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2023-07-10T17:31:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8255a309_a79089d7",
      "revId": "957a5ca128ab2ae0b2fed98773403d665b0bd87e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b3cd5e9_f4605492",
        "filename": "include/lib/el3_runtime/aarch64/context.h",
        "patchSetId": 28
      },
      "lineNbr": 66,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-07-08T07:50:51Z",
      "side": 1,
      "message": "Only needed for FFH ?",
      "revId": "957a5ca128ab2ae0b2fed98773403d665b0bd87e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ab20cf9_a1aa4252",
        "filename": "include/lib/el3_runtime/aarch64/context.h",
        "patchSetId": 28
      },
      "lineNbr": 66,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2023-07-10T17:31:48Z",
      "side": 1,
      "message": "I am using this for counter in KFH",
      "parentUuid": "9b3cd5e9_f4605492",
      "revId": "957a5ca128ab2ae0b2fed98773403d665b0bd87e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}