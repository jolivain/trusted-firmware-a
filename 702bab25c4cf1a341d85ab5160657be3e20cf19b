{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "16dac738_a973211d",
        "filename": "services/std_svc/spmd/spmd_logical_sp.c",
        "patchSetId": 11
      },
      "lineNbr": 254,
      "author": {
        "id": 1000341
      },
      "writtenOn": "2023-07-12T13:19:38Z",
      "side": 1,
      "message": "Should it be advertised that the LSP can initiate Direct message requests?\n\nThis relates to table 6.2 of FF-A v1.2 specification, bits 3 and 10.",
      "range": {
        "startLine": 254,
        "startChar": 30,
        "endLine": 254,
        "endChar": 40
      },
      "revId": "702bab25c4cf1a341d85ab5160657be3e20cf19b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4f4568f2_40b23638",
        "filename": "services/std_svc/spmd/spmd_logical_sp.c",
        "patchSetId": 11
      },
      "lineNbr": 254,
      "author": {
        "id": 1000341
      },
      "writtenOn": "2023-07-12T13:20:48Z",
      "side": 1,
      "message": "Saw this is addressed in a subsequent change.",
      "parentUuid": "16dac738_a973211d",
      "range": {
        "startLine": 254,
        "startChar": 30,
        "endLine": 254,
        "endChar": 40
      },
      "revId": "702bab25c4cf1a341d85ab5160657be3e20cf19b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "498a7d10_795b31cd",
        "filename": "services/std_svc/spmd/spmd_logical_sp.c",
        "patchSetId": 11
      },
      "lineNbr": 423,
      "author": {
        "id": 1000341
      },
      "writtenOn": "2023-07-12T13:19:38Z",
      "side": 1,
      "message": "add the u/U suffix. And to remaining literals below.",
      "range": {
        "startLine": 423,
        "startChar": 22,
        "endLine": 423,
        "endChar": 32
      },
      "revId": "702bab25c4cf1a341d85ab5160657be3e20cf19b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "36e19ac9_82efc699",
        "filename": "services/std_svc/spmd/spmd_logical_sp.c",
        "patchSetId": 11
      },
      "lineNbr": 423,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2023-07-12T19:15:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "498a7d10_795b31cd",
      "range": {
        "startLine": 423,
        "startChar": 22,
        "endLine": 423,
        "endChar": 32
      },
      "revId": "702bab25c4cf1a341d85ab5160657be3e20cf19b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1dd5ab48_10dccd85",
        "filename": "services/std_svc/spmd/spmd_logical_sp.c",
        "patchSetId": 11
      },
      "lineNbr": 433,
      "author": {
        "id": 1000341
      },
      "writtenOn": "2023-07-12T13:19:38Z",
      "side": 1,
      "message": "explicit cast and u/U suffix in the literal.\nSame line below.",
      "range": {
        "startLine": 433,
        "startChar": 14,
        "endLine": 433,
        "endChar": 15
      },
      "revId": "702bab25c4cf1a341d85ab5160657be3e20cf19b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0e34cc92_2a57d39e",
        "filename": "services/std_svc/spmd/spmd_logical_sp.c",
        "patchSetId": 11
      },
      "lineNbr": 433,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2023-07-12T19:15:50Z",
      "side": 1,
      "message": "can you elaborate the need for explicit type cast? and is it there in the coding guideline? I think this is unnecessary and complicates readability. The implicit type conversions and warnings on the compilers will catch and issues with any type cast.\nI\u0027ve done this, but i think this is not the right approach to our coding style.",
      "parentUuid": "1dd5ab48_10dccd85",
      "range": {
        "startLine": 433,
        "startChar": 14,
        "endLine": 433,
        "endChar": 15
      },
      "revId": "702bab25c4cf1a341d85ab5160657be3e20cf19b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3957ed0b_bfcbbb62",
        "filename": "services/std_svc/spmd/spmd_logical_sp.c",
        "patchSetId": 11
      },
      "lineNbr": 433,
      "author": {
        "id": 1000341
      },
      "writtenOn": "2023-07-13T13:24:49Z",
      "side": 1,
      "message": "I think it reads better (I think this might be a personal preference). It leaves clear to anyone reading the expression that the left operand is not of the same type as the target value. I guess between unsigned types this is harmless, but still. Strongly typed languages never permit casts to be done implicitly.\n\nFor this case, the MISRA rule 10.3 also applies. It says \"The value of an expression shall not be assigned to an object with a narrower essential type or of a different essential type category\". TF-A must comply with MISRA.\nIn the examples of non-compliant code, it shows the assignment:\nu16a \u003d u32a;",
      "parentUuid": "0e34cc92_2a57d39e",
      "range": {
        "startLine": 433,
        "startChar": 14,
        "endLine": 433,
        "endChar": 15
      },
      "revId": "702bab25c4cf1a341d85ab5160657be3e20cf19b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76dbe97b_91698757",
        "filename": "services/std_svc/spmd/spmd_logical_sp.c",
        "patchSetId": 11
      },
      "lineNbr": 468,
      "author": {
        "id": 1000341
      },
      "writtenOn": "2023-07-12T13:19:38Z",
      "side": 1,
      "message": "u/U",
      "range": {
        "startLine": 468,
        "startChar": 54,
        "endLine": 468,
        "endChar": 60
      },
      "revId": "702bab25c4cf1a341d85ab5160657be3e20cf19b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "10a5308c_062e23bb",
        "filename": "services/std_svc/spmd/spmd_logical_sp.c",
        "patchSetId": 11
      },
      "lineNbr": 468,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2023-07-12T19:15:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "76dbe97b_91698757",
      "range": {
        "startLine": 468,
        "startChar": 54,
        "endLine": 468,
        "endChar": 60
      },
      "revId": "702bab25c4cf1a341d85ab5160657be3e20cf19b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ceabbd9a_092a56d0",
        "filename": "services/std_svc/spmd/spmd_logical_sp.c",
        "patchSetId": 11
      },
      "lineNbr": 469,
      "author": {
        "id": 1000341
      },
      "writtenOn": "2023-07-12T13:19:38Z",
      "side": 1,
      "message": "explicit upcast",
      "range": {
        "startLine": 469,
        "startChar": 13,
        "endLine": 469,
        "endChar": 21
      },
      "revId": "702bab25c4cf1a341d85ab5160657be3e20cf19b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8085aea3_de501627",
        "filename": "services/std_svc/spmd/spmd_logical_sp.c",
        "patchSetId": 11
      },
      "lineNbr": 469,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2023-07-12T19:15:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ceabbd9a_092a56d0",
      "range": {
        "startLine": 469,
        "startChar": 13,
        "endLine": 469,
        "endChar": 21
      },
      "revId": "702bab25c4cf1a341d85ab5160657be3e20cf19b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a40d115_08e7a8c2",
        "filename": "services/std_svc/spmd/spmd_logical_sp.c",
        "patchSetId": 11
      },
      "lineNbr": 470,
      "author": {
        "id": 1000341
      },
      "writtenOn": "2023-07-12T13:19:38Z",
      "side": 1,
      "message": "cast",
      "range": {
        "startLine": 470,
        "startChar": 13,
        "endLine": 470,
        "endChar": 20
      },
      "revId": "702bab25c4cf1a341d85ab5160657be3e20cf19b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "853a77db_c5ad7bab",
        "filename": "services/std_svc/spmd/spmd_logical_sp.c",
        "patchSetId": 11
      },
      "lineNbr": 470,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2023-07-12T19:15:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0a40d115_08e7a8c2",
      "range": {
        "startLine": 470,
        "startChar": 13,
        "endLine": 470,
        "endChar": 20
      },
      "revId": "702bab25c4cf1a341d85ab5160657be3e20cf19b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}