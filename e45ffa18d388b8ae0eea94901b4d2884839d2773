{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1cc3fc70_e1cb0792",
        "filename": "include/lib/psci/psci.h",
        "patchSetId": 11
      },
      "lineNbr": 207,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2022-07-11T12:53:09Z",
      "side": 0,
      "message": "Why was this moved to psci_lib.h?",
      "range": {
        "startLine": 203,
        "startChar": 0,
        "endLine": 207,
        "endChar": 19
      },
      "revId": "e45ffa18d388b8ae0eea94901b4d2884839d2773",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f13daa99_08c58255",
        "filename": "include/lib/psci/psci.h",
        "patchSetId": 11
      },
      "lineNbr": 207,
      "author": {
        "id": 1000621
      },
      "writtenOn": "2022-07-11T15:44:13Z",
      "side": 0,
      "message": "One past version of psci_is_last_on_core_safe() used to accept an aff_info_state_t argument and allow querying for a core in that given state.  Hence the aff_info_state_t type definiton needed to be visible to TF-A clients of the PSCI library.\n\nWith that generality it turned out to be unmanageable to reason about false positives and such, so the function was specialised (i.e. made to imply the aff_info_state_t argument), but the aff_info_state_t type definition was never moved back.\n\nThis change is not needed.",
      "parentUuid": "1cc3fc70_e1cb0792",
      "range": {
        "startLine": 203,
        "startChar": 0,
        "endLine": 207,
        "endChar": 19
      },
      "revId": "e45ffa18d388b8ae0eea94901b4d2884839d2773",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}