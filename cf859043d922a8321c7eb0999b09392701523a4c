{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c9c29bb8_f22a19e8",
        "filename": "tools/fiptool/Makefile",
        "patchSetId": 33
      },
      "lineNbr": 51,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2021-03-18T10:02:25Z",
      "side": 1,
      "message": "If I am not mistaken, GNU make is free to execute dependencies in any order it wants, the order in which you list them here in the makefile does not make any difference. Therefore, it could choose to first build the ${OBJECTS} then clean them, which is obviously not what we want. I expect that this issue should be quite easy to demonstrate if you try a parallel build (make -j).\n\nI believe you\u0027ll have to restructure these rules and their dependencies to fix this. \u0027clean\u0027 would need to be a dependency of ${OBJECTS} and Makefile if you want it to run first.",
      "range": {
        "startLine": 51,
        "startChar": 12,
        "endLine": 51,
        "endChar": 37
      },
      "revId": "cf859043d922a8321c7eb0999b09392701523a4c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d5bfde2_88e85faf",
        "filename": "tools/fiptool/Makefile",
        "patchSetId": 33
      },
      "lineNbr": 51,
      "author": {
        "id": 1000209
      },
      "writtenOn": "2021-03-19T04:45:01Z",
      "side": 1,
      "message": "${PROJECT}: clean ${OBJECTS} Makefile, needs to be changed to:\n\n${PROJECT}: | clean ${OBJECTS} Makefile\n\nSince this patchset is towards getting merged, I would add this change as a another patch.",
      "parentUuid": "c9c29bb8_f22a19e8",
      "range": {
        "startLine": 51,
        "startChar": 12,
        "endLine": 51,
        "endChar": 37
      },
      "revId": "cf859043d922a8321c7eb0999b09392701523a4c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "680645b2_ddeb3c98",
        "filename": "tools/fiptool/Makefile",
        "patchSetId": 33
      },
      "lineNbr": 51,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2021-03-19T13:16:36Z",
      "side": 1,
      "message": "I don\u0027t think this change will make the problem go away. Order-only prerequisites (despite their name!) do not enforce any order on prerequisites. See for yourself:\n\n all: | foo bar\n\n foo:\n        @echo foo\n bar:\n        @echo bar\n\nIf I run this through \"make -j\", I sometimes see\n\n foo\n bar\n\nand other times\n\n bar\n foo\n\nAFAIK, the only way to solve this issue is to restructure your rules to make the chain of dependencies explicit.",
      "parentUuid": "2d5bfde2_88e85faf",
      "range": {
        "startLine": 51,
        "startChar": 12,
        "endLine": 51,
        "endChar": 37
      },
      "revId": "cf859043d922a8321c7eb0999b09392701523a4c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc6c8a0e_edca126c",
        "filename": "tools/fiptool/Makefile",
        "patchSetId": 33
      },
      "lineNbr": 51,
      "author": {
        "id": 1000209
      },
      "writtenOn": "2021-03-20T05:28:47Z",
      "side": 1,
      "message": "- ${PROJECT}: clean ${OBJECTS} Makefile\n+ ${PROJECT}: ${OBJECTS} Makefile\n+       @$(call SHELL_DELETE_ALL, ${PROJECT})\n\n\nThis change will make sure the order.\nPlease share your view",
      "parentUuid": "680645b2_ddeb3c98",
      "range": {
        "startLine": 51,
        "startChar": 12,
        "endLine": 51,
        "endChar": 37
      },
      "revId": "cf859043d922a8321c7eb0999b09392701523a4c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3a768cc_abcbbceb",
        "filename": "tools/fiptool/Makefile",
        "patchSetId": 33
      },
      "lineNbr": 51,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2021-03-22T08:41:42Z",
      "side": 1,
      "message": "I have not tested your proposed solution but as I understand, this will first build the object files (if they do not already exist) then delete the fiptool binary. Dependencies are satisfied *before* the body of the rule is executed. I don\u0027t think that\u0027s what you want, is it?",
      "parentUuid": "dc6c8a0e_edca126c",
      "range": {
        "startLine": 51,
        "startChar": 12,
        "endLine": 51,
        "endChar": 37
      },
      "revId": "cf859043d922a8321c7eb0999b09392701523a4c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34044047_9bd95e00",
        "filename": "tools/fiptool/Makefile",
        "patchSetId": 33
      },
      "lineNbr": 51,
      "author": {
        "id": 1000209
      },
      "writtenOn": "2021-03-22T12:52:21Z",
      "side": 1,
      "message": "After reading the article from the web-page: \"https://www.gnu.org/software/make/manual/html_node/Prerequisite-Types.html\"\nBest solution is to use Order-only perquisite.\nThough I could not able to reproduce the issue you mentioned above.\n\nAs per your suggestion, I have made the following change:\n\n%.o: %.c clean Makefile\n        @echo \"  HOSTCC  $\u003c\"\n        ${Q}${HOSTCC} -c ${CPPFLAGS} ${HOSTCCFLAGS} ${INCLUDE_PATHS} $\u003c -o $@\n\nclean:\n        @echo \"Cleaning................\"\n        $(call SHELL_DELETE_ALL, ${PROJECT} ${OBJECTS})\n\n\nCleaning...... is printed once.\n\nIf you fine with this solution, I will make this change.\nPlease revert.",
      "parentUuid": "b3a768cc_abcbbceb",
      "range": {
        "startLine": 51,
        "startChar": 12,
        "endLine": 51,
        "endChar": 37
      },
      "revId": "cf859043d922a8321c7eb0999b09392701523a4c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3c5e1a9_1d75ebff",
        "filename": "tools/fiptool/Makefile",
        "patchSetId": 33
      },
      "lineNbr": 51,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2021-03-23T08:16:24Z",
      "side": 1,
      "message": "AFAIU, your latest suggestion should work as expected. But it\u0027s not very intuitive... At least for me.\n\nAlternatively, how about changing the \u0027all\u0027 rule in this way instead:\n\n all:\n   ${MAKE} clean\n   ${MAKE} ${PROJECT}\n\nThe downside is that these will spawn 2 sub-processes so this is likely to be a bit slower but I would argue that it does not matter much in this context.\n\nWith the changes above, we do not need to put \u0027clean\u0027 as a dependency of the \u0027%o\u0027 target, the rule remains:\n\n %.o: %.c Makefile\n        @echo \"  HOSTCC  $\u003c\"\n        ${Q}${HOSTCC} -c ${CPPFLAGS} ${HOSTCCFLAGS} ${INCLUDE_PATHS} $\u003c -o $@",
      "parentUuid": "34044047_9bd95e00",
      "range": {
        "startLine": 51,
        "startChar": 12,
        "endLine": 51,
        "endChar": 37
      },
      "revId": "cf859043d922a8321c7eb0999b09392701523a4c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "670cc349_1bcaf782",
        "filename": "tools/fiptool/Makefile",
        "patchSetId": 33
      },
      "lineNbr": 51,
      "author": {
        "id": 1000209
      },
      "writtenOn": "2021-03-23T14:57:31Z",
      "side": 1,
      "message": "Changed as per your suggestion.",
      "parentUuid": "e3c5e1a9_1d75ebff",
      "range": {
        "startLine": 51,
        "startChar": 12,
        "endLine": 51,
        "endChar": 37
      },
      "revId": "cf859043d922a8321c7eb0999b09392701523a4c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fecfb902_532f1082",
        "filename": "tools/fiptool/Makefile",
        "patchSetId": 33
      },
      "lineNbr": 58,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2021-03-18T10:02:25Z",
      "side": 1,
      "message": "What is the rationale for this change?\n\nThe previous version made sure that object files would be rebuilt if a header file was changed, which sounds to me like something we want to continue doing...",
      "range": {
        "startLine": 58,
        "startChar": 0,
        "endLine": 58,
        "endChar": 17
      },
      "revId": "cf859043d922a8321c7eb0999b09392701523a4c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc5ce0c0_98a5bc13",
        "filename": "tools/fiptool/Makefile",
        "patchSetId": 33
      },
      "lineNbr": 58,
      "author": {
        "id": 1000209
      },
      "writtenOn": "2021-03-19T04:45:01Z",
      "side": 1,
      "message": "The platform specific file \"tools/nxp/plat_fiptool/plat_def_uuid_config.c\", added do not have the corresponding header.\nDue to which there are error in make.\n\nThis was the reason I removed it.\nThis can be fixed, if I add the \"tools/nxp/plat_fiptool/plat_def_uuid_config.h\".\n\nBut the content of it would be:\n\n/*\n * Copyright 2021 NXP\n *\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n#ifndef PLAT_DEF_UUID \n#define PLAT_DEF_UUID\n\n#endif\n\nIf that is fine, request you to promptly confirm it.\n\nSince this patchset is towards getting merged, I would add this change as a another patch if you confirm so.",
      "parentUuid": "fecfb902_532f1082",
      "range": {
        "startLine": 58,
        "startChar": 0,
        "endLine": 58,
        "endChar": 17
      },
      "revId": "cf859043d922a8321c7eb0999b09392701523a4c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "060053b1_d37563d6",
        "filename": "tools/fiptool/Makefile",
        "patchSetId": 33
      },
      "lineNbr": 58,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2021-03-19T13:16:36Z",
      "side": 1,
      "message": "Ah yes, I understand, thanks for the explanation.\n\nNo, please do not add an empty \"tools/nxp/plat_fiptool/plat_def_uuid_config.h\" file just to satisfy this dependency, that sounds wrong to me. The original rule (\"%.o: %.c %.h Makefile\") was not well-constructed anyway, I now realize that. I guess, since this makefile was just for building a couple of files for a simple tool, we went for the quickest and easiest way and that was good enough at the time.\n\nThe new version you propose is still not right to my understanding but it\u0027s not making things worse in my view. The proper way to handle dependencies would be through the compiler\u0027s -MD/-MT types of options, just like we do in the main Makefile for the firmware. But this is beyond the scope of this patch. I am fine with the changes you\u0027re proposing on line 46.",
      "parentUuid": "fc5ce0c0_98a5bc13",
      "range": {
        "startLine": 58,
        "startChar": 0,
        "endLine": 58,
        "endChar": 17
      },
      "revId": "cf859043d922a8321c7eb0999b09392701523a4c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}