{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "97f47eba_24a26f43",
        "filename": "lib/cpus/aarch64/cortex_gelas.S",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2023-08-18T22:46:26Z",
      "side": 1,
      "message": "Do we need to take ENABLE_SME_FOR_SWD into account as well?",
      "revId": "19e1003e88a254ae2f0e9219b9d1416ec7c807b4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b6a1b565_03f3cdce",
        "filename": "lib/cpus/aarch64/cortex_gelas.S",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1000099
      },
      "writtenOn": "2023-08-18T23:08:13Z",
      "side": 1,
      "message": "As per Juan, \"it turns out that ENABLE_SME_FOR_NS has to be enabled in order to use ENABLE_SME_FOR_SWD, so we are safe with the former\"",
      "parentUuid": "97f47eba_24a26f43",
      "revId": "19e1003e88a254ae2f0e9219b9d1416ec7c807b4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7056fa33_91be3052",
        "filename": "lib/cpus/aarch64/cortex_gelas.S",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1000750
      },
      "writtenOn": "2023-08-19T02:09:54Z",
      "side": 1,
      "message": "From the docs: \nENABLE_SME_FOR_SWD: Boolean option to enable the Scalable Matrix Extension for secure world. Used along with SVE and FPU/SIMD. ENABLE_SME_FOR_NS and ENABLE_SVE_FOR_SWD must also be set to use this. This is experimental. Default is 0.\n\nI also asked Jayanth about it and he pointed that out.",
      "parentUuid": "b6a1b565_03f3cdce",
      "revId": "19e1003e88a254ae2f0e9219b9d1416ec7c807b4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1e03bc81_0bbd82fa",
        "filename": "lib/cpus/aarch64/cortex_gelas.S",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2023-08-21T13:50:56Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7056fa33_91be3052",
      "revId": "19e1003e88a254ae2f0e9219b9d1416ec7c807b4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b49faa37_33c1ca7a",
        "filename": "lib/cpus/aarch64/cortex_gelas.S",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1000923
      },
      "writtenOn": "2023-08-21T16:41:35Z",
      "side": 1,
      "message": "if enabled and supported?",
      "range": {
        "startLine": 39,
        "startChar": 26,
        "endLine": 39,
        "endChar": 35
      },
      "revId": "19e1003e88a254ae2f0e9219b9d1416ec7c807b4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "361090ad_0d9832da",
        "filename": "lib/cpus/aarch64/cortex_gelas.S",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1000750
      },
      "writtenOn": "2023-08-21T18:24:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b49faa37_33c1ca7a",
      "range": {
        "startLine": 39,
        "startChar": 26,
        "endLine": 39,
        "endChar": 35
      },
      "revId": "19e1003e88a254ae2f0e9219b9d1416ec7c807b4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c45f8281_c252cf8d",
        "filename": "lib/cpus/aarch64/cortex_gelas.S",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2023-08-21T22:29:29Z",
      "side": 1,
      "message": "Curious. What about the scenario in which the CPU supports SME but the software(TF-A) didn\u0027t enable it?",
      "parentUuid": "361090ad_0d9832da",
      "range": {
        "startLine": 39,
        "startChar": 26,
        "endLine": 39,
        "endChar": 35
      },
      "revId": "19e1003e88a254ae2f0e9219b9d1416ec7c807b4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7bbe827_2ae103ff",
        "filename": "lib/cpus/aarch64/cortex_gelas.S",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1000923
      },
      "writtenOn": "2023-08-21T16:41:35Z",
      "side": 1,
      "message": "nit pick: tab here?",
      "range": {
        "startLine": 46,
        "startChar": 5,
        "endLine": 46,
        "endChar": 6
      },
      "revId": "19e1003e88a254ae2f0e9219b9d1416ec7c807b4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fde6d6e7_886c8d2d",
        "filename": "lib/cpus/aarch64/cortex_gelas.S",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1000750
      },
      "writtenOn": "2023-08-21T18:24:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b7bbe827_2ae103ff",
      "range": {
        "startLine": 46,
        "startChar": 5,
        "endLine": 46,
        "endChar": 6
      },
      "revId": "19e1003e88a254ae2f0e9219b9d1416ec7c807b4",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}