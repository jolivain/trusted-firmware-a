{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2d27c340_8de03fe9",
        "filename": "bl2/bl2.mk",
        "patchSetId": 39
      },
      "lineNbr": 60,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-05-25T13:19:22Z",
      "side": 1,
      "message": "I\u0027m struggling to find where BL2 needs errata reporting. Except in BL1 and PSCI I don\u0027t see any calls to print_errata_status. Does BL2 include PSCI?",
      "revId": "8a50a0d9e7b7c387c8c4eebee473cd04f38f5350",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "54279749_0bee1899",
        "filename": "bl2/bl2.mk",
        "patchSetId": 39
      },
      "lineNbr": 60,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2023-06-02T16:35:44Z",
      "side": 1,
      "message": "Ah, that was removed in more recent versions of integration - one of the merge conflicts.",
      "parentUuid": "2d27c340_8de03fe9",
      "revId": "8a50a0d9e7b7c387c8c4eebee473cd04f38f5350",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "844d674c_51c373d7",
        "filename": "bl32/sp_min/sp_min.mk",
        "patchSetId": 39
      },
      "lineNbr": 90,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-05-25T13:19:22Z",
      "side": 1,
      "message": "Could this option not be attached to the PSCI makefile instead? Same for BL31 I guess",
      "revId": "8a50a0d9e7b7c387c8c4eebee473cd04f38f5350",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "baa1cddf_62ac87e6",
        "filename": "bl32/sp_min/sp_min.mk",
        "patchSetId": 39
      },
      "lineNbr": 90,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2023-06-02T16:35:44Z",
      "side": 1,
      "message": "Is errata reporting in SP_MIN strictly tied to PSCI? It\u0027s not clear from the makefiles today. If it is then I\u0027m happy to move and document it.",
      "parentUuid": "844d674c_51c373d7",
      "revId": "8a50a0d9e7b7c387c8c4eebee473cd04f38f5350",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "054273f8_71433e90",
        "filename": "bl32/sp_min/sp_min.mk",
        "patchSetId": 39
      },
      "lineNbr": 90,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-06-05T09:46:11Z",
      "side": 1,
      "message": "I can\u0027t speak about the makefiles, but the function which does the reporting, print_errata_status(), is only called in BL1 and PSCI. Which leads me to believe BL31 and SP_MIN get their dependency from there.",
      "parentUuid": "baa1cddf_62ac87e6",
      "revId": "8a50a0d9e7b7c387c8c4eebee473cd04f38f5350",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3cb7887f_63d3f089",
        "filename": "bl32/sp_min/sp_min.mk",
        "patchSetId": 39
      },
      "lineNbr": 90,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2023-06-12T15:13:31Z",
      "side": 1,
      "message": "Alright, let me see what I can do there, then.",
      "parentUuid": "054273f8_71433e90",
      "revId": "8a50a0d9e7b7c387c8c4eebee473cd04f38f5350",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66536ebb_aa1b4e47",
        "filename": "lib/cpus/cpus.mk",
        "patchSetId": 39
      },
      "lineNbr": 26,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-05-25T13:19:22Z",
      "side": 1,
      "message": "I feel like this is better places in defaults.mk, especially since it\u0027s a public config.\nSame for AMU/reporting options.\nAlso, shouldn\u0027t they have a build-options.rst mention?",
      "revId": "8a50a0d9e7b7c387c8c4eebee473cd04f38f5350",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "470ba28f_d7d7fbcc",
        "filename": "lib/cpus/cpus.mk",
        "patchSetId": 39
      },
      "lineNbr": 26,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2023-06-02T16:35:44Z",
      "side": 1,
      "message": "This cannot be part of defaults.mk - the value is reset at the end of the file so that it can be re-configured for another image.",
      "parentUuid": "66536ebb_aa1b4e47",
      "revId": "8a50a0d9e7b7c387c8c4eebee473cd04f38f5350",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "14f8615c_b77027bf",
        "filename": "lib/cpus/cpus.mk",
        "patchSetId": 39
      },
      "lineNbr": 26,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-06-26T14:45:23Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "470ba28f_d7d7fbcc",
      "revId": "8a50a0d9e7b7c387c8c4eebee473cd04f38f5350",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8330525f_3b72ef31",
        "filename": "lib/cpus/cpus.mk",
        "patchSetId": 39
      },
      "lineNbr": 53,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-05-25T13:19:22Z",
      "side": 1,
      "message": "why not use the WORKAROUND_CVE_2017_5715 that is already there? This feels like config duplication",
      "revId": "8a50a0d9e7b7c387c8c4eebee473cd04f38f5350",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5caaa101_fcb16bc6",
        "filename": "lib/cpus/cpus.mk",
        "patchSetId": 39
      },
      "lineNbr": 53,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2023-06-02T16:35:44Z",
      "side": 1,
      "message": "Not all of the images need the workaround - it\u0027s specific to BL31, so only BL31 enables CPUS_ENABLE_CVE_2017_5715_WORKAROUND even though WORKAROUND_CVE_2017_5715 is defined globally. That\u0027s one of the dangers of global configuration options.",
      "parentUuid": "8330525f_3b72ef31",
      "revId": "8a50a0d9e7b7c387c8c4eebee473cd04f38f5350",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "770b6970_3e2f54df",
        "filename": "lib/cpus/cpus.mk",
        "patchSetId": 39
      },
      "lineNbr": 63,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-05-25T13:19:22Z",
      "side": 1,
      "message": "why not put this in the dependency check section in the main Makefile?",
      "revId": "8a50a0d9e7b7c387c8c4eebee473cd04f38f5350",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b512e815_cb685caa",
        "filename": "lib/cpus/cpus.mk",
        "patchSetId": 39
      },
      "lineNbr": 63,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2023-06-02T16:35:44Z",
      "side": 1,
      "message": "Similarly to the CVE-2017-5715 workaround, CPUS_ENABLE_CPU_AMU changes based on the input configuration to this library, and that input configuration changes based on what depends on it.",
      "parentUuid": "770b6970_3e2f54df",
      "revId": "8a50a0d9e7b7c387c8c4eebee473cd04f38f5350",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d9b7398b_2cf0d39c",
        "filename": "lib/cpus/cpus.mk",
        "patchSetId": 39
      },
      "lineNbr": 91,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-05-25T13:19:22Z",
      "side": 1,
      "message": "From here onward, these depend on CTX_INCLUDE_AARCH32_REGS\u003d0 too. Is that a requirement or an optimisation because I don\u0027t see it checked?",
      "revId": "8a50a0d9e7b7c387c8c4eebee473cd04f38f5350",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b52d4173_7c93a653",
        "filename": "lib/cpus/cpus.mk",
        "patchSetId": 39
      },
      "lineNbr": 91,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2023-06-02T16:35:44Z",
      "side": 1,
      "message": "Sorry, I\u0027m not quite sure I understand. There are checks on line 132 for the presence of the AArch32 execution state.",
      "parentUuid": "d9b7398b_2cf0d39c",
      "revId": "8a50a0d9e7b7c387c8c4eebee473cd04f38f5350",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0bd46711_3795d881",
        "filename": "lib/cpus/cpus.mk",
        "patchSetId": 39
      },
      "lineNbr": 91,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-06-05T09:46:11Z",
      "side": 1,
      "message": "ah, the condition is flipped, I see",
      "parentUuid": "b52d4173_7c93a653",
      "revId": "8a50a0d9e7b7c387c8c4eebee473cd04f38f5350",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be08f0bb_67e75d31",
        "filename": "lib/cpus/cpus.mk",
        "patchSetId": 39
      },
      "lineNbr": 116,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-05-25T13:19:22Z",
      "side": 1,
      "message": "undefine after?",
      "revId": "8a50a0d9e7b7c387c8c4eebee473cd04f38f5350",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ee0dacc_6c712b77",
        "filename": "lib/cpus/cpus.mk",
        "patchSetId": 39
      },
      "lineNbr": 116,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2023-06-02T16:35:44Z",
      "side": 1,
      "message": "Undefinition is unnecessary so long as we discard the previous value every time this library is loaded (e.g. by assigning to it with `:\u003d` like here)",
      "parentUuid": "be08f0bb_67e75d31",
      "revId": "8a50a0d9e7b7c387c8c4eebee473cd04f38f5350",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "47c2e0f3_6762dbea",
        "filename": "lib/cpus/cpus.mk",
        "patchSetId": 39
      },
      "lineNbr": 116,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-06-05T09:46:11Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1ee0dacc_6c712b77",
      "revId": "8a50a0d9e7b7c387c8c4eebee473cd04f38f5350",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3fb2ce45_ba652f7e",
        "filename": "lib/cpus/cpus.mk",
        "patchSetId": 39
      },
      "lineNbr": 121,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-05-25T13:19:22Z",
      "side": 1,
      "message": "nit: you know it\u0027s zero from the check, why expand it?",
      "range": {
        "startLine": 121,
        "startChar": 105,
        "endLine": 121,
        "endChar": 129
      },
      "revId": "8a50a0d9e7b7c387c8c4eebee473cd04f38f5350",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "549cbec1_67a44740",
        "filename": "lib/cpus/cpus.mk",
        "patchSetId": 39
      },
      "lineNbr": 121,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2023-06-02T16:35:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3fb2ce45_ba652f7e",
      "range": {
        "startLine": 121,
        "startChar": 105,
        "endLine": 121,
        "endChar": 129
      },
      "revId": "8a50a0d9e7b7c387c8c4eebee473cd04f38f5350",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "37c207e6_4b2a0897",
        "filename": "lib/cpus/cpus.mk",
        "patchSetId": 39
      },
      "lineNbr": 121,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-06-05T09:46:11Z",
      "side": 1,
      "message": "btw there are a few more scattered around, could make the lines shorter",
      "parentUuid": "549cbec1_67a44740",
      "range": {
        "startLine": 121,
        "startChar": 105,
        "endLine": 121,
        "endChar": 129
      },
      "revId": "8a50a0d9e7b7c387c8c4eebee473cd04f38f5350",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "396efbc7_2fd9f40c",
        "filename": "lib/cpus/cpus.mk",
        "patchSetId": 39
      },
      "lineNbr": 121,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2023-06-12T15:13:31Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "37c207e6_4b2a0897",
      "range": {
        "startLine": 121,
        "startChar": 105,
        "endLine": 121,
        "endChar": 129
      },
      "revId": "8a50a0d9e7b7c387c8c4eebee473cd04f38f5350",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99bc1094_5118ac77",
        "filename": "lib/cpus/cpus.mk",
        "patchSetId": 39
      },
      "lineNbr": 169,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-05-25T13:19:22Z",
      "side": 1,
      "message": "again, why not base this on the ENABLE_FEAT_AMU option? It should be identically set as this one, no? And then intersecting with the enabled cpus it is known whether the files need including or not",
      "revId": "8a50a0d9e7b7c387c8c4eebee473cd04f38f5350",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a393862_892fe553",
        "filename": "lib/cpus/cpus.mk",
        "patchSetId": 39
      },
      "lineNbr": 169,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2023-06-02T16:35:44Z",
      "side": 1,
      "message": "Similar situation to the other build options above, the CPU AMU component is only necessary when:\n\n - IMAGE \u003d\u003d bl31\n - ENABLE_AMU !\u003d 0\n - any(CPUS_ENABLED) in CPUS_DEPENDS_CPU_AMU\n\nSo the library takes:\n\n - ENABLE_FEAT_AMU to determine whether the hardware supports an AMU (an IMPDEF one - not FEAT_AMU as the name suggests)\n - CPUS_ENABLE_CPU_AMU to determine whether the image wants to include the CPU AMU support files\n - CPUS_DEPENDS_CPU_AMU to determine which CPU AMU support files to include (if any)",
      "parentUuid": "99bc1094_5118ac77",
      "revId": "8a50a0d9e7b7c387c8c4eebee473cd04f38f5350",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4076aff1_05c4efc0",
        "filename": "lib/cpus/cpus.mk",
        "patchSetId": 39
      },
      "lineNbr": 169,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-06-05T09:46:11Z",
      "side": 1,
      "message": "I see what you mean now. I suppose since files don\u0027t take arguments, this is the way to do it.\n\nIn that case, why not hard code the dependencies in this file? I feel like this is overengineering as there are only 4 users of this library and there are unlikely to be more. It feels to me that this adds a level of indirection that is hard to read and I don\u0027t see the benefit.",
      "parentUuid": "1a393862_892fe553",
      "revId": "8a50a0d9e7b7c387c8c4eebee473cd04f38f5350",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4866a65_291e15ba",
        "filename": "lib/cpus/cpus.mk",
        "patchSetId": 39
      },
      "lineNbr": 169,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2023-06-12T15:13:31Z",
      "side": 1,
      "message": "The idea is to build an actual dependency tree, rather than having to connect dots at different levels to identify what might be enabled at the point that the library is included. If you can make the library itself hermetic, then anything above it can do whatever it likes, safe in the confidence that it isn\u0027t impacting another consumer of the library.\n\n(FYI there are seven, rather than four, consumers of this library: FVP-R\u0027s BL1, Juno\u0027s platform headers, and A8K\u0027s BLE image)",
      "parentUuid": "4076aff1_05c4efc0",
      "revId": "8a50a0d9e7b7c387c8c4eebee473cd04f38f5350",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94fd9edf_9e8d90d9",
        "filename": "plat/arm/board/fvp/platform.mk",
        "patchSetId": 39
      },
      "lineNbr": 215,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-05-25T13:19:22Z",
      "side": 1,
      "message": "Can these be specified on the commandline? I understand this is probably a separate patch that will need CI refactoring. Or are we very fixated on the idea that the FVP includes _all_ cpus? I feel like if this is now easy to configure, there\u0027s no need to be wasteful with (BL31 progbits) size.",
      "revId": "8a50a0d9e7b7c387c8c4eebee473cd04f38f5350",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53a5e9a4_c7e8b61d",
        "filename": "plat/arm/board/fvp/platform.mk",
        "patchSetId": 39
      },
      "lineNbr": 215,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2023-06-02T16:35:44Z",
      "side": 1,
      "message": "They can in theory, but I think that\u0027s probably for another patchset for us to decide how best to go about that, whether there are any cores that should be included by default, etc. For now the objective of this patch is just an internal refactor.",
      "parentUuid": "94fd9edf_9e8d90d9",
      "revId": "8a50a0d9e7b7c387c8c4eebee473cd04f38f5350",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "79135ebe_0422178b",
        "filename": "plat/arm/board/fvp/platform.mk",
        "patchSetId": 39
      },
      "lineNbr": 215,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-06-05T09:46:11Z",
      "side": 1,
      "message": "I suppose you\u0027re right",
      "parentUuid": "53a5e9a4_c7e8b61d",
      "revId": "8a50a0d9e7b7c387c8c4eebee473cd04f38f5350",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}