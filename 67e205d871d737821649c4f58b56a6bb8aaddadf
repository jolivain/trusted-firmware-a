{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0300da15_4dab10f6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2022-04-13T13:07:05Z",
      "side": 1,
      "message": "LGTM! Just 1 minor comment and a suggestion, nothing blocking per se.",
      "revId": "67e205d871d737821649c4f58b56a6bb8aaddadf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "468dd6a4_65b68050",
        "filename": "include/lib/psa/initial_attestation.h",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2022-04-13T13:07:05Z",
      "side": 1,
      "message": "(minor) I would avoid listing supported values in the comment, it is likely to go stale if we add more values in the future and miss updating the comment in tandem. The macros below are explicit enough IMO.",
      "range": {
        "startLine": 23,
        "startChar": 49,
        "endLine": 23,
        "endChar": 59
      },
      "revId": "67e205d871d737821649c4f58b56a6bb8aaddadf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7a49e024_bbe84437",
        "filename": "include/lib/psa/initial_attestation.h",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1000040
      },
      "writtenOn": "2022-04-25T15:27:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "468dd6a4_65b68050",
      "range": {
        "startLine": 23,
        "startChar": 49,
        "endLine": 23,
        "endChar": 59
      },
      "revId": "67e205d871d737821649c4f58b56a6bb8aaddadf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9705aa6e_27f37e64",
        "filename": "include/lib/psa/initial_attestation.h",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2022-04-13T13:07:05Z",
      "side": 1,
      "message": "Potentially we could merge token_buf_size and token_size arguments? i.e. we could have a single size_t *token_size argument, which contains as input the size of token_buf, and the size of the token as returned by RSS in output?",
      "range": {
        "startLine": 51,
        "startChar": 8,
        "endLine": 52,
        "endChar": 33
      },
      "revId": "67e205d871d737821649c4f58b56a6bb8aaddadf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c965eed8_b1ae0560",
        "filename": "include/lib/psa/initial_attestation.h",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1000040
      },
      "writtenOn": "2022-04-25T15:27:14Z",
      "side": 1,
      "message": "This attestation API is defined by the PSA Attestation API specification\n(https://www.arm.com/architecture/security-features/platform-security).",
      "parentUuid": "9705aa6e_27f37e64",
      "range": {
        "startLine": 51,
        "startChar": 8,
        "endLine": 52,
        "endChar": 33
      },
      "revId": "67e205d871d737821649c4f58b56a6bb8aaddadf",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}