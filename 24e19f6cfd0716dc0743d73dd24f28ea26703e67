{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e91fef40_db7a1b34",
        "filename": "plat/ti/k3/common/k3_bl31_setup.c",
        "patchSetId": 4
      },
      "lineNbr": 104,
      "author": {
        "id": 1000486
      },
      "writtenOn": "2023-10-17T14:10:32Z",
      "side": 1,
      "message": "We need the address to be relative, not hardcoded in. PIE is necessary for many different modules and we cannot afford to keep rebuilding TFA per board variant. too many to be sustaintable.",
      "revId": "24e19f6cfd0716dc0743d73dd24f28ea26703e67",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a98e3cb_8b080409",
        "filename": "plat/ti/k3/common/k3_bl31_setup.c",
        "patchSetId": 4
      },
      "lineNbr": 104,
      "author": {
        "id": 1001132
      },
      "writtenOn": "2023-10-25T13:17:21Z",
      "side": 1,
      "message": "I don\u0027t understand how this address can be relative.\nWe need to save TF-A at this address.\n\nBy the way, there is some hardcoded addresses in the code, for example https://elixir.bootlin.com/arm-trusted-firmware/latest/source/plat/ti/k3/include/platform_def.h#L180.\nMaybe LPM_SAVE should be moved to the plat_k3_mmap array: https://elixir.bootlin.com/arm-trusted-firmware/latest/source/plat/ti/k3/common/k3_bl31_setup.c#L24",
      "parentUuid": "e91fef40_db7a1b34",
      "revId": "24e19f6cfd0716dc0743d73dd24f28ea26703e67",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "386d0ce4_220dfbe0",
        "filename": "plat/ti/k3/common/k3_bl31_setup.c",
        "patchSetId": 4
      },
      "lineNbr": 104,
      "author": {
        "id": 1000486
      },
      "writtenOn": "2023-10-25T20:00:35Z",
      "side": 1,
      "message": "ref: hardcoded address - that is correct you cant change hardware blocks like secure proxy even if you are doing PIE or not. location of tfa on the other hand is variable. So that is not a response to this discussion.\n\nWe are already struggling hard on memory footprint aspects - overall asking TFA to push itself to DDR without encrypting it sounds dubios when TFA is running in SRAM - why not just run TFA in DDR and be done with it?\n\nbecareful with LPM_SAVE as the XLAT_TABLE is going to grow and we wont be able to build tfa yet again - Andrew and I just managed to find a optimal config a few mins back (patch pending) to get the builds working again. SRAM is limited, we have to factor that variable in.",
      "parentUuid": "3a98e3cb_8b080409",
      "revId": "24e19f6cfd0716dc0743d73dd24f28ea26703e67",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f762b00_ec174e29",
        "filename": "plat/ti/k3/include/platform_def.h",
        "patchSetId": 4
      },
      "lineNbr": 71,
      "author": {
        "id": 1000486
      },
      "writtenOn": "2023-10-17T14:10:32Z",
      "side": 1,
      "message": "NAK. This completely breaks the PIE concept. we need TFA to be PIE to handle various memory module sizes.",
      "revId": "24e19f6cfd0716dc0743d73dd24f28ea26703e67",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}