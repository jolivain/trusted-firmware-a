{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "48d7aadd_4243d63a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 42
      },
      "lineNbr": 11,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2023-10-27T12:40:23Z",
      "side": 1,
      "message": "This is cosmetic but I wonder why we call it global if this is a per-world context?\nA \u0027global context\u0027 would be meaningful for a state that is set once at boot and doesn\u0027t change on world switches. ZCR_EL3 could be a candidate as it\u0027s supposed to take a value that applies system wide, and doesn\u0027t change on world or PE switches.",
      "range": {
        "startLine": 11,
        "startChar": 33,
        "endLine": 11,
        "endChar": 57
      },
      "revId": "14f40273ddac109c3b788f3e13cf57466e5d8c0b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "25f2d5c2_c635f81e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 42
      },
      "lineNbr": 0,
      "author": {
        "id": 1000467
      },
      "writtenOn": "2023-10-26T16:11:21Z",
      "side": 1,
      "message": "I like the changes to the asm macros. Looks good to me",
      "revId": "14f40273ddac109c3b788f3e13cf57466e5d8c0b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74ccef26_f67bec52",
        "filename": "include/lib/el3_runtime/aarch64/context.h",
        "patchSetId": 42
      },
      "lineNbr": 330,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2023-10-27T12:40:23Z",
      "side": 1,
      "message": "IMO, this register isn\u0027t supposed to change on world switches.",
      "range": {
        "startLine": 330,
        "startChar": 8,
        "endLine": 330,
        "endChar": 19
      },
      "revId": "14f40273ddac109c3b788f3e13cf57466e5d8c0b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "969ecae0_2c930642",
        "filename": "include/lib/el3_runtime/aarch64/context.h",
        "patchSetId": 42
      },
      "lineNbr": 444,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2023-10-27T12:40:23Z",
      "side": 1,
      "message": "Call it per-world context?!",
      "range": {
        "startLine": 444,
        "startChar": 3,
        "endLine": 444,
        "endChar": 49
      },
      "revId": "14f40273ddac109c3b788f3e13cf57466e5d8c0b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3fae809_6ee3fa72",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 42
      },
      "lineNbr": 156,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-10-26T17:07:04Z",
      "side": 1,
      "message": "We should be calling secure global init from here I think",
      "revId": "14f40273ddac109c3b788f3e13cf57466e5d8c0b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd4ae12c_1ec0c017",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 42
      },
      "lineNbr": 156,
      "author": {
        "id": 1000660
      },
      "writtenOn": "2023-10-26T18:43:44Z",
      "side": 1,
      "message": "Thanks for pointing it Soby.\nBut if we place it here, we kind of overwrite the same memory from different CPUs as we only have one copy per world and this world specfic setup_context apis will be invoked from each cores.",
      "parentUuid": "d3fae809_6ee3fa72",
      "revId": "14f40273ddac109c3b788f3e13cf57466e5d8c0b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06921873_549564c0",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 42
      },
      "lineNbr": 156,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-10-27T07:17:16Z",
      "side": 1,
      "message": "Hmm, OK.\n\nThis is already a problem as this is called in warm boot path for every CPU ?\n\nBut we should not couple secure and non secure init in a single function. As there might be systems with just NS, RL in future (without S). Hence Secure needs to have its own function and caller which can be isolated in future.\n\nFor now you could have a flag (secure_is_init) and check that flag to ensure this is only initialized once. Or some other suitable scheme.",
      "parentUuid": "dd4ae12c_1ec0c017",
      "revId": "14f40273ddac109c3b788f3e13cf57466e5d8c0b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1bc86d85_397b1319",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 42
      },
      "lineNbr": 156,
      "author": {
        "id": 1000660
      },
      "writtenOn": "2023-10-27T12:19:14Z",
      "side": 1,
      "message": "Ok. \nThen I believe one of the possible solution is to: \nJust have the helper functions ( i.e \n1. manage_extensions_secure_global\n2. manage_extensions_nonsecure_global\n3. manage_extensiosn_realm_global\nand remove the manage_extyensions_global api, being called from cold and warm boot entry points.\n\nThe helper functions could be called respectively from the world context setup functions,\nsetup_ns_cotext, setup_secure_context, setup_realm_context, and make sure they are getting invoked once via some global flags as such.\n\nI hope this would fix the issue.",
      "parentUuid": "06921873_549564c0",
      "revId": "14f40273ddac109c3b788f3e13cf57466e5d8c0b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5130c313_2f964dc9",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 42
      },
      "lineNbr": 632,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2023-10-27T12:40:23Z",
      "side": 1,
      "message": "nit: Secure Partition Manager or abbreviated SPM",
      "range": {
        "startLine": 632,
        "startChar": 50,
        "endLine": 632,
        "endChar": 64
      },
      "revId": "14f40273ddac109c3b788f3e13cf57466e5d8c0b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd583007_33299330",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 42
      },
      "lineNbr": 647,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2023-10-27T12:40:23Z",
      "side": 1,
      "message": "nit: SPM",
      "range": {
        "startLine": 647,
        "startChar": 43,
        "endLine": 647,
        "endChar": 57
      },
      "revId": "14f40273ddac109c3b788f3e13cf57466e5d8c0b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1ce3b26_3664cf28",
        "filename": "lib/psci/psci_common.c",
        "patchSetId": 42
      },
      "lineNbr": 992,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-10-27T07:17:16Z",
      "side": 1,
      "message": "This is called for every CPU in warm boot path, so will this be re-init for every CPU as well which need to be avoided.",
      "revId": "14f40273ddac109c3b788f3e13cf57466e5d8c0b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "054611fb_cc15d69f",
        "filename": "lib/psci/psci_common.c",
        "patchSetId": 42
      },
      "lineNbr": 992,
      "author": {
        "id": 1000660
      },
      "writtenOn": "2023-10-27T12:19:14Z",
      "side": 1,
      "message": "Yes added comment above to fix this issue as well.",
      "parentUuid": "b1ce3b26_3664cf28",
      "revId": "14f40273ddac109c3b788f3e13cf57466e5d8c0b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d1e39a7_8f131297",
        "filename": "services/std_svc/rmmd/rmmd_main.c",
        "patchSetId": 42
      },
      "lineNbr": 135,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-10-27T07:25:23Z",
      "side": 1,
      "message": "this can\u0027t stay here - it\u0027s not the global ctx function",
      "revId": "14f40273ddac109c3b788f3e13cf57466e5d8c0b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20d17290_9de44b94",
        "filename": "services/std_svc/rmmd/rmmd_main.c",
        "patchSetId": 42
      },
      "lineNbr": 135,
      "author": {
        "id": 1000660
      },
      "writtenOn": "2023-10-27T12:07:31Z",
      "side": 1,
      "message": "could you please elaborate ? \nRME related initialization should happen here and not in context_management file is what, insisted from Soby from previous comments. Please take a look at those comments.",
      "parentUuid": "3d1e39a7_8f131297",
      "revId": "14f40273ddac109c3b788f3e13cf57466e5d8c0b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a6b18b7_0bef1ab6",
        "filename": "services/std_svc/rmmd/rmmd_main.c",
        "patchSetId": 42
      },
      "lineNbr": 135,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-10-27T12:09:38Z",
      "side": 1,
      "message": "sure keep the code in this file. But you can\u0027t mix _global and non-global feat_enables. You need a second function that should be called like the ns/s ones for the global context only",
      "parentUuid": "20d17290_9de44b94",
      "revId": "14f40273ddac109c3b788f3e13cf57466e5d8c0b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "750028ee_a50e733e",
        "filename": "services/std_svc/rmmd/rmmd_main.c",
        "patchSetId": 42
      },
      "lineNbr": 135,
      "author": {
        "id": 1000660
      },
      "writtenOn": "2023-10-27T12:19:48Z",
      "side": 1,
      "message": "ok.",
      "parentUuid": "1a6b18b7_0bef1ab6",
      "revId": "14f40273ddac109c3b788f3e13cf57466e5d8c0b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}