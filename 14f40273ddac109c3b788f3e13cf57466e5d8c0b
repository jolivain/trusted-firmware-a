{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "25f2d5c2_c635f81e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 42
      },
      "lineNbr": 0,
      "author": {
        "id": 1000467
      },
      "writtenOn": "2023-10-26T16:11:21Z",
      "side": 1,
      "message": "I like the changes to the asm macros. Looks good to me",
      "revId": "14f40273ddac109c3b788f3e13cf57466e5d8c0b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3fae809_6ee3fa72",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 42
      },
      "lineNbr": 156,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-10-26T17:07:04Z",
      "side": 1,
      "message": "We should be calling secure global init from here I think",
      "revId": "14f40273ddac109c3b788f3e13cf57466e5d8c0b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd4ae12c_1ec0c017",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 42
      },
      "lineNbr": 156,
      "author": {
        "id": 1000660
      },
      "writtenOn": "2023-10-26T18:43:44Z",
      "side": 1,
      "message": "Thanks for pointing it Soby.\nBut if we place it here, we kind of overwrite the same memory from different CPUs as we only have one copy per world and this world specfic setup_context apis will be invoked from each cores.",
      "parentUuid": "d3fae809_6ee3fa72",
      "revId": "14f40273ddac109c3b788f3e13cf57466e5d8c0b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06921873_549564c0",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 42
      },
      "lineNbr": 156,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-10-27T07:17:16Z",
      "side": 1,
      "message": "Hmm, OK.\n\nThis is already a problem as this is called in warm boot path for every CPU ?\n\nBut we should not couple secure and non secure init in a single function. As there might be systems with just NS, RL in future (without S). Hence Secure needs to have its own function and caller which can be isolated in future.\n\nFor now you could have a flag (secure_is_init) and check that flag to ensure this is only initialized once. Or some other suitable scheme.",
      "parentUuid": "dd4ae12c_1ec0c017",
      "revId": "14f40273ddac109c3b788f3e13cf57466e5d8c0b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1ce3b26_3664cf28",
        "filename": "lib/psci/psci_common.c",
        "patchSetId": 42
      },
      "lineNbr": 992,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-10-27T07:17:16Z",
      "side": 1,
      "message": "This is called for every CPU in warm boot path, so will this be re-init for every CPU as well which need to be avoided.",
      "revId": "14f40273ddac109c3b788f3e13cf57466e5d8c0b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}