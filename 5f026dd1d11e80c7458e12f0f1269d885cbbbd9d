{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "bbeb55ca_c7ef7c07",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 14,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-10-04T12:38:48Z",
      "side": 1,
      "message": "This should be removed from this commit message now, right?",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 14,
        "endChar": 39
      },
      "revId": "5f026dd1d11e80c7458e12f0f1269d885cbbbd9d",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2a16cbb_66a24662",
        "filename": "include/plat/arm/common/arm_def.h",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2023-10-05T08:10:48Z",
      "side": 1,
      "message": "Not related to your patch but looks like we support various RSA keys apart from the 2048. Will it be better to mention the sizes of all those full RSA keys and correspondingly provides support in the code to handle those keys?",
      "range": {
        "startLine": 36,
        "startChar": 8,
        "endLine": 36,
        "endChar": 25
      },
      "revId": "5f026dd1d11e80c7458e12f0f1269d885cbbbd9d",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23a5e813_65f768ea",
        "filename": "include/plat/arm/common/arm_def.h",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-10-05T09:22:55Z",
      "side": 1,
      "message": "Lauren can correct me if I am wrong but I believe 2kB is the only RSA key size we support when the hardware returns the *full* key.\n\nWhen the hardware rather returns the key *hash* then we support all 2k/3k/4k key sizes.\n\nLine 36 covers the full RSA key option. For RSA key hash we use ARM_ROTPK_HEADER_LEN + ARM_ROTPK_HASH_LEN.\n\nBTW, I find some of these names confusing. I\u0027ve captured my concerns in https://jira.arm.com/browse/GENFW-8228.",
      "parentUuid": "e2a16cbb_66a24662",
      "range": {
        "startLine": 36,
        "startChar": 8,
        "endLine": 36,
        "endChar": 25
      },
      "revId": "5f026dd1d11e80c7458e12f0f1269d885cbbbd9d",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f68ed7c_74ae8918",
        "filename": "include/plat/arm/common/plat_arm.h",
        "patchSetId": 3
      },
      "lineNbr": 181,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2023-10-05T08:10:48Z",
      "side": 1,
      "message": "nit: align these define values with the next 2 lines.",
      "range": {
        "startLine": 179,
        "startChar": 0,
        "endLine": 181,
        "endChar": 34
      },
      "revId": "5f026dd1d11e80c7458e12f0f1269d885cbbbd9d",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2818c84_0ee7abb0",
        "filename": "plat/arm/board/common/board_common.mk",
        "patchSetId": 3
      },
      "lineNbr": 47,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2023-10-05T08:10:48Z",
      "side": 1,
      "message": "I\u0027m thinking that it might be more beneficial to trigger a build error at a sane location for unsupported KEY_SIZE values provided to the build.\n\nSomething like below -\nifeq ($(filter $(KEY_SIZE), \u003clist of permitted size\u003e),)\n$(error \"Invalid value for KEY_SIZE: $KEY_SIZE\")\nendif\n\nWe can then handle the default scenario using an unconditional \u0027else\u0027 statement, particularly when KEY_SIZE hasn\u0027t been explicitly specified for the build.",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 47,
        "endChar": 4
      },
      "revId": "5f026dd1d11e80c7458e12f0f1269d885cbbbd9d",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fbbb62ea_a55f45c2",
        "filename": "plat/arm/board/common/rotpk/arm_full_dev_ecdsa_p256_rotpk.S",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2023-10-05T08:10:48Z",
      "side": 1,
      "message": "nit: can we limit the line \u003c 80 chars for readability.",
      "range": {
        "startLine": 23,
        "startChar": 1,
        "endLine": 23,
        "endChar": 79
      },
      "revId": "5f026dd1d11e80c7458e12f0f1269d885cbbbd9d",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "884dcaf6_f28ff3ac",
        "filename": "plat/arm/board/common/rotpk/arm_full_dev_ecdsa_p384_rotpk.S",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2023-10-05T08:10:48Z",
      "side": 1,
      "message": "nit: can we limit the line \u003c 80 chars for readability.",
      "range": {
        "startLine": 23,
        "startChar": 1,
        "endLine": 23,
        "endChar": 72
      },
      "revId": "5f026dd1d11e80c7458e12f0f1269d885cbbbd9d",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}