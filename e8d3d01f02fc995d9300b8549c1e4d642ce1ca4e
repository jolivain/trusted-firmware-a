{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d8418f6a_a8b5f6c3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 8,
      "author": {
        "id": 1000120
      },
      "writtenOn": "2024-03-21T08:54:03Z",
      "side": 1,
      "message": "Please mention the added macro CREATE_FEATURE_PRESENT() and by what logic you rename some feature functions.",
      "revId": "e8d3d01f02fc995d9300b8549c1e4d642ce1ca4e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4cf3909a_6dc71b41",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 8,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2024-03-21T11:02:22Z",
      "side": 1,
      "message": "The purpose of this patchstack is to get following capability and align it for all features.\nJust expose two functions to be used \nis_feat_xxx_present() : Does HW implements it\nis_feat_xxx_supported() : Does SW wants to use it (Taking into account build flags ENABLE_FEAT_XXX )",
      "parentUuid": "d8418f6a_a8b5f6c3",
      "revId": "e8d3d01f02fc995d9300b8549c1e4d642ce1ca4e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "148e04b0_b4bc21d7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 8,
      "author": {
        "id": 1000910
      },
      "writtenOn": "2024-03-26T23:54:35Z",
      "side": 1,
      "message": "Acknowledged, can you please check now and suggest corrections.",
      "parentUuid": "4cf3909a_6dc71b41",
      "revId": "e8d3d01f02fc995d9300b8549c1e4d642ce1ca4e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "78e25284_28612d21",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 8,
      "author": {
        "id": 1000120
      },
      "writtenOn": "2024-03-27T07:21:41Z",
      "side": 1,
      "message": "Looks good, thanks.",
      "parentUuid": "148e04b0_b4bc21d7",
      "revId": "e8d3d01f02fc995d9300b8549c1e4d642ce1ca4e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd4d212e_5a99efa4",
        "filename": "include/arch/aarch64/arch_features.h",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1000923
      },
      "writtenOn": "2024-03-22T16:10:42Z",
      "side": 1,
      "message": "Not sure if this would work, then may be we could do same for pauth as well we could use shift as 0 and use the entire shifted value as mask:\n\nexample:\n\n```\nCREATE_FEATURE_PRESENT(feat_pacqarma3, id_aa64isar2_el1, 0U,\n                       (ID_AA64ISAR2_GPA3_MASK \u003c\u003c ID_AA64ISAR2_GPA3_SHIFT) | \n                       (ID_AA64ISAR2_APA3_MASK \u003c\u003c ID_AA64ISAR2_APA3_SHIFT), \n                       0U)\n\n```",
      "range": {
        "startLine": 70,
        "startChar": 0,
        "endLine": 70,
        "endChar": 22
      },
      "revId": "e8d3d01f02fc995d9300b8549c1e4d642ce1ca4e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "37f5368a_1de34ce4",
        "filename": "include/arch/aarch64/arch_features.h",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1000910
      },
      "writtenOn": "2024-03-26T23:54:35Z",
      "side": 1,
      "message": "Acknowledged, yes this is replicating the exact function written previously. Have added the change.",
      "parentUuid": "cd4d212e_5a99efa4",
      "range": {
        "startLine": 70,
        "startChar": 0,
        "endLine": 70,
        "endChar": 22
      },
      "revId": "e8d3d01f02fc995d9300b8549c1e4d642ce1ca4e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}