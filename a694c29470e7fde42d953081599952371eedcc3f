{
  "comments": [
    {
      "key": {
        "uuid": "23cc6cf5_ef78b984",
        "filename": "include/plat/arm/common/arm_def.h",
        "patchSetId": 6
      },
      "lineNbr": 500,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2020-10-16T11:10:45Z",
      "side": 1,
      "message": "PLAT_ARM looks too generic for this specific case.\nSomething like SPM_IMAGE_BASE(or any other suitable name) should be better.",
      "range": {
        "startLine": 500,
        "startChar": 22,
        "endLine": 500,
        "endChar": 31
      },
      "revId": "a694c29470e7fde42d953081599952371eedcc3f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8aa8a1a9_139bc3b4",
        "filename": "include/plat/arm/common/arm_def.h",
        "patchSetId": 6
      },
      "lineNbr": 500,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2020-10-16T12:12:43Z",
      "side": 1,
      "message": "Thanks for the review.\nLet\u0027s keep it generic because for the case SPD\u003dspmd and SPMD_SPM_AT_SEL2\u003d0, the \nBL32 base is not a SPM image instead its a TOS that has SPMC in it.\nOr if this needs to be changed, how about PLAT_ARM_SPMC_BASE and PLAT_ARM_SPMC_LIMIT?\nOpen for other suggestions.",
      "parentUuid": "23cc6cf5_ef78b984",
      "range": {
        "startLine": 500,
        "startChar": 22,
        "endLine": 500,
        "endChar": 31
      },
      "revId": "a694c29470e7fde42d953081599952371eedcc3f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14619d41_3f1d7473",
        "filename": "include/plat/arm/common/arm_def.h",
        "patchSetId": 6
      },
      "lineNbr": 500,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2020-10-16T12:38:21Z",
      "side": 1,
      "message": "something like PLAT_ARM_SPMC_BASE \u0026 PLAT_ARM_SPMC_LIMIT is what i was looking for, i think its perfect.",
      "parentUuid": "8aa8a1a9_139bc3b4",
      "range": {
        "startLine": 500,
        "startChar": 22,
        "endLine": 500,
        "endChar": 31
      },
      "revId": "a694c29470e7fde42d953081599952371eedcc3f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e221ef64_5a41f760",
        "filename": "include/plat/arm/common/arm_def.h",
        "patchSetId": 6
      },
      "lineNbr": 500,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2020-10-16T13:02:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "14619d41_3f1d7473",
      "range": {
        "startLine": 500,
        "startChar": 22,
        "endLine": 500,
        "endChar": 31
      },
      "revId": "a694c29470e7fde42d953081599952371eedcc3f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "21f31f2e_2e56a213",
        "filename": "plat/arm/board/fvp/include/platform_def.h",
        "patchSetId": 6
      },
      "lineNbr": 50,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2020-10-16T12:10:17Z",
      "side": 1,
      "message": "How does it correspond with:\n# define PLAT_ARM_MAX_BL32_SIZE\t\tUL(0x3B000)\nin plat\\arm\\board\\fvp\\include\\platform_def.h\n?",
      "revId": "a694c29470e7fde42d953081599952371eedcc3f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63ed61d1_84a44b93",
        "filename": "plat/arm/board/fvp/include/platform_def.h",
        "patchSetId": 6
      },
      "lineNbr": 50,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2020-10-16T12:25:19Z",
      "side": 1,
      "message": "PLAT_ARM_MAX_BL32_SIZE limit only applies to aarch32. This BL32_LIMIT here is taken from\narm_def.h",
      "parentUuid": "21f31f2e_2e56a213",
      "revId": "a694c29470e7fde42d953081599952371eedcc3f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    }
  ]
}