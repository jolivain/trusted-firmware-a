{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ee119020_8724fd9c",
        "filename": "make_helpers/defaults.mk",
        "patchSetId": 5
      },
      "lineNbr": 140,
      "author": {
        "id": 1000467
      },
      "writtenOn": "2021-11-30T13:39:44Z",
      "side": 1,
      "message": "Since FEAT_FGT is mandatory for 8.6 or greater I think it would be better to set it in the makefile like is done for FEAT_SB\n\nifeq \"8.5\" \"$(word 1, $(sort 8.5 $(ARM_ARCH_MAJOR).$(ARM_ARCH_MINOR)))\"\nENABLE_FEAT_SB          \u003d       1\nendif",
      "range": {
        "startLine": 140,
        "startChar": 0,
        "endLine": 140,
        "endChar": 15
      },
      "revId": "785c8b1ed99e6c6d327686019807fc7012ff7527",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6cdf5d7b_e3be621e",
        "filename": "make_helpers/defaults.mk",
        "patchSetId": 5
      },
      "lineNbr": 140,
      "author": {
        "id": 1000660
      },
      "writtenOn": "2021-11-30T15:16:02Z",
      "side": 1,
      "message": "It would be better, agreed. However I don\u0027t see this approach followed uniformly for other features as well. Majority are placed in defaults.mk. Wouldn\u0027t it be fine to retain them here? or is it something wherein when features become mandatory for a given version they should be set in  makefile ?",
      "parentUuid": "ee119020_8724fd9c",
      "range": {
        "startLine": 140,
        "startChar": 0,
        "endLine": 140,
        "endChar": 15
      },
      "revId": "785c8b1ed99e6c6d327686019807fc7012ff7527",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1e37f4d_e607804e",
        "filename": "make_helpers/defaults.mk",
        "patchSetId": 5
      },
      "lineNbr": 140,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2021-11-30T17:34:19Z",
      "side": 1,
      "message": "We can add FEAT_FGT\u003d1 check in Makefile for 8.6+ and report an error if it is not set.",
      "parentUuid": "6cdf5d7b_e3be621e",
      "range": {
        "startLine": 140,
        "startChar": 0,
        "endLine": 140,
        "endChar": 15
      },
      "revId": "785c8b1ed99e6c6d327686019807fc7012ff7527",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "379c54f2_495fc866",
        "filename": "make_helpers/defaults.mk",
        "patchSetId": 5
      },
      "lineNbr": 140,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2021-11-30T18:07:28Z",
      "side": 1,
      "message": "As per the patch, this flag is used only to save and restore the HDFGRTR_EL2 register in the context routine.\n\nI assume some platforms with FEAT_FGT may not use HDFGRTR_EL2 register in EL2, then can saving and restoring this register be an extra overhead?",
      "parentUuid": "e1e37f4d_e607804e",
      "range": {
        "startLine": 140,
        "startChar": 0,
        "endLine": 140,
        "endChar": 15
      },
      "revId": "785c8b1ed99e6c6d327686019807fc7012ff7527",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7a1de86_9a61ba14",
        "filename": "make_helpers/defaults.mk",
        "patchSetId": 5
      },
      "lineNbr": 140,
      "author": {
        "id": 1000467
      },
      "writtenOn": "2021-11-30T18:33:49Z",
      "side": 1,
      "message": "I think that adding the check Alexei mentioned it better than nothing but it still means a user can\u0027t just set the version to v8.6 and know the required flags are set but instead needs to set the version to v8.6 and any flags that now must be mandatory which doesn\u0027t seem ideal. \n\nMost architectural features in TF-A are not detected using build flags but by querying feature registers which I think is why there aren\u0027t any other other examples of flags being set like FEAT_SB. I don\u0027t know what the reasoning for using a build flag for FEAT_SB is, I imagine performance, in which case having a FEAT_FGT build flag seems reasonable as well.",
      "parentUuid": "379c54f2_495fc866",
      "range": {
        "startLine": 140,
        "startChar": 0,
        "endLine": 140,
        "endChar": 15
      },
      "revId": "785c8b1ed99e6c6d327686019807fc7012ff7527",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c290fa57_16962e3b",
        "filename": "make_helpers/defaults.mk",
        "patchSetId": 5
      },
      "lineNbr": 140,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2021-12-01T12:19:15Z",
      "side": 1,
      "message": "If a platform doesn\u0027t use HDFGRTR_EL2 register in EL2, in that case Makefile could produce a warning if FEAT_FGT is not set for 8.6+. If we choose this option, then saving/restoring of all othere feature related registers should follow the same approach, but this needs to be discussed.\nUsing of FEAT_FGT also should be documented.",
      "parentUuid": "e7a1de86_9a61ba14",
      "range": {
        "startLine": 140,
        "startChar": 0,
        "endLine": 140,
        "endChar": 15
      },
      "revId": "785c8b1ed99e6c6d327686019807fc7012ff7527",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed3f537c_147ee158",
        "filename": "make_helpers/defaults.mk",
        "patchSetId": 5
      },
      "lineNbr": 140,
      "author": {
        "id": 1000660
      },
      "writtenOn": "2021-12-03T13:02:41Z",
      "side": 1,
      "message": "Consolidating all the above comments so far, I have added the checks in the Makefile, with warnings if in case the mandatory features ( FEAT_FGT and FEAT_ECV ) are not enabled from 8.6+. \nAlso this gives the flexibility to the user, allowing them to enable/disable according to their platforms.\nA documemtation patch will be pushed with inclusion of all three macros and their usage.",
      "parentUuid": "c290fa57_16962e3b",
      "range": {
        "startLine": 140,
        "startChar": 0,
        "endLine": 140,
        "endChar": 15
      },
      "revId": "785c8b1ed99e6c6d327686019807fc7012ff7527",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}