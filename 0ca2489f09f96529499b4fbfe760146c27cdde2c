{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7cef8294_0ac705c3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 21,
      "author": {
        "id": 1000750
      },
      "writtenOn": "2023-06-05T21:20:11Z",
      "side": 1,
      "message": "remove",
      "range": {
        "startLine": 21,
        "startChar": 26,
        "endLine": 21,
        "endChar": 27
      },
      "revId": "0ca2489f09f96529499b4fbfe760146c27cdde2c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d5e46a8_3e88d10c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 21,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-06-06T09:40:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7cef8294_0ac705c3",
      "range": {
        "startLine": 21,
        "startChar": 26,
        "endLine": 21,
        "endChar": 27
      },
      "revId": "0ca2489f09f96529499b4fbfe760146c27cdde2c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b4c2db5b_22e284cb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-06-06T09:40:01Z",
      "side": 1,
      "message": "@Andre might have input on dynamic context related things",
      "revId": "0ca2489f09f96529499b4fbfe760146c27cdde2c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "150fad01_e805bd70",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 12
      },
      "lineNbr": 276,
      "author": {
        "id": 1000750
      },
      "writtenOn": "2023-06-05T21:20:11Z",
      "side": 1,
      "message": "Shouldn\u0027t you use is_feat_hcx_supported() here instead to take advantage of the feature detection mechanism?",
      "range": {
        "startLine": 276,
        "startChar": 0,
        "endLine": 276,
        "endChar": 18
      },
      "revId": "0ca2489f09f96529499b4fbfe760146c27cdde2c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77f33ec7_1854653f",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 12
      },
      "lineNbr": 276,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-06-06T09:40:01Z",
      "side": 1,
      "message": "I wasn\u0027t sure about this, the thinking was that when the feature is 1 or 0 it behaves the same as in the is_feat_hcx_supported() case. In the \u003d2 case, the check will happen when writing the register and not having it here is just a memory access more, with the benefit of the code being ever so slightly prettier. \u003d2 isn\u0027t meant to be particularly optimal so I didn\u0027t see an issue here.",
      "parentUuid": "150fad01_e805bd70",
      "range": {
        "startLine": 276,
        "startChar": 0,
        "endLine": 276,
        "endChar": 18
      },
      "revId": "0ca2489f09f96529499b4fbfe760146c27cdde2c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f6736c8_09bcb6bf",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 12
      },
      "lineNbr": 276,
      "author": {
        "id": 1000750
      },
      "writtenOn": "2023-06-06T19:33:07Z",
      "side": 1,
      "message": "I understand. I honestly don\u0027t think that one more memory access will hurt in this case. Anyways, I\u0027m adding Jayanth as a reviewer, so he can share his thoughts on this, as he is the one that developed the feature detection mechanism.",
      "parentUuid": "77f33ec7_1854653f",
      "range": {
        "startLine": 276,
        "startChar": 0,
        "endLine": 276,
        "endChar": 18
      },
      "revId": "0ca2489f09f96529499b4fbfe760146c27cdde2c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a080a455_44b98c03",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 12
      },
      "lineNbr": 276,
      "author": {
        "id": 1000660
      },
      "writtenOn": "2023-06-17T21:00:26Z",
      "side": 1,
      "message": "I agree with Juan here.\nIs better to use the custom function (is_feat_hcx_supported) here. \nOur initial thoughts were to replace the #ifs in .c with the proper c functions, which is what has been followed in most of the refactored patches from Andre.\n(https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/19278/11/lib/el3_runtime/aarch64/context_mgmt.c#959)\nPlease stick to this pattern for keeping the code consistent.",
      "parentUuid": "9f6736c8_09bcb6bf",
      "range": {
        "startLine": 276,
        "startChar": 0,
        "endLine": 276,
        "endChar": 18
      },
      "revId": "0ca2489f09f96529499b4fbfe760146c27cdde2c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3de4bd38_b2e16852",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 12
      },
      "lineNbr": 276,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-06-26T10:48:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a080a455_44b98c03",
      "range": {
        "startLine": 276,
        "startChar": 0,
        "endLine": 276,
        "endChar": 18
      },
      "revId": "0ca2489f09f96529499b4fbfe760146c27cdde2c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83ce492f_8d6435ef",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 12
      },
      "lineNbr": 285,
      "author": {
        "id": 1000750
      },
      "writtenOn": "2023-06-05T21:20:11Z",
      "side": 1,
      "message": "Although this is technically possible, it looks a bit weird that you are using the context object for EL2 when you might not have it enabled (i.e.: !CTX_INCLUDE_EL2_REGS). Using another structure to store these values seems to be the right way to go, but I understand that it may be much of a hassle. Thoughts?",
      "range": {
        "startLine": 285,
        "startChar": 1,
        "endLine": 285,
        "endChar": 57
      },
      "revId": "0ca2489f09f96529499b4fbfe760146c27cdde2c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2350f283_34105902",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 12
      },
      "lineNbr": 285,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-06-06T09:40:01Z",
      "side": 1,
      "message": "I see what you mean, but this register belongs to that structure and I don\u0027t think any other. It is EL2 context after all. Under the current behaviour this happens anyway, but at prepare_el3_exit(). I take the option to be a bit more semantic, as in CTX_INCLUDE_EL2_REGS\u003d1 means \"include the full EL2 context\" and CTX_INCLUDE_EL2_REGS\u003d0 means \"please do the minimal amount of work to get EL2 working\". I don\u0027t really change the function of the option, but just make what happens a bit more explicit.",
      "parentUuid": "83ce492f_8d6435ef",
      "range": {
        "startLine": 285,
        "startChar": 1,
        "endLine": 285,
        "endChar": 57
      },
      "revId": "0ca2489f09f96529499b4fbfe760146c27cdde2c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe67b2aa_36876d68",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 12
      },
      "lineNbr": 285,
      "author": {
        "id": 1000750
      },
      "writtenOn": "2023-06-06T19:33:07Z",
      "side": 1,
      "message": "That\u0027s fair. I also agree that using another structure will add more work and complexity. I\u0027m fine with leaving it as it is.",
      "parentUuid": "2350f283_34105902",
      "range": {
        "startLine": 285,
        "startChar": 1,
        "endLine": 285,
        "endChar": 57
      },
      "revId": "0ca2489f09f96529499b4fbfe760146c27cdde2c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}