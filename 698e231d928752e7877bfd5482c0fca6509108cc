{
  "comments": [
    {
      "key": {
        "uuid": "a6474131_cea82495",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2020-02-11T14:28:07Z",
      "side": 1,
      "message": "I still don\u0027t understand the issue to the bottom...\n\nIIUC, the issue arises if I want to use an ECDSA ROTPK. So I am compiling with ARM_ROTPK_LOCATION\u003ddevel_ecdsa and ROT_KEY\u003dplat/arm/board/common/rotpk/arm_rotprivk_ecdsa.pem. What happens next is, the hash file is generated from this ECDSA key, except that openssl is told that it is an RSA key. IOW, we execute the following command at line 53:\n\n openssl rsa -in plat/arm/board/common/rotpk/arm_rotprivk_ecdsa.pem -pubout -outform DER | \\\n   openssl dgst -sha256 -binary \u003e plat/arm/board/common/rotpk/arm_rotpk_ecdsa_sha256.bin\n\nIf I type this command, openssl throws an error at me, as it correctly detects that it didn\u0027t get the private key in the expected format:\n\n 140238993356440:error:0607907F:digital envelope routines:EVP_PKEY_get1_RSA:expecting an rsa key:p_lib.c:279:\n\nSo if my understanding is correct so far, I don\u0027t understand why this didn\u0027t fail to build... Can you please help me understand?",
      "revId": "698e231d928752e7877bfd5482c0fca6509108cc",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "afa8d713_122902fe",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2020-02-11T14:36:50Z",
      "side": 1,
      "message": "I also don\u0027t understand that. I thought that KEY_ALG indicated the encryption algorithm to use for generating keys. Now, most of the time, we provide an existing ROTPK (via ROT_KEY\u003dpath/to/key.pem) so cert_create does not need to generate it and KEY_ALG only applies to all other subsidiary keys that cert_create has to generate. But in the event where the ROTPK also has to be generated (which I think is a valid use case in a development environment) then I thought that KEY_ALG would also dictate which algo to use for the ROTPK.\n\nIs my understanding correct? Do we not support generating a development ROTPK?",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 12,
        "endChar": 27
      },
      "revId": "698e231d928752e7877bfd5482c0fca6509108cc",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    }
  ]
}