{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "510fcac2_00bab3a5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2021-06-23T13:05:36Z",
      "side": 1,
      "message": "same here - is this true? The path when RAS interrupt occurs is:\n\n1) ehf_el3_interrupt_handler - acks interrupt and running priority now becomes secure priority.\n2) ras_interrupt_handler is called which calls selected-\u003eerr_record-\u003ehandler\n3) sgi_ras_intr_handler gets called\n4) cm_el1_sysregs_context_save(NON_SECURE) -\u003e ehf_exited_normal_world() - Nothing happens here since running priority is already secure and the function just returns...\nhow does prio go from 0xf8 to 0x80?",
      "range": {
        "startLine": 16,
        "startChar": 2,
        "endLine": 18,
        "endChar": 31
      },
      "revId": "22007a54fb28732cf60eae7e363bc026a1d85b7b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2c141f4_95e0b77f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1000464
      },
      "writtenOn": "2021-06-23T14:31:03Z",
      "side": 1,
      "message": "The RAS scenario:enter EL3 by sync exception(EA) and then walk go sgi_ras_intr_handler(). The extern abort and RAS interrupt both walk go sgi_ras_intr_handler().\nThere is no problem for normal RAS interrupt handler.",
      "parentUuid": "510fcac2_00bab3a5",
      "range": {
        "startLine": 16,
        "startChar": 2,
        "endLine": 18,
        "endChar": 31
      },
      "revId": "22007a54fb28732cf60eae7e363bc026a1d85b7b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b229d75c_3e113281",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2021-06-23T15:00:12Z",
      "side": 1,
      "message": "sorry, can you rephrase? what does \"both walk go\" mean? What is normal RAS interrupt handler?",
      "parentUuid": "d2c141f4_95e0b77f",
      "range": {
        "startLine": 16,
        "startChar": 2,
        "endLine": 18,
        "endChar": 31
      },
      "revId": "22007a54fb28732cf60eae7e363bc026a1d85b7b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17c0fe29_ea7539e2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1000464
      },
      "writtenOn": "2021-06-24T01:12:34Z",
      "side": 1,
      "message": "Normal RAS interrupts are group 0 spi interrupt (type INTR_TYPE_EL3).\nWe set SCR_EL3.EA \u003d 1, let EA enter EL3 and call sgi_ras_intr_handler() as\nRAS handler(enter MM and then nodify OS via SDEI).\nsgi_ras_intr_handler() is common RAS handler for both (EA and normal RAS interrupt).",
      "parentUuid": "b229d75c_3e113281",
      "range": {
        "startLine": 16,
        "startChar": 2,
        "endLine": 18,
        "endChar": 31
      },
      "revId": "22007a54fb28732cf60eae7e363bc026a1d85b7b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62e44067_c4a1d221",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2021-06-25T15:28:25Z",
      "side": 1,
      "message": "I see understood, i missed that, i was thinking entry through a RAS interrupt. Now there is yet another problem. We enter spm_mm_sp_call() at interrupt priority of 0x80, this means a RAS interrupt can pre-empt SPM MM execution, enter the same path and cause a dead lock. I believe this was discussed in the mailing list a while ago but i\u0027ll leave that for now.",
      "parentUuid": "17c0fe29_ea7539e2",
      "range": {
        "startLine": 16,
        "startChar": 2,
        "endLine": 18,
        "endChar": 31
      },
      "revId": "22007a54fb28732cf60eae7e363bc026a1d85b7b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e00f8354_4695d07c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1000464
      },
      "writtenOn": "2021-06-28T01:30:04Z",
      "side": 1,
      "message": "Thanks for your reply.\nYes, I solve the another problem by below change in sgi_ras_intr_handler():\n/*\n * intr \u003d\u003d 0 is EA, raise running priority to block any\n * interrupt from preempting this core;\n * For RAS interrupt, the running priority(icc_rpr_el1) is 0x10.\n */\nif (intr \u003d\u003d 0)\n\tehf_activate_priority(PLAT_SP_PRI);\n\nret \u003d spm_mm_sp_call(MM_COMMUNICATE_AARCH64, (uint64_t)header, 0, plat_my_core_pos());\nif (ret !\u003d 0)\n\tERROR(\"spm_mm_sp_call ret(%x) error\\n\", ret);\n\nif (intr \u003d\u003d 0)\n\tehf_deactivate_priority(PLAT_SP_PRI);",
      "parentUuid": "62e44067_c4a1d221",
      "range": {
        "startLine": 16,
        "startChar": 2,
        "endLine": 18,
        "endChar": 31
      },
      "revId": "22007a54fb28732cf60eae7e363bc026a1d85b7b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "44a68cfc_b6d333c0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2021-06-28T19:54:16Z",
      "side": 1,
      "message": "yep, that would be the way to solve it.",
      "parentUuid": "e00f8354_4695d07c",
      "range": {
        "startLine": 16,
        "startChar": 2,
        "endLine": 18,
        "endChar": 31
      },
      "revId": "22007a54fb28732cf60eae7e363bc026a1d85b7b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "858a16f2_49204600",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2021-06-16T00:05:50Z",
      "side": 1,
      "message": "is this true though? why is ehf_entering_normal_world not being called the second time around?",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 29,
        "endChar": 48
      },
      "revId": "22007a54fb28732cf60eae7e363bc026a1d85b7b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7256010d_b41c8954",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2021-06-16T00:29:14Z",
      "side": 1,
      "message": "It sounds like pthe problem is that there is no code path that triggers the ehf_entering_normal_world call and the platform must do something to trigger that, so that the NS priority saved at the beginning when the EL3 sync exception is received is saved. Moving activation to after the SDEI event dispatch means that you are executing the SDEI handler without proper increase in pmr priority..",
      "parentUuid": "858a16f2_49204600",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 29,
        "endChar": 48
      },
      "revId": "22007a54fb28732cf60eae7e363bc026a1d85b7b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8a08e6c_da06d71f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2021-06-17T15:44:23Z",
      "side": 1,
      "message": "Not sure this patch is fixing the issue the right way. Moving priority activation after resuming NS context means the SDEI handler in normal world will run without the appropriate priorities masked.",
      "revId": "22007a54fb28732cf60eae7e363bc026a1d85b7b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a604f4b9_e9d45478",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000464
      },
      "writtenOn": "2021-06-23T07:36:45Z",
      "side": 1,
      "message": "The old code before enter normal world:\nicc_pmr_el1: 0x80 \u003d\u003e 0x60\nThe new code before enter normal world:\nicc_pmr_el1: 0xf8 \u003d\u003e 0x60\n\nSo,Moving priority activation after resuming NS context,the SDEI handler in normal world will run with the same priorities.",
      "parentUuid": "c8a08e6c_da06d71f",
      "revId": "22007a54fb28732cf60eae7e363bc026a1d85b7b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "037ef00b_56ea70d3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2021-06-23T13:06:03Z",
      "side": 1,
      "message": "Not yet fully convinced. Can you respond to other comments i have?",
      "parentUuid": "a604f4b9_e9d45478",
      "revId": "22007a54fb28732cf60eae7e363bc026a1d85b7b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}