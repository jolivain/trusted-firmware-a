{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "de844136_4362af2e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2021-04-15T00:45:29Z",
      "side": 1,
      "message": "Should we push this change to the libfdt repo first? What\u0027s the plan to upstream this code change?",
      "revId": "a6f63ceeb98eb400f73fa432a5d1d622c9331698",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eef7c9a4_a99179b4",
        "filename": "common/fdt_wrappers.c",
        "patchSetId": 11
      },
      "lineNbr": 182,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2021-04-15T00:45:29Z",
      "side": 1,
      "message": "I propose we use a different error code to differentiate between an incorrect input parameter and read_uuid() failure.",
      "range": {
        "startLine": 182,
        "startChar": 10,
        "endLine": 182,
        "endChar": 26
      },
      "revId": "a6f63ceeb98eb400f73fa432a5d1d622c9331698",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23b37945_c257d238",
        "filename": "common/fdt_wrappers.c",
        "patchSetId": 11
      },
      "lineNbr": 182,
      "author": {
        "id": 1000440
      },
      "writtenOn": "2021-04-15T13:50:51Z",
      "side": 1,
      "message": "I see what you\u0027re saying.\nI suppose, specifically, it would be good to distinguish \u0027bad value in the device tree\u0027 from \u0027bad parameter\u0027. Looking at other uses of FDT_ERR_BADVALUE, it looks like it would be best to change the error value in line 172.\nI\u0027ll look into this further.",
      "parentUuid": "eef7c9a4_a99179b4",
      "range": {
        "startLine": 182,
        "startChar": 10,
        "endLine": 182,
        "endChar": 26
      },
      "revId": "a6f63ceeb98eb400f73fa432a5d1d622c9331698",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b54b5140_bff6433e",
        "filename": "common/uuid.c",
        "patchSetId": 11
      },
      "lineNbr": 78,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2021-04-15T00:45:29Z",
      "side": 1,
      "message": "Why not use a pre-defined unique error value from errno.h?",
      "range": {
        "startLine": 78,
        "startChar": 9,
        "endLine": 78,
        "endChar": 11
      },
      "revId": "a6f63ceeb98eb400f73fa432a5d1d622c9331698",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f516ae5a_16952947",
        "filename": "common/uuid.c",
        "patchSetId": 11
      },
      "lineNbr": 126,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2021-04-15T00:45:29Z",
      "side": 1,
      "message": "Why not use a pre-defined unique error value from errno.h?",
      "range": {
        "startLine": 126,
        "startChar": 9,
        "endLine": 126,
        "endChar": 11
      },
      "revId": "a6f63ceeb98eb400f73fa432a5d1d622c9331698",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}