{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ccfef087_8203d6e1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2022-09-08T11:40:20Z",
      "side": 1,
      "message": "nit: psci_is_last_on_cpu_safe",
      "range": {
        "startLine": 7,
        "startChar": 45,
        "endLine": 7,
        "endChar": 68
      },
      "revId": "8406348553570bd2b6675ff25254a73c3562bd7e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ca03e1e2_61f3f764",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 1000660
      },
      "writtenOn": "2022-09-08T13:42:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ccfef087_8203d6e1",
      "range": {
        "startLine": 7,
        "startChar": 45,
        "endLine": 7,
        "endChar": 68
      },
      "revId": "8406348553570bd2b6675ff25254a73c3562bd7e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "506e10b7_e119a1d3",
        "filename": "lib/psci/psci_common.c",
        "patchSetId": 7
      },
      "lineNbr": 165,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2022-09-08T11:40:20Z",
      "side": 1,
      "message": "Can we have assert here to check core_count is not equal to 0? to avoid any false positive result.",
      "revId": "8406348553570bd2b6675ff25254a73c3562bd7e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30168f2a_19d314f3",
        "filename": "lib/psci/psci_common.c",
        "patchSetId": 7
      },
      "lineNbr": 165,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2022-09-08T11:59:28Z",
      "side": 1,
      "message": "Along with that you can also add a check to make sure that core_count is not more than \"psci_plat_core_count\"",
      "parentUuid": "506e10b7_e119a1d3",
      "revId": "8406348553570bd2b6675ff25254a73c3562bd7e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c754330_e068c33b",
        "filename": "lib/psci/psci_common.c",
        "patchSetId": 7
      },
      "lineNbr": 165,
      "author": {
        "id": 1000660
      },
      "writtenOn": "2022-09-08T13:42:35Z",
      "side": 1,
      "message": "I am thinking of this scenario. Correct me if I am wrong here.\n\nAs psci_is_last_on_cpu_safe api traverses through forest, its considering only root node of each tree in the forest at the top while loop.\n\nFor FVP we have only one tree in the forest so here psci_plat_core_count will be equal to root node( i.e psci_non_cpu_pd_nodes[0].ncpus ).\n\nBut assuming if there are n trees in the forest ( more than 1 root node), in that situation core_count passed will not be equal to psci_plat_core_count.(not sure if this valid case, want to get confirmed )\n\nWe might end up running while loop more than once and psci_is_last_on_cpu will be called to traverse the cpu power domains of each tree in forest. \n\nThe overall psci_plat_core_count will be equal to the summation of ncpus value held in each root node.\nSo in this case the assert check will not be checking for correct value.\n\nI will modify it for now. But please do share your thoughts whether this scenario is valid or not.\nThanks",
      "parentUuid": "30168f2a_19d314f3",
      "revId": "8406348553570bd2b6675ff25254a73c3562bd7e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}