{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d5955a83_b21395bd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 7,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-10-24T11:48:19Z",
      "side": 1,
      "message": "(minor) This is subjective but I feel one of these titles would be more descriptive:\n\nrefactor(partition): parse MBR to locate GPT header\nrefactor(partition): get GPT header location from MBR\nrefactor(partition): remove hard-coded GPT header offset/size\n\n\"macro values\" does not mean much to me and I was not able to understand the scope of the change on first reading.",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 53
      },
      "revId": "c698275b27f745f80a3cb2e6dc4b5745666fbcda",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "975d3228_2ba97817",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 7,
      "author": {
        "id": 1000923
      },
      "writtenOn": "2023-10-24T20:12:31Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "d5955a83_b21395bd",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 53
      },
      "revId": "c698275b27f745f80a3cb2e6dc4b5745666fbcda",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0e5663a_c5d0e7fd",
        "filename": "drivers/partition/partition.c",
        "patchSetId": 12
      },
      "lineNbr": 67,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-10-24T11:48:19Z",
      "side": 1,
      "message": "This is off-topic but should we not check that `bytes_read \u003d\u003d PLAT_PARTITION_BLOCK_SIZE` (in addition to `result !\u003d 0`)? Otherwise, is it not possible that we read an incomplete MBR header? What would the consequences (keeping in mind that mbr_sector is defined in the bss section and thus initialized to 0)?\n\nIf this is a real issue then let\u0027s fix it in another patch.",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 67,
        "endChar": 2
      },
      "revId": "c698275b27f745f80a3cb2e6dc4b5745666fbcda",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "53f22ac1_c31cc801",
        "filename": "drivers/partition/partition.c",
        "patchSetId": 12
      },
      "lineNbr": 67,
      "author": {
        "id": 1000923
      },
      "writtenOn": "2023-10-24T20:12:31Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "a0e5663a_c5d0e7fd",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 67,
        "endChar": 2
      },
      "revId": "c698275b27f745f80a3cb2e6dc4b5745666fbcda",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e264cd1c_92843bd8",
        "filename": "drivers/partition/partition.c",
        "patchSetId": 12
      },
      "lineNbr": 86,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-10-24T11:48:19Z",
      "side": 1,
      "message": "Should we not do these checks *before* copying the data to `mbr_entry`? Just like we\u0027ve validated the boot signature at line 69-73? Is there a reason why this cannot be done?\n\nDoing these checks after the memcpy() does not harm - since the caller ought to check the function return value before accessing `mbr_entry` - but it sounds better to me to do all checks upfront then only copy the validated data.",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 86,
        "endChar": 2
      },
      "revId": "c698275b27f745f80a3cb2e6dc4b5745666fbcda",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a595d897_1c1a3bb7",
        "filename": "drivers/partition/partition.c",
        "patchSetId": 12
      },
      "lineNbr": 86,
      "author": {
        "id": 1000923
      },
      "writtenOn": "2023-10-24T20:12:31Z",
      "side": 1,
      "message": "Signature is just 2 bytes and is located easily at 510 byte.\n\nBut \u0027first_lba\u0027 and \u0027sector_nums\u0027 are part of Partition Record from 446 byte so we may have to do additional manipulation and assumption about location of these two which are part of `mbr_entry` struct.\n\nI feel its harmless to copy into struct and evaluate its values than manipulating its location within the \u0027mbr_entry\u0027\n\nPS: from my understanding we avoid reading initial mbr header since we are interested in only \u0027signature\u0027 at 510 byte and first 440 bytes in that struct is unused as per UEFI_Spec_2_9_2021_03_18.pdf page number 118",
      "parentUuid": "e264cd1c_92843bd8",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 86,
        "endChar": 2
      },
      "revId": "c698275b27f745f80a3cb2e6dc4b5745666fbcda",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4edd3109_2a7094ea",
        "filename": "drivers/partition/partition.c",
        "patchSetId": 12
      },
      "lineNbr": 86,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-10-25T06:09:05Z",
      "side": 1,
      "message": "\u003e But \u0027first_lba\u0027 and \u0027sector_nums\u0027 are part of Partition Record from 446 byte so we may have to do additional manipulation and assumption about location of these two which are part of mbr_entry struct.\n\nBut we are already doing the necessary manipulation and location computation here... Can\u0027t we do something like that?\n\n    mbr_entry_t *tmp;\n    tmp \u003d (mbr_entry_t *) ((uintptr_t)\u0026mbr_sector + MBR_PRIMARY_ENTRY_OFFSET);\n\n    if (tmp-\u003efirst_lba !\u003d 1) // ...\n    if ((tmp-\u003esector_nums \u003d\u003d 0) || (tmp-\u003esector_nums \u003d\u003d UINT32_MAX)) // ...\n    \n    memcpy(mbr_entry, tmp, sizeof(mbr_entry_t));",
      "parentUuid": "a595d897_1c1a3bb7",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 86,
        "endChar": 2
      },
      "revId": "c698275b27f745f80a3cb2e6dc4b5745666fbcda",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5267103_77e8425b",
        "filename": "drivers/partition/partition.c",
        "patchSetId": 12
      },
      "lineNbr": 254,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-10-24T11:48:19Z",
      "side": 1,
      "message": "Don\u0027t we need to close the device in all error code paths from this point onward? e.g. at lines 258, 266, 274?",
      "revId": "c698275b27f745f80a3cb2e6dc4b5745666fbcda",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b10fba7a_df39e7b1",
        "filename": "drivers/partition/partition.c",
        "patchSetId": 12
      },
      "lineNbr": 254,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-10-24T11:55:15Z",
      "side": 1,
      "message": "Sorry, I missed your answer to this. I will look at the patch which takes care of that (https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/23504/4/drivers/partition/partition.c#366), please ignore my comment here.",
      "parentUuid": "b5267103_77e8425b",
      "revId": "c698275b27f745f80a3cb2e6dc4b5745666fbcda",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}