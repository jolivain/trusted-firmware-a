{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7262bf05_35728839",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2021-12-10T13:14:15Z",
      "side": 1,
      "message": "A question, somewhat related to discussion in a previous commit of the series.",
      "revId": "01bbd0f03661078f6e4f69f94e8aedbba80cd9e3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0bc1dc20_727626a9",
        "filename": "include/drivers/partition/partition.h",
        "patchSetId": 6
      },
      "lineNbr": 35,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2021-12-10T13:14:15Z",
      "side": 1,
      "message": "why not using type struct uuid; and uuid/uuid_efi types every where?\nIt would fix the memcmp() functions getting unsized u8 */void * ref to read out)",
      "revId": "01bbd0f03661078f6e4f69f94e8aedbba80cd9e3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c0545bf_b951a040",
        "filename": "include/drivers/partition/partition.h",
        "patchSetId": 6
      },
      "lineNbr": 35,
      "author": {
        "id": 1000661
      },
      "writtenOn": "2021-12-13T05:19:43Z",
      "side": 1,
      "message": "\u003e why not using type struct uuid; and uuid/uuid_efi types every where?\n\u003e It would fix the memcmp() functions getting unsized u8 */void * ref to read out)\n\nI can use that as well. I was just trying to be consistent with the way guid\u0027s/uuid\u0027s are declared as struct members. Like the ones declared in include/drivers/partition/gpt.h. Do you want me to change that?",
      "parentUuid": "0bc1dc20_727626a9",
      "revId": "01bbd0f03661078f6e4f69f94e8aedbba80cd9e3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5993d95f_ae9cc4c2",
        "filename": "include/drivers/partition/partition.h",
        "patchSetId": 6
      },
      "lineNbr": 35,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2021-12-13T07:22:15Z",
      "side": 1,
      "message": "Looking a GUID_LEN and where used, no impact outside fwu_metadata.h and drivers/partition/gpt.h:\n\n```patch:\n@@ -7,19 +7,20 @@ in include/drivers/partition/gpt.h\n #ifndef GPT_H\n #define GPT_H\n \n+#include \u003ctools_share/uuid.h\u003e\n+\n #include \u003cdrivers/partition/partition.h\u003e\n \n #define PARTITION_TYPE_GPT             0xee\n #define GPT_HEADER_OFFSET              PLAT_PARTITION_BLOCK_SIZE\n #define GPT_ENTRY_OFFSET               (GPT_HEADER_OFFSET +            \\\n                                         PLAT_PARTITION_BLOCK_SIZE)\n-#define GUID_LEN                       16\n \n #define GPT_SIGNATURE                  \"EFI PART\"\n \n typedef struct gpt_entry {\n-       unsigned char           type_uuid[GUID_LEN];\n-       unsigned char           unique_uuid[GUID_LEN];\n+       uuid_t                  type_uuid;\n+       uuid_t                  unique_uuid;\n        unsigned long long      first_lba;\n        unsigned long long      last_lba;\n        unsigned long long      attr;\n@@ -36,7 +37,7 @@ typedef struct gpt_header {\n        unsigned long long      backup_lba;\n        unsigned long long      first_lba;\n        unsigned long long      last_lba;\n-       unsigned char           disk_uuid[16];\n+       uuid_t                  disk_uuid;\n        /* starting LBA of array of partition entries */\n        unsigned long long      part_lba;\n        /* number of partition entries in array */\n```",
      "parentUuid": "2c0545bf_b951a040",
      "revId": "01bbd0f03661078f6e4f69f94e8aedbba80cd9e3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45080b4d_55ab43ae",
        "filename": "include/drivers/partition/partition.h",
        "patchSetId": 6
      },
      "lineNbr": 35,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2021-12-13T09:30:33Z",
      "side": 1,
      "message": "I prefer this approach as it looks more cleaner, and this can go as separate refactor patch.",
      "parentUuid": "5993d95f_ae9cc4c2",
      "revId": "01bbd0f03661078f6e4f69f94e8aedbba80cd9e3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}