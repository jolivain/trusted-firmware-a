{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "cde44010_b91f2757",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2024-01-24T15:27:13Z",
      "side": 1,
      "message": "IIUC the caller needs to know whether it is being called before the normal console has been setup in order to call the appropriate macro (EARLY_ERROR() or ERROR()). I imagine this could be problematic in some cases... There could be cases where we do not know? Can\u0027t we make it transparent to the caller instead? Could we always call ERROR() and let the framework figure out which variant to call?\n\nTBH I am struggling to understand what exactly this patch buys us... When I originally read the commit title, I thought we were introducing another type of console scope, along side the existing \u0027boot\u0027 and \u0027runtime\u0027 ones, but this is not the case. Could we not achieve the same result by:\n- having platform code initialize its boot console earlier;\n- calling ERROR()-like macros as usual\n?\n\nSorry, I think I am missing something, it would be great if you could help me understand better.",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 16,
        "endChar": 59
      },
      "revId": "c3c349a47501c4fc7455a2eafb3c9645afd07712",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c61c2c1_fa762f9a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2024-01-24T15:38:01Z",
      "side": 1,
      "message": "Hi Sandrine,\nThe main goal of these new macros, when I introduced them in plat/st, was for memory saving. There is no need to have strings in the binary that have no chance to be displayed, as they come before the console is initialized. They can only be displayed if an early debug console is configured.",
      "parentUuid": "cde44010_b91f2757",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 16,
        "endChar": 59
      },
      "revId": "c3c349a47501c4fc7455a2eafb3c9645afd07712",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "381d5c9c_f4ef7858",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2024-01-29T16:28:19Z",
      "side": 1,
      "message": "Hi Yann,\n\nThanks for explaining your use case. Still, thinking about alternative designs...\n\nFor platforms which have such an early console, could they simply reserve the `VERBOSE` log level for early prints? This way, these could be stripped out of the firmware by reducing the log level?\n\nAlternatively, could we introduce a new `EARLY` log level above `VERBOSE` for this? I realize the current version of the patch offers a variety of early console verbosities based on the log level - early error, early warning, early verbose, and so on - and we\u0027d lose this ability with my proposal... but is that flexibility really needed?",
      "parentUuid": "0c61c2c1_fa762f9a",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 16,
        "endChar": 59
      },
      "revId": "c3c349a47501c4fc7455a2eafb3c9645afd07712",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a40dd15e_1977dc7f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2024-01-29T17:30:03Z",
      "side": 1,
      "message": "Hi Sandrine,\n\nAfter checking our downstream code, I see that only EARLY_ERROR is used on ST platforms. Those were mainly to replace ERROR traces that couldn\u0027t be displayed but have some interest when debugging. I will update the series with 2 patches using that now that st-bsec patches are merged.\n\nUsing VERBOSE won\u0027t fit our case, we cannot enable globally VERBOSE traces, as the binaries become too big, they won\u0027t fit in memory. We mainly use it locally, adding this at the beginning of the file(s) we want to debug:\n #undef VERBOSE\n #define VERBOSE INFO\n\nAs we use the EARLY_ERROR, it is good if it can also be displayed when LOG_LEVEL\u003d20, which is the case if we want to debug a release build.\n\nSo for the moment we\u0027d only need EARLY_ERROR, I can then just add that macro?",
      "parentUuid": "381d5c9c_f4ef7858",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 16,
        "endChar": 59
      },
      "revId": "c3c349a47501c4fc7455a2eafb3c9645afd07712",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59b33702_b9174ba3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2024-01-30T12:25:50Z",
      "side": 1,
      "message": "Hi Yann,\n\n\u003e Using VERBOSE won\u0027t fit our case, we cannot enable globally VERBOSE traces, as the binaries become too big, they won\u0027t fit in memory.\n\nAh yes, I had not realized that, sorry. Then I agree that won\u0027t fly.\n\nOK, considering all of this I am fine with introducing just `EARLY_ERROR()`.",
      "parentUuid": "a40dd15e_1977dc7f",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 16,
        "endChar": 59
      },
      "revId": "c3c349a47501c4fc7455a2eafb3c9645afd07712",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2437b250_b0f72fe9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2024-01-30T12:48:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "59b33702_b9174ba3",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 16,
        "endChar": 59
      },
      "revId": "c3c349a47501c4fc7455a2eafb3c9645afd07712",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2566f6e3_e1103652",
        "filename": "include/common/debug.h",
        "patchSetId": 4
      },
      "lineNbr": 95,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2024-01-19T17:46:05Z",
      "side": 1,
      "message": "I seem to be overlooking the specific instances within the ST patch-stack where these macros are being utilized. Can you please point me out the patch that consumes such macros EARLY_*()?",
      "range": {
        "startLine": 95,
        "startChar": 8,
        "endLine": 95,
        "endChar": 19
      },
      "revId": "c3c349a47501c4fc7455a2eafb3c9645afd07712",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e2d4a729_1994afa2",
        "filename": "include/common/debug.h",
        "patchSetId": 4
      },
      "lineNbr": 95,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2024-01-22T08:42:08Z",
      "side": 1,
      "message": "Hi Manish, an example was there:\nhttps://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/25731\nBut as I had to split the series in 2, this won\u0027t merge properly.\nI\u0027ll re-push it when the 2 series (early console \u0026 BSEC) are merged",
      "parentUuid": "2566f6e3_e1103652",
      "range": {
        "startLine": 95,
        "startChar": 8,
        "endLine": 95,
        "endChar": 19
      },
      "revId": "c3c349a47501c4fc7455a2eafb3c9645afd07712",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eec7d55e_a17585c7",
        "filename": "include/common/debug.h",
        "patchSetId": 4
      },
      "lineNbr": 95,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2024-01-22T08:55:35Z",
      "side": 1,
      "message": "Or when 1 of the 2 series is merged, I can update the other one with the EARLY traces patches.",
      "parentUuid": "e2d4a729_1994afa2",
      "range": {
        "startLine": 95,
        "startChar": 8,
        "endLine": 95,
        "endChar": 19
      },
      "revId": "c3c349a47501c4fc7455a2eafb3c9645afd07712",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1fe54420_f30b6a89",
        "filename": "include/common/debug.h",
        "patchSetId": 4
      },
      "lineNbr": 95,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2024-01-22T09:17:16Z",
      "side": 1,
      "message": "Ack, thanks yann!",
      "parentUuid": "eec7d55e_a17585c7",
      "range": {
        "startLine": 95,
        "startChar": 8,
        "endLine": 95,
        "endChar": 19
      },
      "revId": "c3c349a47501c4fc7455a2eafb3c9645afd07712",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ec74319_022b67fc",
        "filename": "include/common/debug.h",
        "patchSetId": 4
      },
      "lineNbr": 101,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2024-01-24T15:27:13Z",
      "side": 1,
      "message": "Should these call `no_tf_log()` to at least enforce type checking on the arguments? (see comment at lines 51-53)",
      "range": {
        "startLine": 101,
        "startChar": 8,
        "endLine": 101,
        "endChar": 24
      },
      "revId": "c3c349a47501c4fc7455a2eafb3c9645afd07712",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c181574_5aee3f17",
        "filename": "include/common/debug.h",
        "patchSetId": 4
      },
      "lineNbr": 101,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2024-01-24T15:38:01Z",
      "side": 1,
      "message": "Yes that may be better, I\u0027ll test that",
      "parentUuid": "4ec74319_022b67fc",
      "range": {
        "startLine": 101,
        "startChar": 8,
        "endLine": 101,
        "endChar": 24
      },
      "revId": "c3c349a47501c4fc7455a2eafb3c9645afd07712",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b380e5d6_9e6c4f05",
        "filename": "include/common/debug.h",
        "patchSetId": 4
      },
      "lineNbr": 101,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2024-01-24T17:23:08Z",
      "side": 1,
      "message": "Test OK when adding `no_tf_log()`",
      "parentUuid": "4c181574_5aee3f17",
      "range": {
        "startLine": 101,
        "startChar": 8,
        "endLine": 101,
        "endChar": 24
      },
      "revId": "c3c349a47501c4fc7455a2eafb3c9645afd07712",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}