{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "162e7265_fb52af35",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 41
      },
      "lineNbr": 1517,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2024-07-23T15:34:28Z",
      "side": 0,
      "message": "Is it intentional to drop this conditional guard as part of this patch?",
      "range": {
        "startLine": 1517,
        "startChar": 0,
        "endLine": 1517,
        "endChar": 26
      },
      "revId": "df894089354df4613a77c7e83386a5263c8254ab",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e8b22912_323388f2",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 41
      },
      "lineNbr": 1517,
      "author": {
        "id": 1000660
      },
      "writtenOn": "2024-07-23T16:05:32Z",
      "side": 0,
      "message": "Yes. \nNow that we have explicit context entries for ERRATA_SPECULATIVE_AT macro, I don\u0027t want to have its dependency here.\n\nEL1 context regs ( SCTLR_EL1 and TCR_EL1) could be saved and restored independent of it.",
      "parentUuid": "162e7265_fb52af35",
      "range": {
        "startLine": 1517,
        "startChar": 0,
        "endLine": 1517,
        "endChar": 26
      },
      "revId": "df894089354df4613a77c7e83386a5263c8254ab",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "abc2e367_03cefce2",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 41
      },
      "lineNbr": 1517,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2024-07-23T16:42:45Z",
      "side": 0,
      "message": "Okay thanks for your response. What I wanted to ask is that, in the scenario where ERRATA_SPECULATIVE_AT\u003d1, wouldn\u0027t we be saving/restoring these two registers twice? Once in bl31 exception handler and once again as part of context management here.",
      "parentUuid": "e8b22912_323388f2",
      "range": {
        "startLine": 1517,
        "startChar": 0,
        "endLine": 1517,
        "endChar": 26
      },
      "revId": "df894089354df4613a77c7e83386a5263c8254ab",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5714edff_0c3603c3",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 41
      },
      "lineNbr": 1517,
      "author": {
        "id": 1000660
      },
      "writtenOn": "2024-07-24T08:06:11Z",
      "side": 0,
      "message": "Yes you are correct. Its saved and restored twice in that scenario. But at separate context entries.\nThanks for highlighting this part.\nJust to make sure other reviewers are also in sync, this has been discussed upfront and then agreed on it.\n\nReason behind it is:\n\"Out of all the EL1 registers which we have as part of EL1_context, SCTLR_EL1 and TCR_EL1, were exceptional ones and they were getting used as part of ERRATA_SPECULATIVE_AT macro. All other EL1 registers were only saved and restored\nduring world switch.\n\nSo mainly in order to decouple EL1 and EL2 registers this was required.\nI tried few other approaches in the initial phase, (kindly have a look at the previous version of my patches https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/29210/6), which would fail for build configs, with Errata enabled and when only EL2 context gets saved and restored or with no EL1 context.\n\nLater on after discussing with Manish B and Manish P, we agreed to take this approach as we need these registers irrespective of EL1 and EL2 context registers getting saved/restored according to build config.\n\nNow we have explicit entries for the Errata and EL1 registers and this paved way for decoupling.\n\n```\n#if ERRATA_SPECULATIVE_AT\n#define CTX_ERRATA_SPEC_AT_SCTLR_EL1\tU(0x0)\n#define CTX_ERRATA_SPEC_AT_TCR_EL1\tU(0x8)\n#define CTX_ERRATA_SPEC_AT_END\t\tU(0x10)\n```\n\nand \n```\ntypedef struct el1_common_regs {\n\tuint64_t elr_el1;\n\tuint64_t sctlr_el1;\n\t}\n```\nI believe its good to not tie the registers under el1_context structure again to Errata flag. Leaving them as separate entites would be neat and easy to follow up.\nHope this helps. Let me know your thoughts on this.\nThanks!",
      "parentUuid": "abc2e367_03cefce2",
      "range": {
        "startLine": 1517,
        "startChar": 0,
        "endLine": 1517,
        "endChar": 26
      },
      "revId": "df894089354df4613a77c7e83386a5263c8254ab",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c132717_163e6910",
        "filename": "lib/el3_runtime/aarch64/context_mgmt.c",
        "patchSetId": 41
      },
      "lineNbr": 1517,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2024-07-24T17:24:34Z",
      "side": 0,
      "message": "I agree with your approach. Thanks for the detailed explanation.",
      "parentUuid": "5714edff_0c3603c3",
      "range": {
        "startLine": 1517,
        "startChar": 0,
        "endLine": 1517,
        "endChar": 26
      },
      "revId": "df894089354df4613a77c7e83386a5263c8254ab",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}