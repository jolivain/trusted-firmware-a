{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "19491486_f7452888",
        "filename": "lib/fconf/fconf_dyn_cfg_getter.c",
        "patchSetId": 3
      },
      "lineNbr": 134,
      "author": {
        "id": 1000750
      },
      "writtenOn": "2022-04-05T22:33:57Z",
      "side": 1,
      "message": "Shouldn\u0027t set_config_info() accept the new optional property?\n\nWhat I see is that the FCONF_GET_PROPERTY() call goes through all the dyn_cfg_dtb_info_t* objects to find the one matches config_id, which can cause some inefficiencies, especially because the same object is accessed a few lines above (133). I would suggest adding the new optional property to set_config_info(). In case it is not possible/reasonable, maybe making set_config_info() return the accessed dyn_cfg_dtb_info_t* object and then set ns_config_addr is an alternative solution.",
      "revId": "5bf5db7bca6660634ab45ab5c7bd03ade38ecd68",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f10dc24f_39ab6292",
        "filename": "lib/fconf/fconf_dyn_cfg_getter.c",
        "patchSetId": 3
      },
      "lineNbr": 134,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2022-04-06T07:07:01Z",
      "side": 1,
      "message": "Hi Juan,\n\nI have considered both scenarios what you mentioned, but have not implemented them because of the following reasons -\n\n1. A new input parameter in \u0027set_config_info\u0027 may not work since \u0027ns-load-address\u0027 is only intended for the HW_COFIG device tree.\n2. \u0027set_config_info\u0027 can return dyn_cfg_dtb_info_t*, however this function gets called from a few places where such a return is not necessary.\n\nAs getting the ns-config address of HW_CONFIG is a one-off task, and this function is only called during the boot, re-finding the same object may not add much overhead IMO. Even though I am happy to take the later approach (e.g. to return dyn_cfg_dtb_info_t*) if everyone agrees.",
      "parentUuid": "19491486_f7452888",
      "revId": "5bf5db7bca6660634ab45ab5c7bd03ade38ecd68",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23e8b105_3f663d21",
        "filename": "lib/fconf/fconf_dyn_cfg_getter.c",
        "patchSetId": 3
      },
      "lineNbr": 134,
      "author": {
        "id": 1000744
      },
      "writtenOn": "2022-04-06T11:45:26Z",
      "side": 1,
      "message": "To add to Juan\u0027s comment, from what I can see the ns-load-address property is retrieved but never actually stored. My assumption is that we have to set the configuration information in the registry after retrieving the new property, otherwise the code below simply prints ns-load-address but has no other effect.",
      "parentUuid": "f10dc24f_39ab6292",
      "revId": "5bf5db7bca6660634ab45ab5c7bd03ade38ecd68",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1dbe9cc_2b7c05f6",
        "filename": "lib/fconf/fconf_dyn_cfg_getter.c",
        "patchSetId": 3
      },
      "lineNbr": 134,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2022-04-06T11:53:50Z",
      "side": 1,
      "message": "It gets stored at line no.146 and then printed at line no.147.",
      "parentUuid": "23e8b105_3f663d21",
      "revId": "5bf5db7bca6660634ab45ab5c7bd03ade38ecd68",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1382116e_304052a0",
        "filename": "lib/fconf/fconf_dyn_cfg_getter.c",
        "patchSetId": 3
      },
      "lineNbr": 134,
      "author": {
        "id": 1000744
      },
      "writtenOn": "2022-04-06T12:05:22Z",
      "side": 1,
      "message": "I might be mistaken, so feel free to correct me if i\u0027m missing something but it looks to me that at line 146 you set the local variable hw_config_dtb_info but don\u0027t actually do anything with it besides print the value you stored in it.\n\nOnce the function goes out of scope, wouldn\u0027t this variable be destroyed? I can see that at line 133 we actually call set_config_info, which allocates memory and stores the information in the registry.",
      "parentUuid": "d1dbe9cc_2b7c05f6",
      "revId": "5bf5db7bca6660634ab45ab5c7bd03ade38ecd68",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a26d5d6d_954e28b4",
        "filename": "lib/fconf/fconf_dyn_cfg_getter.c",
        "patchSetId": 3
      },
      "lineNbr": 134,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2022-04-06T12:57:59Z",
      "side": 1,
      "message": "hw_config_dtb_info variable only serves to retrieve the global address of the structure from the array of structures i.e. dtb_infos (see line no.25), and to set the specific member of that structure (i.e. ns_config_addr) hence we don\u0027t bother if it gets destroyed when function goes out of the scope.",
      "parentUuid": "1382116e_304052a0",
      "revId": "5bf5db7bca6660634ab45ab5c7bd03ade38ecd68",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb06e330_06758e39",
        "filename": "lib/fconf/fconf_dyn_cfg_getter.c",
        "patchSetId": 3
      },
      "lineNbr": 134,
      "author": {
        "id": 1000750
      },
      "writtenOn": "2022-04-06T16:28:41Z",
      "side": 1,
      "message": "Yeah. I would like someone else to agree on returning the dyn_cfg_dtb_info_t* object, as the set_config_info() function is used to set, not to retrieve, so it would be a little contradictory, conceptually speaking. I wouldn\u0027t harm retrieving the object though. \n\nIf that is not reasonable and if there is not much overhead on finding the object, maybe it can be kept as it is.",
      "parentUuid": "a26d5d6d_954e28b4",
      "revId": "5bf5db7bca6660634ab45ab5c7bd03ade38ecd68",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b568c2f_43ab26fb",
        "filename": "lib/fconf/fconf_dyn_cfg_getter.c",
        "patchSetId": 3
      },
      "lineNbr": 134,
      "author": {
        "id": 1000744
      },
      "writtenOn": "2022-04-11T13:55:15Z",
      "side": 1,
      "message": "Ack Manish - thanks! I missed the fact FCONF_GET_PROPERTY was returning a reference to the entry in the global registry.\n\n+1 for Juan\u0027s suggestion. Although other call locations wouldn\u0027t utilize the return, my guess is the compiler would optimize these out for us anyway.",
      "parentUuid": "fb06e330_06758e39",
      "revId": "5bf5db7bca6660634ab45ab5c7bd03ade38ecd68",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03866ae7_5ba21f52",
        "filename": "lib/fconf/fconf_dyn_cfg_getter.c",
        "patchSetId": 3
      },
      "lineNbr": 134,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2022-04-11T14:25:52Z",
      "side": 1,
      "message": "I still think, let\u0027s not change arguably the meaning of this function: set_config_info which is mainly used to set the parameters rather than retrieving anything. \nAs mentioned earlier, finding the object again is not much overhead. I will keep this as it is for now unless someone else not fine with approach.",
      "parentUuid": "0b568c2f_43ab26fb",
      "revId": "5bf5db7bca6660634ab45ab5c7bd03ade38ecd68",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}