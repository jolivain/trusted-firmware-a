{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "470cf05a_7e1800a7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 34
      },
      "lineNbr": 0,
      "author": {
        "id": 1000467
      },
      "writtenOn": "2022-05-06T16:57:58Z",
      "side": 1,
      "message": "I feel like this patch could be squashed with the previous one since they are both small and related to rxtx buffers. No worries if you\u0027d prefer to keep them separate though",
      "revId": "317ab2f22a0280f1272655f261b5133642bedd37",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1472596d_505ad16d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 34
      },
      "lineNbr": 0,
      "author": {
        "id": 1000290
      },
      "writtenOn": "2022-05-10T10:44:58Z",
      "side": 1,
      "message": "Sure happy to squash some patches if that is preferred, however just to check which other patch did you mean? The preceding patch to this one looks like it is a FFA version helper as opposed to rxtx buffers?",
      "parentUuid": "470cf05a_7e1800a7",
      "revId": "317ab2f22a0280f1272655f261b5133642bedd37",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec080ce4_9a9b6832",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 34
      },
      "lineNbr": 0,
      "author": {
        "id": 1000467
      },
      "writtenOn": "2022-05-10T13:22:34Z",
      "side": 1,
      "message": "Sorry ignore me, I\u0027m not sure which patch I was referring to",
      "parentUuid": "1472596d_505ad16d",
      "revId": "317ab2f22a0280f1272655f261b5133642bedd37",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0236139e_f0a1f614",
        "filename": "services/std_svc/spm/el3_spmc/spmc_main.c",
        "patchSetId": 34
      },
      "lineNbr": 605,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2022-05-09T09:58:41Z",
      "side": 1,
      "message": "Should there be a (platform?) check on RX/TX buffer addresses that they\u0027re bound to the partition space?\ne.g. presently a SP may map RX/TX buffers anywhere in the system address map?",
      "revId": "317ab2f22a0280f1272655f261b5133642bedd37",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "812c4ef9_decf84cc",
        "filename": "services/std_svc/spm/el3_spmc/spmc_main.c",
        "patchSetId": 34
      },
      "lineNbr": 605,
      "author": {
        "id": 1000290
      },
      "writtenOn": "2022-05-10T10:44:58Z",
      "side": 1,
      "message": "That is a good point and there is a similar TODO for validating the secondary entrypoint as well so perhaps these could be combined somehow? A you mention I expect that it would need to be something platform specific as I\u0027m not aware of a simple way to determine what the valid partition would be.\n\nWhat do you think?",
      "parentUuid": "0236139e_f0a1f614",
      "revId": "317ab2f22a0280f1272655f261b5133642bedd37",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2333d12_e8a8b4b7",
        "filename": "services/std_svc/spm/el3_spmc/spmc_main.c",
        "patchSetId": 34
      },
      "lineNbr": 610,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2022-05-09T09:58:41Z",
      "side": 1,
      "message": "Isn\u0027t it implicit per line 588?",
      "revId": "317ab2f22a0280f1272655f261b5133642bedd37",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "51eb4a8b_baf772a1",
        "filename": "services/std_svc/spm/el3_spmc/spmc_main.c",
        "patchSetId": 34
      },
      "lineNbr": 610,
      "author": {
        "id": 1000290
      },
      "writtenOn": "2022-05-10T10:44:58Z",
      "side": 1,
      "message": "That would make sense, the original motivation behind this check was in the case of mismatching page sizes between FF-A and TF-A however IIUC any page size that TF-A uses will in fact be a multiple of 4K and therefore this check is redundant?",
      "parentUuid": "a2333d12_e8a8b4b7",
      "revId": "317ab2f22a0280f1272655f261b5133642bedd37",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "862dc195_63aabe8d",
        "filename": "services/std_svc/spm/el3_spmc/spmc_main.c",
        "patchSetId": 34
      },
      "lineNbr": 632,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2022-05-09T09:58:41Z",
      "side": 1,
      "message": "For a SP, shouldn\u0027t the TX buffer be RW?",
      "range": {
        "startLine": 632,
        "startChar": 14,
        "endLine": 632,
        "endChar": 24
      },
      "revId": "317ab2f22a0280f1272655f261b5133642bedd37",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f08a331e_8d52d9e3",
        "filename": "services/std_svc/spm/el3_spmc/spmc_main.c",
        "patchSetId": 34
      },
      "lineNbr": 632,
      "author": {
        "id": 1000290
      },
      "writtenOn": "2022-05-10T10:44:58Z",
      "side": 1,
      "message": "We are mapping the TX buffer into the SPMC which should only be consuming data populated by the SP and therefore we should not require write access?",
      "parentUuid": "862dc195_63aabe8d",
      "range": {
        "startLine": 632,
        "startChar": 14,
        "endLine": 632,
        "endChar": 24
      },
      "revId": "317ab2f22a0280f1272655f261b5133642bedd37",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7b7eee2_943f9a0b",
        "filename": "services/std_svc/spm/el3_spmc/spmc_main.c",
        "patchSetId": 34
      },
      "lineNbr": 678,
      "author": {
        "id": 1000467
      },
      "writtenOn": "2022-05-06T16:57:58Z",
      "side": 1,
      "message": "Should this be secure_origin?",
      "range": {
        "startLine": 678,
        "startChar": 43,
        "endLine": 678,
        "endChar": 48
      },
      "revId": "317ab2f22a0280f1272655f261b5133642bedd37",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b259c2fd_91b4b846",
        "filename": "services/std_svc/spm/el3_spmc/spmc_main.c",
        "patchSetId": 34
      },
      "lineNbr": 678,
      "author": {
        "id": 1000290
      },
      "writtenOn": "2022-05-10T10:44:58Z",
      "side": 1,
      "message": "Yes it should, thanks for spotting.",
      "parentUuid": "d7b7eee2_943f9a0b",
      "range": {
        "startLine": 678,
        "startChar": 43,
        "endLine": 678,
        "endChar": 48
      },
      "revId": "317ab2f22a0280f1272655f261b5133642bedd37",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a18099e5_01653615",
        "filename": "services/std_svc/spm/el3_spmc/spmc_main.c",
        "patchSetId": 34
      },
      "lineNbr": 686,
      "author": {
        "id": 1000467
      },
      "writtenOn": "2022-05-06T16:57:58Z",
      "side": 1,
      "message": "I think it would be better to use FFA_NWD_ID here",
      "range": {
        "startLine": 686,
        "startChar": 11,
        "endLine": 686,
        "endChar": 12
      },
      "revId": "317ab2f22a0280f1272655f261b5133642bedd37",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36611a43_a291dac1",
        "filename": "services/std_svc/spm/el3_spmc/spmc_main.c",
        "patchSetId": 34
      },
      "lineNbr": 686,
      "author": {
        "id": 1000290
      },
      "writtenOn": "2022-05-10T10:44:58Z",
      "side": 1,
      "message": "This parameter should only be a non zero value if it is called from the normal world on behalf of a VM (the scenario we don\u0027t support), in any other case e.g. from the HYP or from an SP, then this parameter MBZ. Therefore I don\u0027t think using FFA_NWD_ID aligns with the use case here.\n\nDoes that seem reasonable? \n\n(Although I\u0027ve updated this check to be !\u003d 0UL in any case.)",
      "parentUuid": "a18099e5_01653615",
      "range": {
        "startLine": 686,
        "startChar": 11,
        "endLine": 686,
        "endChar": 12
      },
      "revId": "317ab2f22a0280f1272655f261b5133642bedd37",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d3640a65_748a46d0",
        "filename": "services/std_svc/spm/el3_spmc/spmc_main.c",
        "patchSetId": 34
      },
      "lineNbr": 686,
      "author": {
        "id": 1000467
      },
      "writtenOn": "2022-05-10T13:22:34Z",
      "side": 1,
      "message": "Ok, thanks for explaining. In which case this seems fine",
      "parentUuid": "36611a43_a291dac1",
      "range": {
        "startLine": 686,
        "startChar": 11,
        "endLine": 686,
        "endChar": 12
      },
      "revId": "317ab2f22a0280f1272655f261b5133642bedd37",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}