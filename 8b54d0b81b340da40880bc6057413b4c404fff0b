{
  "comments": [
    {
      "key": {
        "uuid": "56a95305_52279eaf",
        "filename": "plat/mediatek/common/params_setup.c",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 1000133
      },
      "writtenOn": "2019-05-03T14:32:15Z",
      "side": 1,
      "message": "2019",
      "range": {
        "startLine": 2,
        "startChar": 17,
        "endLine": 2,
        "endChar": 21
      },
      "revId": "8b54d0b81b340da40880bc6057413b4c404fff0b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0cdd3d72_8f36199c",
        "filename": "plat/mediatek/common/params_setup.c",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2019-05-07T11:12:07Z",
      "side": 1,
      "message": "just a suggestion for future enhancement, the information can be passed via a dynamic config file from BL2. If you use DTB for the dynamic config, then it is matter of adding a property in the node for this.",
      "range": {
        "startLine": 23,
        "startChar": 39,
        "endLine": 23,
        "endChar": 58
      },
      "revId": "8b54d0b81b340da40880bc6057413b4c404fff0b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a2c293fd_e200075f",
        "filename": "plat/mediatek/common/params_setup.c",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1000060
      },
      "writtenOn": "2019-05-07T22:52:35Z",
      "side": 1,
      "message": "According to my understanding of your dynamic configuration concept, this is essentially already implementing that, right? This list is passed in arg1 during the BL2-\u003eBL31 handoff, so it takes the spot of what you call SOC_FW_CONFIG. It\u0027s just not an FDT.\n\nI do however agree that something needs to be done here long term, because copy\u0026pasting this function around between platforms all the time isn\u0027t great. But I\u0027m not really convinced FDT is the answer. It\u0027s a very heavy data structure with a heavy library to parse it, and all this needs to run before MMU and caching are enabled (at least if we want dynamically configured consoles available early enough to debug MMU initialization). I think for Chrome OS, with the relatively small amount of info we want to pass and our aggressive boot time goals, FDT just isn\u0027t a good fit here.\n\nI think this list approach has a few nice properties (e.g. easily extensible and robust to adding/omitting individual parameters) and it would be nice to standardize the platforms that don\u0027t want to use FDT around it. I already tried to do that in https://github.com/ARM-software/arm-trusted-firmware/pull/989#discussion_r126469404 but Dan didn\u0027t want to take it back then in order to wait until your dynamic configuration work was finished. So we added it to plat/rockchip, and are now copy\u0026pasting the same into plat/mediatek and probably soon plat/qti. We could still revert course and unify those platforms if you\u0027re okay with that... it would just be a small, optional helper library in plat/common that platforms can link in if they want to.\n\nAnother option would be to forget about the list and just have every platform define a simple bl31_plat_params structure with exactly the fields it needs. That would be the most simple and bare-bones approach. It makes it a little harder to support downwards-compatbility when adding new parameters, but with careful use of size and version fields it should be possible (and in practice I think we haven\u0027t often had a need to add parameters after the initial bring-up of the platform port had finished). It also means that you can\u0027t have support for \"generic\" parameters that work across all platforms, but for now we\u0027ve only had one of those (coreboot table pointer) and I don\u0027t really see a need for more on the horizon.",
      "parentUuid": "0cdd3d72_8f36199c",
      "range": {
        "startLine": 23,
        "startChar": 39,
        "endLine": 23,
        "endChar": 58
      },
      "revId": "8b54d0b81b340da40880bc6057413b4c404fff0b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a84425fa_3e566f27",
        "filename": "plat/mediatek/common/params_setup.c",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2019-05-08T12:42:47Z",
      "side": 1,
      "message": "\u003e This list is passed in arg1 during the BL2-\u003eBL31 handoff, so it takes the spot of what you call SOC_FW_CONFIG. . It\u0027s just not an FDT.\n\nThat\u0027s right. The config can be any data structure but FDT is the format used by ARM reference platforms and the preferred one.\n\nNot all information can be populated in the FDT as you mention. The early console is one such info.\n\nThe idea of dynamic config is that it is separate from the BL image thus enabling the config file to be updated without changing the BL image. Is that the case here ?\n\nWe have found that just utilizing the read functions in libfdt has minimal impact on code size. We have not measured the boot time impact due to use of libfdt.\n\nOn ARM reference platforms, arg0 is plat specific data, arg1 is SOC_FW_CONFIG, arg2 is HW_CONFIG, and arg3 is a magic number for validity check.\n\nIt is a platform choice what arguments to pass from BL2 and the format of config file (or whether to use a config at all). Perhaps the information that is currently passed in `plat_param_from_bl2` is better in the current list (It seems to have only some GPIO config and console info).\n\nThe future enhancements that are planned for BL31 may rely on additional info being passed via config files (eg: Secure partition resource descriptions etc).  In that case, the config file can be an additional argument to the existing argument list for the core boot platforms. \n\nDoes that sound reasonable ?\n\n\u003e it would be nice to standardize the platforms that don\u0027t want to use FDT around it. I already tried to do that in\n\nThe thinking on dynamic configuration has evolved from the initial concept I think. I think it is alright for platforms to have custom data structures to be passed between BL images but as long as there is scope for additional config files to be passed which may define properties used by generic BL31 code.\n\nRegarding the current state of this code in platforms, I think it makes sense to define a common utility for this which platforms can pull in instead of copying code across.\n\n\u003e Another option would be to forget about the list and just have every platform define a simple bl31_plat_params structure with exactly the fields it needs.\n\nI prefer the list approach you have taken.",
      "parentUuid": "a2c293fd_e200075f",
      "range": {
        "startLine": 23,
        "startChar": 39,
        "endLine": 23,
        "endChar": 58
      },
      "revId": "8b54d0b81b340da40880bc6057413b4c404fff0b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "93571381_3d5078af",
        "filename": "plat/mediatek/common/params_setup.h",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1000133
      },
      "writtenOn": "2019-05-03T14:32:15Z",
      "side": 1,
      "message": "#endif  /* PARAMS_SETUP_H */",
      "revId": "8b54d0b81b340da40880bc6057413b4c404fff0b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36c3df88_6404d49e",
        "filename": "plat/mediatek/common/plat_params.h",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 1000133
      },
      "writtenOn": "2019-05-03T14:32:15Z",
      "side": 1,
      "message": "2019",
      "revId": "8b54d0b81b340da40880bc6057413b4c404fff0b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e0d7f8b_ed8716eb",
        "filename": "plat/mediatek/common/plat_params.h",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1000133
      },
      "writtenOn": "2019-05-03T14:32:15Z",
      "side": 1,
      "message": "#endif  /* PLAT_PARAMS_H */",
      "revId": "8b54d0b81b340da40880bc6057413b4c404fff0b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9a65851_42d4e52b",
        "filename": "plat/mediatek/mt8183/bl31_plat_setup.c",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 1000133
      },
      "writtenOn": "2019-05-03T14:32:15Z",
      "side": 1,
      "message": "(void *)arg1;",
      "range": {
        "startLine": 72,
        "startChar": 30,
        "endLine": 72,
        "endChar": 44
      },
      "revId": "8b54d0b81b340da40880bc6057413b4c404fff0b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    }
  ]
}