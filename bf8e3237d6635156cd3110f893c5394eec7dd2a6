{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ec019fc2_02090fd1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2022-06-13T08:19:39Z",
      "side": 1,
      "message": "Hi Manish,\n\nGood catch!\n\nHow did you find this bug? By manual inspection? Could we implement a regression test for this bug? Can you think about a programmatic way to exercise this bug?",
      "revId": "bf8e3237d6635156cd3110f893c5394eec7dd2a6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41652e42_bfdd5d30",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2022-06-13T08:54:12Z",
      "side": 1,
      "message": "\u003e Hi Manish,\n\u003e \n\u003e Good catch!\n\u003e \n\u003e How did you find this bug? By manual inspection? \nHi Sandrine,\nI found this bug by manual inspection.\n\n\u003e Could we implement a regression test for this bug? Can you think about a programmatic way to exercise this bug?\n\nThere is a possibility that some platform by mistake initialise the end of the Event Log lesser than  (event_log_start + ID_EVENT_SIZE + LOC_EVENT_SIZE) so added assert help to resolve that.\n\nAlso, I don\u0027t think a regression test is needed for a digest array where its size was provided less than it should have been during clearing. As such, it was not a major bug, since the size was smaller than the required one and no adjacent data was corrupted. The fix ensures that the Digest array has been cleared properly (with the required size) before being updated. Please let me know if you still think regression test needed here.",
      "parentUuid": "ec019fc2_02090fd1",
      "revId": "bf8e3237d6635156cd3110f893c5394eec7dd2a6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0968f480_95ff9684",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2022-06-14T12:27:18Z",
      "side": 1,
      "message": "\u003e There is a possibility that some platform by mistake initialise the end of the Event Log lesser than  (event_log_start + ID_EVENT_SIZE + LOC_EVENT_SIZE) so added assert help to resolve that.\n\nAck. I understand that part.\n \n\u003e Also, I don\u0027t think a regression test is needed for a digest array where its size was provided less than it should have been during clearing. As such, it was not a major bug, since the size was smaller than the required one and no adjacent data was corrupted. The fix ensures that the Digest array has been cleared properly (with the required size) before being updated. Please let me know if you still think regression test needed here.\n\nRight, so the memset() call was only partially clearing the digest field in the TCG_PCR_EVENT2 structure. That\u0027s because TPM_ALG_ID equals to 12/13/14 and TCG_DIGEST_SIZE equals to 32/48/64 (depending on the hash algorithm). I agree that this rules out corruption of adjacent data. What\u0027s not clear to me is the consequences of not clearing the whole digest array... What does the TCG spec says about that?",
      "parentUuid": "41652e42_bfdd5d30",
      "revId": "bf8e3237d6635156cd3110f893c5394eec7dd2a6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f1f7bcc_018c6281",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2022-06-14T13:32:10Z",
      "side": 1,
      "message": "\u003e \u003e There is a possibility that some platform by mistake initialise the end of the Event Log lesser than  (event_log_start + ID_EVENT_SIZE + LOC_EVENT_SIZE) so added assert help to resolve that.\n\u003e \n\u003e Ack. I understand that part.\n\u003e  \n\u003e \u003e Also, I don\u0027t think a regression test is needed for a digest array where its size was provided less than it should have been during clearing. As such, it was not a major bug, since the size was smaller than the required one and no adjacent data was corrupted. The fix ensures that the Digest array has been cleared properly (with the required size) before being updated. Please let me know if you still think regression test needed here.\n\u003e \n\u003e Right, so the memset() call was only partially clearing the digest field in the TCG_PCR_EVENT2 structure. That\u0027s because TPM_ALG_ID equals to 12/13/14 and TCG_DIGEST_SIZE equals to 32/48/64 (depending on the hash algorithm). I agree that this rules out corruption of adjacent data. What\u0027s not clear to me is the consequences of not clearing the whole digest array... What does the TCG spec says about that?\n\nAccording to the specification, \"all EV_NO_ACTION events shall set TCG_PCR_EVENT2.digests to all 0x00\u0027s for each allocated Hash algorithm. See Section 10.2.2 TCG_PCR_EVENT2 Structure.\", but I did not receive a clear statement on what will happen if the entire digest array does not get cleared.\nThe startup locality event type is EV_NO_ACTION, so clearing the whole digest array is still necessary as per the specification.",
      "parentUuid": "0968f480_95ff9684",
      "revId": "bf8e3237d6635156cd3110f893c5394eec7dd2a6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39ec87eb_235279c7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2022-06-15T08:37:14Z",
      "side": 1,
      "message": "OK thanks Manish, I think some of the information above would be useful in the commit message. Perhaps something along these lines:\n\n fix(measured-boot): clear the entire digest array of Startup Locality event\n\n According to TCG PC Client Platform Firmware Profile Specification\n (Section 10.2.2, TCG_PCR_EVENT2 Structure), all EV_NO_ACTION events\n shall set TCG_PCR_EVENT2.digests to all 0x00\u0027s for each allocated Hash\n algorithm.\n\n Right now, this is not enforced. Only part of the buffer is zeroed due\n to the wrong macro being used for the size of the buffer in the clearing\n operation (TPM_ALG_ID instead of TCG_DIGEST_SIZE). This could confuse\n a TPM event log parser.\n\n Also add an assertion to ensure that the Event Log size is large enough\n before writing the Event Log header.",
      "parentUuid": "2f1f7bcc_018c6281",
      "revId": "bf8e3237d6635156cd3110f893c5394eec7dd2a6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b9e42dc4_88eca3fc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2022-06-10T12:20:46Z",
      "side": 1,
      "message": "Failures do not seem to be related to this patch. Hence manually provided Verified+1.",
      "revId": "bf8e3237d6635156cd3110f893c5394eec7dd2a6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "083043fb_88bffc03",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2022-06-10T14:18:40Z",
      "side": 1,
      "message": "Open-CI failures are mainly due to the \u0027curl\u0027 failures, and not because of this patch. ",
      "revId": "bf8e3237d6635156cd3110f893c5394eec7dd2a6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}