{
  "comments": [
    {
      "key": {
        "uuid": "b00971ee_5962271b",
        "filename": "plat/arm/board/arm_fpga/aarch64/fpga_helpers.S",
        "patchSetId": 13
      },
      "lineNbr": 69,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2020-07-02T08:46:51Z",
      "side": 1,
      "message": "Which affinity level is this about? max_cpu suggests it\u0027s Aff1, so shouldn\u0027t this be x1 then?",
      "revId": "aa874f59f8817b38bb49c34477d9ca8c75ed0b7c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5058f186_ff03b441",
        "filename": "plat/arm/board/arm_fpga/aarch64/fpga_helpers.S",
        "patchSetId": 13
      },
      "lineNbr": 71,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2020-07-02T08:46:51Z",
      "side": 1,
      "message": "Why do you add 1 to the current value here? Shouldn\u0027t you just write the current value (x0/x1)?",
      "revId": "aa874f59f8817b38bb49c34477d9ca8c75ed0b7c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7bf21e7_f5a38e0c",
        "filename": "plat/arm/board/arm_fpga/aarch64/fpga_helpers.S",
        "patchSetId": 13
      },
      "lineNbr": 82,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2020-07-02T08:46:51Z",
      "side": 1,
      "message": "Related to the comment above, I think this should be x0 then.",
      "revId": "aa874f59f8817b38bb49c34477d9ca8c75ed0b7c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48355d84_669ba9bd",
        "filename": "plat/arm/board/arm_fpga/aarch64/fpga_helpers.S",
        "patchSetId": 13
      },
      "lineNbr": 126,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2020-07-02T08:46:51Z",
      "side": 1,
      "message": "Still having the dmb here looks awkward. What is the memory operation after this barrier that we want to force an order on? Can you add a comment here explaining that?",
      "revId": "aa874f59f8817b38bb49c34477d9ca8c75ed0b7c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2517b99_a55a298b",
        "filename": "plat/arm/board/arm_fpga/aarch64/fpga_helpers.S",
        "patchSetId": 13
      },
      "lineNbr": 136,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2020-07-02T08:46:51Z",
      "side": 1,
      "message": "Do we need this function? Wouldn\u0027t it be easier to generate the MPIDR value once, then explicitly use the respective ubfx instead of each call? It looks a bit awkward to have that function always called with a constant argument, then having basically a switch/case statement in the implementation below.",
      "revId": "aa874f59f8817b38bb49c34477d9ca8c75ed0b7c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c79d9dc_314fccb1",
        "filename": "plat/arm/board/arm_fpga/fpga_bl31_setup.c",
        "patchSetId": 13
      },
      "lineNbr": 46,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2020-07-02T08:46:51Z",
      "side": 1,
      "message": "Again, what is the memory operation that you want to order against? If you want to make sure the sev() isn\u0027t called before, you will probably need a DSB instead.",
      "revId": "aa874f59f8817b38bb49c34477d9ca8c75ed0b7c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    }
  ]
}