{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "83263f40_14ab990b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000792
      },
      "writtenOn": "2022-11-08T20:11:30Z",
      "side": 1,
      "message": "added `CONDITIONAL_CMO` compile time switch as Dan suggested on mailing list. PTAL",
      "revId": "0a430bfdf067a1bddf42723e5ce25e3a90d52a30",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd55efdc_f0f2d676",
        "filename": "plat/common/aarch32/platform_helpers.S",
        "patchSetId": 5
      },
      "lineNbr": 18,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2022-11-09T15:51:20Z",
      "side": 1,
      "message": "Hi Okash,\nNow that there is a compile flag, and plat_can_cmo is only called under this flag, is this weak function still required? A platform enabling the flag will have to create its own function anyway? (Same for next file)",
      "revId": "0a430bfdf067a1bddf42723e5ce25e3a90d52a30",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6146d8bd_e473af5a",
        "filename": "plat/common/aarch32/platform_helpers.S",
        "patchSetId": 5
      },
      "lineNbr": 18,
      "author": {
        "id": 1000792
      },
      "writtenOn": "2022-11-09T17:11:06Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "bd55efdc_f0f2d676",
      "revId": "0a430bfdf067a1bddf42723e5ce25e3a90d52a30",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1293ce4a_b0235a52",
        "filename": "plat/common/aarch32/platform_helpers.S",
        "patchSetId": 5
      },
      "lineNbr": 18,
      "author": {
        "id": 1000096
      },
      "writtenOn": "2022-11-09T17:50:55Z",
      "side": 1,
      "message": "+1 to this comment",
      "parentUuid": "bd55efdc_f0f2d676",
      "revId": "0a430bfdf067a1bddf42723e5ce25e3a90d52a30",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b0dfe43_3dfaf19c",
        "filename": "plat/common/aarch32/platform_helpers.S",
        "patchSetId": 5
      },
      "lineNbr": 98,
      "author": {
        "id": 1000096
      },
      "writtenOn": "2022-11-09T17:50:55Z",
      "side": 1,
      "message": "This function should be documented in docs/getting_started/porting-guide.rst. In particular it\u0027s important to highlight the additional restrictions over and above the Procedure Call Standard, i.e. the additional callee-saved registers (x2, x3). I also thinks it\u0027s not safe to use the stack in this function as this may be called before/after caches are enabled/disabled.",
      "revId": "0a430bfdf067a1bddf42723e5ce25e3a90d52a30",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}