{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "98809bb9_2470d06b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2021-08-16T20:00:23Z",
      "side": 1,
      "message": "Hi Varun, I tend to agree to make this all runtime checks (after all this is    \nhow it\u0027s architected in the GIC spec), but last time I tried something\nsimilar I was told to keep the code minimal, if a platform wishes so.\n\nIf you want to support both v3 and v4 GICs in one build, you can always\nunconditionally define GIC_ENABLE_V4_EXTN in your platform.mk and be\ncovered.\n",
      "revId": "ecd1dd0907abaae0593630840c5b226b57ccc0c0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "edf7cff7_a14e8592",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2021-08-18T14:34:49Z",
      "side": 1,
      "message": "I understand. No big deal to keep both macros enabled for Tegra platforms.",
      "parentUuid": "98809bb9_2470d06b",
      "revId": "ecd1dd0907abaae0593630840c5b226b57ccc0c0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dcb0bb5e_9b9fa640",
        "filename": "drivers/arm/gic/v3/gicv3_helpers.c",
        "patchSetId": 1
      },
      "lineNbr": 385,
      "author": {
        "id": 1000340
      },
      "writtenOn": "2021-07-30T22:19:51Z",
      "side": 1,
      "message": "1U",
      "range": {
        "startLine": 385,
        "startChar": 14,
        "endLine": 385,
        "endChar": 15
      },
      "revId": "ecd1dd0907abaae0593630840c5b226b57ccc0c0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53429839_50ca15fe",
        "filename": "drivers/arm/gic/v3/gicv3_main.c",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2021-08-16T19:42:28Z",
      "side": 1,
      "message": "Can we change this into a runtime check too?",
      "range": {
        "startLine": 126,
        "startChar": 0,
        "endLine": 126,
        "endChar": 23
      },
      "revId": "ecd1dd0907abaae0593630840c5b226b57ccc0c0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad38c5c1_32622206",
        "filename": "drivers/arm/gic/v3/gicv3_main.c",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2021-08-16T20:00:23Z",
      "side": 1,
      "message": "Well, this test is somewhat pointless, actually, I just kept it in to maintain the status quo. The idea seems to be to double check those things, and for most targets there is actually only one particular GIC model in use. So if this check fails, something went horribly wrong.\nPersonally I\u0027d prefer more flexible code, but this does not seems to be the idea here.  \nThe other reason I heard is to have minimal code, so by disabling GICv4 support you save some bytes.\nIf you don\u0027t care about this, there is no harm to just always enable GIC_ENABLE_V4_EXTN in your platform.mk, and it can cope with any old GICv3 as well.",
      "parentUuid": "53429839_50ca15fe",
      "range": {
        "startLine": 126,
        "startChar": 0,
        "endLine": 126,
        "endChar": 23
      },
      "revId": "ecd1dd0907abaae0593630840c5b226b57ccc0c0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8eb68eb4_156d6f2e",
        "filename": "include/drivers/arm/gicv3.h",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 1000340
      },
      "writtenOn": "2021-07-30T22:19:51Z",
      "side": 1,
      "message": "2021",
      "range": {
        "startLine": 2,
        "startChar": 22,
        "endLine": 2,
        "endChar": 26
      },
      "revId": "ecd1dd0907abaae0593630840c5b226b57ccc0c0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1068556_9d661b3b",
        "filename": "include/drivers/arm/gicv3.h",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2021-08-24T13:44:47Z",
      "side": 1,
      "message": "So I was once told that we those copyright years updates are no longer commented on?\nAccording to my research the usefulness of listing the years in the copyright statement is highly debated, and especially the end year is of very little use. The start year could be used to establish when the code started to appear under the license conditions, but the end year is most likely just important to mark the expiration 75 years (or so) later on - and even that is somewhat contested.\nBesides, changes to the copyright statement are only indicated when *significant* contributions have been made to the file. I don\u0027t consider a trivial function, which mostly somewhat refactors existing code, to meet this demand.\nThose seemingly trivial changes just increase the likelihood of merge conflicts. Granted, they are easy to solve, but still create quite some churn and require manual intervention, blocking patches from being merged quickly.",
      "parentUuid": "8eb68eb4_156d6f2e",
      "range": {
        "startLine": 2,
        "startChar": 22,
        "endLine": 2,
        "endChar": 26
      },
      "revId": "ecd1dd0907abaae0593630840c5b226b57ccc0c0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08ba048b_c622e16a",
        "filename": "include/drivers/arm/gicv3.h",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 1000340
      },
      "writtenOn": "2021-08-24T22:51:15Z",
      "side": 1,
      "message": "I agree with your stance here, but I\u0027ve had patches rejected for copyrights in the past so I thought it was something we were still enforcing.  I\u0027ll probably stop going forward, it does tend to create merge conflicts fairly often.",
      "parentUuid": "c1068556_9d661b3b",
      "range": {
        "startLine": 2,
        "startChar": 22,
        "endLine": 2,
        "endChar": 26
      },
      "revId": "ecd1dd0907abaae0593630840c5b226b57ccc0c0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73ba5374_65e6d5f7",
        "filename": "include/drivers/arm/gicv3.h",
        "patchSetId": 1
      },
      "lineNbr": 316,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2021-08-16T19:42:28Z",
      "side": 1,
      "message": "Can we change this to a runtime check too?",
      "range": {
        "startLine": 316,
        "startChar": 0,
        "endLine": 316,
        "endChar": 22
      },
      "revId": "ecd1dd0907abaae0593630840c5b226b57ccc0c0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "246491be_ecb1ecbd",
        "filename": "include/drivers/arm/gicv3.h",
        "patchSetId": 1
      },
      "lineNbr": 316,
      "author": {
        "id": 1000118
      },
      "writtenOn": "2021-08-16T20:00:23Z",
      "side": 1,
      "message": "Same thing, we actually *have* a runtime check below, it\u0027s just disabled if you explicitly disable GICv4 support. Again to maintain the current status and to save some bytes (the compiler can optimise better, since this is a constant static inline function), but technically it\u0027s not needed, and it would work with all GICs alike.",
      "parentUuid": "73ba5374_65e6d5f7",
      "range": {
        "startLine": 316,
        "startChar": 0,
        "endLine": 316,
        "endChar": 22
      },
      "revId": "ecd1dd0907abaae0593630840c5b226b57ccc0c0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9fde4324_2c099f4a",
        "filename": "plat/arm/board/arm_fpga/fpga_bl31_setup.c",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 1000340
      },
      "writtenOn": "2021-07-30T22:19:51Z",
      "side": 1,
      "message": "2021",
      "range": {
        "startLine": 2,
        "startChar": 17,
        "endLine": 2,
        "endChar": 21
      },
      "revId": "ecd1dd0907abaae0593630840c5b226b57ccc0c0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}