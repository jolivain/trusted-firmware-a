{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5b68f2ff_79f49c40",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-05-03T01:05:33Z",
      "side": 1,
      "message": "It seems the platform_api is not implemented properly by the platform. The contract for this API is to return a -ve value if mpidr is not valid and it should never return a value higher than PLATFORM_CORE_COUNT. \n\n\nNot sure whether generic code should try to validate against sloppy platform code as this is difficult to achieve for every case and we are on a slippery slope for validating platform API for every case. If at all, asserts should be enough to help catch these issues , but eventually platform code must follow contract and be hardened.",
      "range": {
        "startLine": 29,
        "startChar": 3,
        "endLine": 29,
        "endChar": 38
      },
      "revId": "be995cbbf2789e4f7a4212a37232f6fd34e61df0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d2162c92_c34e6640",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2023-05-03T01:05:33Z",
      "side": 1,
      "message": "TF-A platform code must honor expectations as set out in porting guide. Asserts can be used to catch issues with platform code but runtime validation of platform API contract should be avoided.",
      "revId": "be995cbbf2789e4f7a4212a37232f6fd34e61df0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b84123e_fe947e71",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2023-05-03T08:34:25Z",
      "side": 1,
      "message": "Hi Soby, stepping back, the change in question https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/20444 that current change is amending, was a naive attempt to fix a coverity finding which looked a possible buffer overflow opportunity (https://lists.trustedfirmware.org/archives/list/tf-a@lists.trustedfirmware.org/thread/PE4TOYXAU43343S2HVKVVDH2M3JIS64I/). We got pinged by a partner who was concerned about such possible issue in the psci lib.\nI agree with you we expect the platform port to be \u0027correct\u0027 and implement the mpdir conversion routine properly (and so omit runtime checks). Still, it is questionable whether we want to harden against the reported buffer overflow. Replacing with asserts is reasonable, although would be discarded in release builds and the potential issue be left?\nAlso in general should TF-A generic code be robust against an improperly designed platform port?",
      "parentUuid": "d2162c92_c34e6640",
      "revId": "be995cbbf2789e4f7a4212a37232f6fd34e61df0",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}