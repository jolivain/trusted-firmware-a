{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b17eecac_5aa4e105",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1000660
      },
      "writtenOn": "2023-12-14T13:59:14Z",
      "side": 1,
      "message": "@Juan, \n\nLGTM. \n\nLooks like majority of the tests failed are related to an other CI issue (disk space). Checked a few tests. \nThe Makefile related errors seen previously are now resolved. \nPlease ensure again and add Verified +1 manually, if no real errors.",
      "revId": "03fd352e0cf43b472cc9858869136a2d638d3e5f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "30fa5f65_34b55ebc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1000750
      },
      "writtenOn": "2023-12-14T17:18:41Z",
      "side": 1,
      "message": "@Jayanth\n\nBefore triggering Allow-CI+2, I ran individual tests for this patch and they passed on CI: \n\nhttps://ci.trustedfirmware.org/job/tf-a-ci-gateway/56703/\nhttps://ci.trustedfirmware.org/job/tf-a-ci-gateway/56704/\n\nAs the issue with the CI has not been resolved and plenty of tests passed anyway, I feel like we are good to give a Verified+1",
      "revId": "03fd352e0cf43b472cc9858869136a2d638d3e5f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b8c9f837_39eead21",
        "filename": "bl31/bl31_main.c",
        "patchSetId": 9
      },
      "lineNbr": 110,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2023-12-15T10:09:16Z",
      "side": 1,
      "message": "get rid of this? if platform will use it intentionally",
      "range": {
        "startLine": 110,
        "startChar": 31,
        "endLine": 110,
        "endChar": 64
      },
      "revId": "03fd352e0cf43b472cc9858869136a2d638d3e5f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00e56e9d_bf33d4a7",
        "filename": "bl31/bl31_main.c",
        "patchSetId": 9
      },
      "lineNbr": 110,
      "author": {
        "id": 1000750
      },
      "writtenOn": "2023-12-15T15:52:45Z",
      "side": 1,
      "message": "Hi Manish, \nI added this here because report_ctx_memory_usage() has an INFO(...) use inside, so I conditioned the definition of the function on PLATFORM_REPORT_CTX_MEM_USE \u0026\u0026 (LOG_LEVEL \u003e\u003d LOG_LEVEL_INFO) (see lib/el3_runtime/aarch64/context_mgmt.c:1533). If I remove (LOG_LEVEL \u003e\u003d LOG_LEVEL_INFO), the function will not exist and we will get an \"undefined reference\" compilation error when LOG_LEVEL \u003c 50. That happens when compiling in release mode in the CI, for instance. \n\nWe have two alternatives here: \n1) Move (LOG_LEVEL \u003e\u003d LOG_LEVEL_INFO) inside report_ctx_memory_usage(). That way, if the condition is not met, report_ctx_memory_usage will exist but do nothing. I suggest this.\n2) Remove (LOG_LEVEL \u003e\u003d LOG_LEVEL_INFO) from both files. The problem here is that the INFO(...) line will not do anything, but the rest of the report will print no matter the LOG_LEVEL value.",
      "parentUuid": "b8c9f837_39eead21",
      "range": {
        "startLine": 110,
        "startChar": 31,
        "endLine": 110,
        "endChar": 64
      },
      "revId": "03fd352e0cf43b472cc9858869136a2d638d3e5f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b12c70e_019cfcf1",
        "filename": "bl31/bl31_main.c",
        "patchSetId": 9
      },
      "lineNbr": 110,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2023-12-15T22:05:36Z",
      "side": 1,
      "message": "I feel it can be removed from both files.  \nIf its release build, PLATFORM_REPORT_CTX_MEM_USE gets downgraded to 0.\nIf its debug build, LOG_LEVEL is guaranteed to be \u003e\u003d40. \n\nDo you think this works?",
      "parentUuid": "00e56e9d_bf33d4a7",
      "range": {
        "startLine": 110,
        "startChar": 31,
        "endLine": 110,
        "endChar": 64
      },
      "revId": "03fd352e0cf43b472cc9858869136a2d638d3e5f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "79583565_3704758f",
        "filename": "bl31/bl31_main.c",
        "patchSetId": 9
      },
      "lineNbr": 110,
      "author": {
        "id": 1000750
      },
      "writtenOn": "2023-12-17T21:42:08Z",
      "side": 1,
      "message": "Right. Now that running in release mode is not allowed, this shouldn\u0027t be necessary.",
      "parentUuid": "0b12c70e_019cfcf1",
      "range": {
        "startLine": 110,
        "startChar": 31,
        "endLine": 110,
        "endChar": 64
      },
      "revId": "03fd352e0cf43b472cc9858869136a2d638d3e5f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}