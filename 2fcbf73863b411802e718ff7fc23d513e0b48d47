{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "651c9023_dbb123e6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-06-27T12:57:17Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 9,
        "startChar": 26,
        "endLine": 9,
        "endChar": 33
      },
      "revId": "2fcbf73863b411802e718ff7fc23d513e0b48d47",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94694733_e3afea48",
        "filename": "docs/design_documents/measured_boot.rst",
        "patchSetId": 1
      },
      "lineNbr": 4,
      "author": {
        "id": 1000744
      },
      "writtenOn": "2023-06-23T09:49:21Z",
      "side": 1,
      "message": "typo: implementation",
      "range": {
        "startLine": 4,
        "startChar": 62,
        "endLine": 4,
        "endChar": 76
      },
      "revId": "2fcbf73863b411802e718ff7fc23d513e0b48d47",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f40196b7_43df1804",
        "filename": "docs/design_documents/measured_boot.rst",
        "patchSetId": 1
      },
      "lineNbr": 4,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-06-27T12:57:17Z",
      "side": 1,
      "message": "And add a full dot at the end of the sentence.",
      "parentUuid": "94694733_e3afea48",
      "range": {
        "startLine": 4,
        "startChar": 62,
        "endLine": 4,
        "endChar": 76
      },
      "revId": "2fcbf73863b411802e718ff7fc23d513e0b48d47",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "808a1a9e_135f42fd",
        "filename": "docs/design_documents/measured_boot.rst",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-06-27T12:57:17Z",
      "side": 1,
      "message": "I would not consider Measured boot as a boot flow per se, as it\u0027s not drastically changing the order of images we boot. I think the following would read better for me:\n\n Measured Boot is the process of computing and securely recording hashes of code\n and critical data at each stage in the boot chain before the code/data is used.",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 28
      },
      "revId": "2fcbf73863b411802e718ff7fc23d513e0b48d47",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88ee495c_3ea5e412",
        "filename": "docs/design_documents/measured_boot.rst",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000744
      },
      "writtenOn": "2023-06-23T09:49:21Z",
      "side": 1,
      "message": "nit: below in the section",
      "range": {
        "startLine": 13,
        "startChar": 29,
        "endLine": 13,
        "endChar": 34
      },
      "revId": "2fcbf73863b411802e718ff7fc23d513e0b48d47",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8cc62fd4_e4b072ea",
        "filename": "docs/design_documents/measured_boot.rst",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-06-27T12:57:17Z",
      "side": 1,
      "message": "I would move this sentence at the end of the section because it is starting to provide implementation details, whereas the rest of the section is very generic and presenting measured boot concepts.",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 13,
        "endChar": 65
      },
      "revId": "2fcbf73863b411802e718ff7fc23d513e0b48d47",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f3640a0_9974a7cd",
        "filename": "docs/design_documents/measured_boot.rst",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-06-27T12:57:17Z",
      "side": 1,
      "message": "And can we make the words \u0027below in the section\u0027 a link to the appropriate section? Right now, the rendered version shows:\n\n mentioned below Measured Boot Backends.",
      "parentUuid": "88ee495c_3ea5e412",
      "range": {
        "startLine": 13,
        "startChar": 29,
        "endLine": 13,
        "endChar": 34
      },
      "revId": "2fcbf73863b411802e718ff7fc23d513e0b48d47",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f99cc0e_79eddb6f",
        "filename": "docs/design_documents/measured_boot.rst",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-06-27T12:57:17Z",
      "side": 1,
      "message": "I\u0027d like us to stress that none of this is actually TF-A\u0027s responsibility. These are just examples of things a system can use measurements for, but TF-A is just responsible for making the measurements. Maybe we could reword like that:\n\n  These measurements can be leveraged by other components in the system to implement\n  a complete attestation system. For example, they could be used to enforce local\n  attestation policies (such as releasing certain platform keys or not), or they could\n  be securely sent to a remote challenger a.k.a. `verifier` after boot to attest to the\n  state of the code and critical-data.",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 17,
        "endChar": 64
      },
      "revId": "2fcbf73863b411802e718ff7fc23d513e0b48d47",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce134a85_66757bce",
        "filename": "docs/design_documents/measured_boot.rst",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-06-27T12:57:17Z",
      "side": 1,
      "message": "I would add an introductory sentence, such as:\n\n All firmware images - i.e. BLx images and their corresponding configuration files, if any - \n must be measured. In addition to that, there might be specific pieces of data which needs to \n be measured as well. These are typically different on each platform. They are referred to as\n *critical data*.\n\nAnd then this can be followed by:\n\n Critical data for the platform can be determined using the following criteria:",
      "revId": "2fcbf73863b411802e718ff7fc23d513e0b48d47",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a3d00c3_25bd4691",
        "filename": "docs/design_documents/measured_boot.rst",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1000744
      },
      "writtenOn": "2023-06-23T09:49:21Z",
      "side": 1,
      "message": "This doesn\u0027t sound quite right. Would something like \"can be determined using the following criteria\" work?",
      "range": {
        "startLine": 28,
        "startChar": 31,
        "endLine": 28,
        "endChar": 69
      },
      "revId": "2fcbf73863b411802e718ff7fc23d513e0b48d47",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b00a56e_c38aad4b",
        "filename": "docs/design_documents/measured_boot.rst",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-06-27T12:57:17Z",
      "side": 1,
      "message": "I agree.",
      "parentUuid": "1a3d00c3_25bd4691",
      "range": {
        "startLine": 28,
        "startChar": 31,
        "endLine": 28,
        "endChar": 69
      },
      "revId": "2fcbf73863b411802e718ff7fc23d513e0b48d47",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78eed99a_d0b64697",
        "filename": "docs/design_documents/measured_boot.rst",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1000744
      },
      "writtenOn": "2023-06-23T09:49:21Z",
      "side": 1,
      "message": "nit: colon",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 29,
        "endChar": 10
      },
      "revId": "2fcbf73863b411802e718ff7fc23d513e0b48d47",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "403c472f_5af3899f",
        "filename": "docs/design_documents/measured_boot.rst",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 1000744
      },
      "writtenOn": "2023-06-23T09:49:21Z",
      "side": 1,
      "message": "nit: that alter the boot",
      "range": {
        "startLine": 33,
        "startChar": 30,
        "endLine": 33,
        "endChar": 46
      },
      "revId": "2fcbf73863b411802e718ff7fc23d513e0b48d47",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8fbd687c_06041c6e",
        "filename": "docs/design_documents/measured_boot.rst",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1000744
      },
      "writtenOn": "2023-06-23T09:49:21Z",
      "side": 1,
      "message": "This isn\u0027t clear, do you mean to say parameters that are used to determine where firmware is loaded from?",
      "range": {
        "startLine": 34,
        "startChar": 0,
        "endLine": 35,
        "endChar": 66
      },
      "revId": "2fcbf73863b411802e718ff7fc23d513e0b48d47",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d83549df_3c4ae50d",
        "filename": "docs/design_documents/measured_boot.rst",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1000744
      },
      "writtenOn": "2023-06-23T09:49:21Z",
      "side": 1,
      "message": "typo: debug",
      "range": {
        "startLine": 37,
        "startChar": 27,
        "endLine": 37,
        "endChar": 32
      },
      "revId": "2fcbf73863b411802e718ff7fc23d513e0b48d47",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81a9288e_f069465a",
        "filename": "docs/design_documents/measured_boot.rst",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-06-27T12:57:17Z",
      "side": 1,
      "message": "What is the difference between \"Configuration settings\" here and \"Configuration parameters\" at line 33?",
      "range": {
        "startLine": 37,
        "startChar": 3,
        "endLine": 37,
        "endChar": 25
      },
      "revId": "2fcbf73863b411802e718ff7fc23d513e0b48d47",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e33c574e_8f506149",
        "filename": "docs/design_documents/measured_boot.rst",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-06-27T12:57:17Z",
      "side": 1,
      "message": "I am a bit confused by this item. If it\u0027s un-deterministic data then is it worth measuring? How will the verifier make sense of it? I guess this type of data could be logged and sent to the verified verbatim but it does not seem reasonable/useful to me to hash it...",
      "range": {
        "startLine": 40,
        "startChar": 3,
        "endLine": 40,
        "endChar": 66
      },
      "revId": "2fcbf73863b411802e718ff7fc23d513e0b48d47",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e01996f_d178ad81",
        "filename": "docs/design_documents/measured_boot.rst",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-06-27T12:57:17Z",
      "side": 1,
      "message": "I came across a good example of critical data the other day: the list of errata workarounds being applied at reset. For example you could have a firmware which embeds code for workarounds A, B, C. On platform X, workarounds A \u0026 C get applied. On platform Y, only workaround B gets applied. On both platforms, the firmware measurement is the same so recording which ones get executed can be useful information to the verifier.\n\nCould you please add this example?\n\nAnother good example is the state of fuses such as whether an SoC is in secure mode.",
      "revId": "2fcbf73863b411802e718ff7fc23d513e0b48d47",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e60f8894_938d8661",
        "filename": "docs/design_documents/measured_boot.rst",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-06-27T12:57:17Z",
      "side": 1,
      "message": "I feel this part of the sentence does not belong here. It\u0027s also redundant with what was explained above. I would remove it.",
      "range": {
        "startLine": 48,
        "startChar": 26,
        "endLine": 49,
        "endChar": 41
      },
      "revId": "2fcbf73863b411802e718ff7fc23d513e0b48d47",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce0741c0_41085a12",
        "filename": "docs/design_documents/measured_boot.rst",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-06-27T12:57:17Z",
      "side": 1,
      "message": "*extend* (i.e. use RestructuredText emphasis syntax when defining new terminology)",
      "range": {
        "startLine": 50,
        "startChar": 51,
        "endLine": 50,
        "endChar": 57
      },
      "revId": "2fcbf73863b411802e718ff7fc23d513e0b48d47",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b6b975f3_cc11f1d7",
        "filename": "docs/design_documents/measured_boot.rst",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1000744
      },
      "writtenOn": "2023-06-23T09:49:21Z",
      "side": 1,
      "message": "nit: colon",
      "range": {
        "startLine": 58,
        "startChar": 55,
        "endLine": 58,
        "endChar": 57
      },
      "revId": "2fcbf73863b411802e718ff7fc23d513e0b48d47",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b0f5d347_38a80d4c",
        "filename": "docs/design_documents/measured_boot.rst",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1000744
      },
      "writtenOn": "2023-06-23T09:49:21Z",
      "side": 1,
      "message": "The Measured Boot",
      "range": {
        "startLine": 58,
        "startChar": 0,
        "endLine": 58,
        "endChar": 13
      },
      "revId": "2fcbf73863b411802e718ff7fc23d513e0b48d47",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "070a0d73_70bfbb86",
        "filename": "docs/design_documents/measured_boot.rst",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-06-27T12:57:17Z",
      "side": 1,
      "message": "The Measured Boot implementation in TF-A supports...",
      "range": {
        "startLine": 58,
        "startChar": 0,
        "endLine": 58,
        "endChar": 28
      },
      "revId": "2fcbf73863b411802e718ff7fc23d513e0b48d47",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff35e551_eae480c6",
        "filename": "docs/design_documents/measured_boot.rst",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1000744
      },
      "writtenOn": "2023-06-23T09:49:21Z",
      "side": 1,
      "message": "Unless there\u0027s some convention or style I\u0027m unaware of, wouldn\u0027t it be clearer having the backend and its description start on the same line e.g. \"#. RSS - a physical backend used to ... \"?",
      "range": {
        "startLine": 80,
        "startChar": 0,
        "endLine": 83,
        "endChar": 69
      },
      "revId": "2fcbf73863b411802e718ff7fc23d513e0b48d47",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb54a27f_71154784",
        "filename": "docs/design_documents/measured_boot.rst",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-06-27T12:57:17Z",
      "side": 1,
      "message": "For readability purposes, I would not use a list here.",
      "revId": "2fcbf73863b411802e718ff7fc23d513e0b48d47",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30fe8bc5_b7a4308e",
        "filename": "docs/design_documents/measured_boot.rst",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-06-27T12:57:17Z",
      "side": 1,
      "message": "For readability purposes, I would not use a list here.",
      "range": {
        "startLine": 108,
        "startChar": 3,
        "endLine": 108,
        "endChar": 4
      },
      "revId": "2fcbf73863b411802e718ff7fc23d513e0b48d47",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de1d1c42_b77ea04e",
        "filename": "docs/design_documents/measured_boot.rst",
        "patchSetId": 1
      },
      "lineNbr": 113,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-06-27T12:57:17Z",
      "side": 1,
      "message": "this (lower case)",
      "range": {
        "startLine": 113,
        "startChar": 15,
        "endLine": 113,
        "endChar": 19
      },
      "revId": "2fcbf73863b411802e718ff7fc23d513e0b48d47",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48ca6dd8_3b060734",
        "filename": "docs/design_documents/measured_boot.rst",
        "patchSetId": 1
      },
      "lineNbr": 118,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-06-27T12:57:17Z",
      "side": 1,
      "message": "Actually as these interfaces do not return any error code, I think we should provide some guidance in the generic part.\n\nPerhaps this could be put next to the first sentence, like so:\n\n Initialise all Measured Boot backends supported by the platform (e.g. Event Log buffer, \n RSS). As these functions do not return any value, the platform should deal with error\n management, such as logging the error somewhere, or panicking the system if this is\n considered a fatal error.",
      "range": {
        "startLine": 117,
        "startChar": 46,
        "endLine": 118,
        "endChar": 13
      },
      "revId": "2fcbf73863b411802e718ff7fc23d513e0b48d47",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7cb640c3_4ee1b3ab",
        "filename": "docs/design_documents/measured_boot.rst",
        "patchSetId": 1
      },
      "lineNbr": 124,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-06-27T12:57:17Z",
      "side": 1,
      "message": "As all 4 interfaces are defined in include/plat/common/platform.h, perhaps we should state that at the top (after the diagram) and forget about it for the rest of the section?",
      "range": {
        "startLine": 122,
        "startChar": 0,
        "endLine": 124,
        "endChar": 41
      },
      "revId": "2fcbf73863b411802e718ff7fc23d513e0b48d47",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24d0ea4f_bfe04a9f",
        "filename": "docs/design_documents/measured_boot.rst",
        "patchSetId": 1
      },
      "lineNbr": 133,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-06-27T12:57:17Z",
      "side": 1,
      "message": "The following would sounds lighter to me:\n\n Measure the image using a hash function of the crypto module.",
      "range": {
        "startLine": 131,
        "startChar": 5,
        "endLine": 133,
        "endChar": 0
      },
      "revId": "2fcbf73863b411802e718ff7fc23d513e0b48d47",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "942f7f6a_f1caea8b",
        "filename": "docs/design_documents/measured_boot.rst",
        "patchSetId": 1
      },
      "lineNbr": 142,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-06-27T12:57:17Z",
      "side": 1,
      "message": "Suggest:\n\n On the Arm FVP port, this function measures the given image and then records\n that measurement in the Event Log buffer.\n\n The passed id is used to retrieve information about on how to measure the image\n (e.g. PCR number).",
      "range": {
        "startLine": 140,
        "startChar": 5,
        "endLine": 142,
        "endChar": 22
      },
      "revId": "2fcbf73863b411802e718ff7fc23d513e0b48d47",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea4cb382_ab6e4fe7",
        "filename": "docs/design_documents/measured_boot.rst",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-06-27T12:57:17Z",
      "side": 1,
      "message": "Let\u0027s move this sentence above the FVP specific implementation details.",
      "range": {
        "startLine": 143,
        "startChar": 3,
        "endLine": 144,
        "endChar": 15
      },
      "revId": "2fcbf73863b411802e718ff7fc23d513e0b48d47",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "227f3e1a_61a19a99",
        "filename": "docs/design_documents/measured_boot.rst",
        "patchSetId": 1
      },
      "lineNbr": 163,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-06-27T12:57:17Z",
      "side": 1,
      "message": "Suggest adding:\n\n As these functions do not return any value, the platform should deal with error\n management, such as logging the error somewhere, or panicking the system if this is\n considered a fatal error.",
      "revId": "2fcbf73863b411802e718ff7fc23d513e0b48d47",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "814ab33e_c167cf2f",
        "filename": "docs/design_documents/measured_boot.rst",
        "patchSetId": 1
      },
      "lineNbr": 188,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-06-27T12:57:17Z",
      "side": 1,
      "message": "Remove?",
      "range": {
        "startLine": 188,
        "startChar": 5,
        "endLine": 188,
        "endChar": 38
      },
      "revId": "2fcbf73863b411802e718ff7fc23d513e0b48d47",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ac386e7_d20bd4b0",
        "filename": "docs/design_documents/measured_boot.rst",
        "patchSetId": 1
      },
      "lineNbr": 188,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-06-27T12:57:17Z",
      "side": 1,
      "message": "Let\u0027s move this sentence above the FVP specific implementation details.",
      "revId": "2fcbf73863b411802e718ff7fc23d513e0b48d47",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "583bd190_55b5ea5a",
        "filename": "docs/design_documents/measured_boot.rst",
        "patchSetId": 1
      },
      "lineNbr": 202,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-06-27T12:57:17Z",
      "side": 1,
      "message": "I now think we should move this sentence near the start of the section, after the call diagram.",
      "range": {
        "startLine": 201,
        "startChar": 0,
        "endLine": 202,
        "endChar": 32
      },
      "revId": "2fcbf73863b411802e718ff7fc23d513e0b48d47",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d61b7da_bfd8ad59",
        "filename": "docs/design_documents/measured_boot.rst",
        "patchSetId": 1
      },
      "lineNbr": 210,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-06-27T12:57:17Z",
      "side": 1,
      "message": "This link appears to be the same as the first one. To avoid any confusion, I suggest giving it the same name everywhere, instead of calling it \"TCG PC Client Platform Firmware Profile Specification\" in some places and \"TCG EFI Protocol Specification\" in other places.",
      "range": {
        "startLine": 210,
        "startChar": 0,
        "endLine": 210,
        "endChar": 137
      },
      "revId": "2fcbf73863b411802e718ff7fc23d513e0b48d47",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75e77afb_071c0814",
        "filename": "docs/design_documents/measured_boot_poc.rst",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-06-27T12:57:17Z",
      "side": 1,
      "message": "(minor) This sentence renders as:\n\n See details of Measured Boot design Measured Boot Design.\n\nwhich is redundant. I suggest making the text \"Measured Boot design\" a link, instead of repeating it.",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 13,
        "endChar": 64
      },
      "revId": "2fcbf73863b411802e718ff7fc23d513e0b48d47",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a47499da_ded1163a",
        "filename": "docs/resources/diagrams/measured_boot_design.png",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-06-27T12:57:17Z",
      "side": 1,
      "message": "Unless I am reading this diagram incorrectly, this seems to suggest that plat_mboot_measure_image() is called after load_auth_image(), whereas the reality is that plat_mboot_measure_image() is called from within load_auth_image()...",
      "revId": "2fcbf73863b411802e718ff7fc23d513e0b48d47",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}