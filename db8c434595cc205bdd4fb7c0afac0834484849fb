{
  "comments": [
    {
      "key": {
        "uuid": "d6736885_7dc2b018",
        "filename": "docs/getting_started/build-options.rst",
        "patchSetId": 2
      },
      "lineNbr": 191,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-12-03T21:30:34Z",
      "side": 1,
      "message": "Can MTPMU be disabled by finding out the version at runtime instead? We wont need a static flag that way.",
      "range": {
        "startLine": 187,
        "startChar": 0,
        "endLine": 191,
        "endChar": 28
      },
      "revId": "db8c434595cc205bdd4fb7c0afac0834484849fb",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "760b180e_6bbb39df",
        "filename": "docs/getting_started/build-options.rst",
        "patchSetId": 2
      },
      "lineNbr": 191,
      "author": {
        "id": 1000298
      },
      "writtenOn": "2020-12-08T13:23:24Z",
      "side": 1,
      "message": "If FEAT_MTPMU is implemented, it needs to be enabled (or not disabled, hence the DISABLE_MTPMU \u003d 0 on the default configuration) so the behavior is consistent with architectures that do not include this feature.\n\nHowever we want to give the option to disable this feature if needed, which is the reason for the static flag.\n\nJust to clarify, as this can be a bit confusing, for architectures that do not implement FEAT_MTPMU, the CPU can observe the behavior of all the threads (if PMEVTYPER\u003cn\u003e(_EL0).MT is implemented), whereas if FEAT_MTPMU is implemented, this is not allowed unless the feature is enabled (regardless of the state of the .MT bits). In a nutshell, if FEAT_PMUv3 and at least EL3 or EL2 are implemented:\n\n* If FEAT_MTPMU is not implemented (Armv \u003c 8.6), PMEVTYPER\u003cn\u003e(_EL0).MT bit, which is optional, can be used to observe the behavior of other hardware threads on the same CPU.\n* If FEAT_MTPMU is implemented AND ENABLED (the default behavior for this patch), PMEVTYPER\u003cn\u003e(_EL0).MT bit has the same behavior as if FEAT_MTPMU were not implemented.\n* If FEAT_MTPMU is implemented AND DISABLED, PMEVTYPER\u003cn\u003e(_EL0).MT is effectively disabled, meaning that its effective value is 0 regardless of whether it has been set to 1.\n\nI\u0027m making this clarification because I guess it can be a bit counter-intuitive (at least it was for me) that enabling the feature has the same effect that not having the feature implemented on previous versions of the architecture.",
      "parentUuid": "d6736885_7dc2b018",
      "range": {
        "startLine": 187,
        "startChar": 0,
        "endLine": 191,
        "endChar": 28
      },
      "revId": "db8c434595cc205bdd4fb7c0afac0834484849fb",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    }
  ]
}