{
  "comments": [
    {
      "key": {
        "uuid": "baf2347c_0f496641",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2020-10-03T16:03:06Z",
      "side": 1,
      "message": "Sorry this is a nit. I had to read the commit message a few times to understand what it is conveying. This should be \"current implementation does so only on the cm_exited_normal_world event. However, this event only occurs when the non-secure context is saved\".",
      "range": {
        "startLine": 14,
        "startChar": 12,
        "endLine": 14,
        "endChar": 38
      },
      "revId": "7a594c1baf1cbf987f5899978b166838d81fbb7b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c0d78da_5ac1150e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2020-10-05T08:33:32Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "baf2347c_0f496641",
      "range": {
        "startLine": 14,
        "startChar": 12,
        "endLine": 14,
        "endChar": 38
      },
      "revId": "7a594c1baf1cbf987f5899978b166838d81fbb7b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ea8600f8_f30856ec",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2020-10-02T16:52:52Z",
      "side": 1,
      "message": "Looking at https://trustedfirmware-a.readthedocs.io/en/latest/components/exception-handling.html#interrupt-handling\n\nJust trying to clarify:\n\nIIUC when an S-EL1 component exists and EHF is enabled, the SPD must adopt the policy that NS interrupts are trapped at EL3 but then redirected S-EL1.\n\nAlso PMR can be manipulated at S-EL1 so adjusting from EL3 is not bulletproof IMO.",
      "revId": "7a594c1baf1cbf987f5899978b166838d81fbb7b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27b82db4_eef44b1b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2020-10-05T08:33:32Z",
      "side": 1,
      "message": "Yes. This is a limitation to the G0 interrupt\u0027s privilege IMHO. \nThis has to be dealt with cooperative software.\nie: platform can define \u0027GIC_HIGHEST_S_EL1_PRI\u0027 and the secure\nworld respects to not step into EL3 PMR range by design. \nSecure ELx can achieve all its functionality without disturbing PMR outside its range. And this way G0 interrupt\u0027s privilege is retained. This is just my thought to get around this limitation.\n\nIf we follow other routing model to trap fiq to S_EL2/S_EL1 then\nthere are potential window where a critical event is masked by something of lower priority or importance.",
      "parentUuid": "ea8600f8_f30856ec",
      "revId": "7a594c1baf1cbf987f5899978b166838d81fbb7b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c95cefd_d38c82c4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2020-10-03T16:03:06Z",
      "side": 1,
      "message": "Nit: \"does not save the non-secure context\". Also what is SPD_PM? cannot grep for it. Are you talking about code in tspd_pm.c or optee or trusty?",
      "range": {
        "startLine": 17,
        "startChar": 4,
        "endLine": 17,
        "endChar": 58
      },
      "revId": "7a594c1baf1cbf987f5899978b166838d81fbb7b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba8a42a2_1726c53c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2020-10-05T08:33:32Z",
      "side": 1,
      "message": "All of them.  \u0027spd_pm_ops\u0027 is the right word.",
      "parentUuid": "2c95cefd_d38c82c4",
      "range": {
        "startLine": 17,
        "startChar": 4,
        "endLine": 17,
        "endChar": 58
      },
      "revId": "7a594c1baf1cbf987f5899978b166838d81fbb7b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3112c90a_9212b9ad",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2020-10-03T16:03:06Z",
      "side": 1,
      "message": "Nit: can you rephrase as \"is not available, and consequently, GIC PMR is not adjusted, allowing non-secure interrupts to preempt SPD_PM execution.",
      "range": {
        "startLine": 18,
        "startChar": 36,
        "endLine": 18,
        "endChar": 52
      },
      "revId": "7a594c1baf1cbf987f5899978b166838d81fbb7b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8662d3a0_b60eef93",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2020-10-03T16:03:06Z",
      "side": 1,
      "message": "nit: should be cm_exited_non_secure_world. Helps to have accurate names to grep.",
      "range": {
        "startLine": 18,
        "startChar": 7,
        "endLine": 18,
        "endChar": 34
      },
      "revId": "7a594c1baf1cbf987f5899978b166838d81fbb7b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a95e6589_d619b5db",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2020-10-05T08:33:32Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "3112c90a_9212b9ad",
      "range": {
        "startLine": 18,
        "startChar": 36,
        "endLine": 18,
        "endChar": 52
      },
      "revId": "7a594c1baf1cbf987f5899978b166838d81fbb7b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "48eb54b6_641fd8be",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2020-10-05T08:33:32Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "8662d3a0_b60eef93",
      "range": {
        "startLine": 18,
        "startChar": 7,
        "endLine": 18,
        "endChar": 34
      },
      "revId": "7a594c1baf1cbf987f5899978b166838d81fbb7b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ef864041_bed3e8ca",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2020-10-03T16:03:06Z",
      "side": 1,
      "message": "should\u0027nt the fix really be that you save non-secure context before entering secure world? Why would you enter S-EL1 or S-EL2 without saving non-secure context?\nIf you fix SPD_PM(whatever it is) to save non-secure context, will this problem not be solved? Please let me know if i\u0027m missing something here.",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 23,
        "endChar": 27
      },
      "revId": "7a594c1baf1cbf987f5899978b166838d81fbb7b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f0b015d_c7ecea3d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2020-10-05T08:33:32Z",
      "side": 1,
      "message": "I will rephrase the comment. It is only the sysreg context of NS world which is not getting saved while doing the spd_pm_ops.\nThey do the synchronous entry/exit to secure world. There may be an\nissue there as well.\n\nMy first attempt was exactly to add the saving of sysreg ctx for psci calls also. It did not work probably due to something I did wrong. But by then I realize it only makes sense to adjust PMR\nwhen we actually do a world switch. \n1a- exited normal world\n 2a- entering secure world (optional)\n 2b- exited secure world   ( loop (2a))\n1b- entering normal world\nSo event 2a and 1b are more interesting than 1a and 2b.\n\nI can relook into the saving of sysreg on psci experiment as well to clarify. It should have worked.",
      "parentUuid": "ef864041_bed3e8ca",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 23,
        "endChar": 27
      },
      "revId": "7a594c1baf1cbf987f5899978b166838d81fbb7b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2dad6d0e_7e3ff0cd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2020-10-13T01:56:51Z",
      "side": 1,
      "message": "I think all 4 are interesting. I agree with your logic that you don\u0027t need to alter PMR unless you are entering secure world. If it is altered during secure world entry, it needs to be unwound during secure world exit and not only while entering normal world, to keep it clean/consistent.\n\nAlso, i don\u0027t agree with loop back from 2b to 2a. How do you envision this happening in a pre-8.4 system, without exiting back to normal world?",
      "parentUuid": "6f0b015d_c7ecea3d",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 23,
        "endChar": 27
      },
      "revId": "7a594c1baf1cbf987f5899978b166838d81fbb7b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28f5750e_c3c461ea",
        "filename": "bl31/ehf.c",
        "patchSetId": 1
      },
      "lineNbr": 265,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2020-10-03T20:51:45Z",
      "side": 1,
      "message": "somewhat related to this code review, but this whole block can be(assuming i\u0027m not missing something) replaced by ehf_activate_priority(GIC_HIGHEST_NS_PRIORITY), and similarly code in ehf_entering_normal_world() can be replaced by ehf_deactivate_priority(GIC_HIGHEST_NS_PRIORITY and you would have the same functionality and cleaner/more readable code.",
      "range": {
        "startLine": 244,
        "startChar": 0,
        "endLine": 265,
        "endChar": 13
      },
      "revId": "7a594c1baf1cbf987f5899978b166838d81fbb7b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4755680e_ace9022c",
        "filename": "bl31/ehf.c",
        "patchSetId": 1
      },
      "lineNbr": 265,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2020-10-05T08:33:32Z",
      "side": 1,
      "message": "There may be possibility to have a simpler mechanism. I will surely look into it. At the moment I wanted to get functionality right without disturbing much of existing code.",
      "parentUuid": "28f5750e_c3c461ea",
      "range": {
        "startLine": 244,
        "startChar": 0,
        "endLine": 265,
        "endChar": 13
      },
      "revId": "7a594c1baf1cbf987f5899978b166838d81fbb7b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b75c3fc_946a1b3d",
        "filename": "bl31/ehf.c",
        "patchSetId": 1
      },
      "lineNbr": 342,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2020-10-03T21:27:34Z",
      "side": 1,
      "message": "What happens if a caller calls ehf_allow_ns_preemption(), followed by ehf_activate_priority() followed by entry into secure world? It seems like ehf_activate_priority needs to have a corresponding check to enforce that allow_ns_pri is not 1 when it is called(perhaps panic() like other checks). This is a missing check even in existing code..This is a programming error but so is calling ehf_allow_ns_preemption when there are active priority levels..",
      "range": {
        "startLine": 338,
        "startChar": 1,
        "endLine": 342,
        "endChar": 2
      },
      "revId": "7a594c1baf1cbf987f5899978b166838d81fbb7b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de62ecf6_89942fcd",
        "filename": "bl31/ehf.c",
        "patchSetId": 1
      },
      "lineNbr": 342,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2020-10-05T08:33:32Z",
      "side": 1,
      "message": "In general yes it can look like a programing error. But consider this.\n\nYielding SMC handler gets preempted by EHF handler (non-interrupt) and then you explicitly activate the priority level and delegate the handling to secure world. Here you do want to\nactivate the priority level while the state is \u0027allow_ns_pri\u0027. Once EHF handler is done control needs to return to secure world. And the state \u0027allow_ns_pri\u0027 remains valid till the SMC returns to normal world.\n\nNote: Delegation to secure world is something that will not work with current state of code in either TF-A or TOS (op-tee).",
      "parentUuid": "9b75c3fc_946a1b3d",
      "range": {
        "startLine": 338,
        "startChar": 1,
        "endLine": 342,
        "endChar": 2
      },
      "revId": "7a594c1baf1cbf987f5899978b166838d81fbb7b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "376f919c_b69b0970",
        "filename": "bl31/ehf.c",
        "patchSetId": 1
      },
      "lineNbr": 342,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2020-10-13T01:56:51Z",
      "side": 1,
      "message": "Good point. However, if it does not work or is not supported, then why allow it? That is the point of asserting/panic\u0027ing.",
      "parentUuid": "de62ecf6_89942fcd",
      "range": {
        "startLine": 338,
        "startChar": 1,
        "endLine": 342,
        "endChar": 2
      },
      "revId": "7a594c1baf1cbf987f5899978b166838d81fbb7b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f8449ec_5e9c37cc",
        "filename": "bl31/ehf.c",
        "patchSetId": 1
      },
      "lineNbr": 521,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2020-10-03T16:03:06Z",
      "side": 1,
      "message": "do you not need a change to remove PUBLISH/SUBSCRIBE_EVENT cm_exited_normal_world?",
      "range": {
        "startLine": 521,
        "startChar": 19,
        "endLine": 521,
        "endChar": 43
      },
      "revId": "7a594c1baf1cbf987f5899978b166838d81fbb7b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "105e937f_ff8276c2",
        "filename": "bl31/ehf.c",
        "patchSetId": 1
      },
      "lineNbr": 521,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2020-10-03T20:27:15Z",
      "side": 1,
      "message": "Thinking out loud, still need to think through scenarios here but it would seem cleaner to consider having events to exit NWd, enter SWd, exit SWd and enter NWd. They are all distinct events. It seems wrong to enter secure world, with exiting normal world.",
      "parentUuid": "1f8449ec_5e9c37cc",
      "range": {
        "startLine": 521,
        "startChar": 19,
        "endLine": 521,
        "endChar": 43
      },
      "revId": "7a594c1baf1cbf987f5899978b166838d81fbb7b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41170705_b1685122",
        "filename": "bl31/ehf.c",
        "patchSetId": 1
      },
      "lineNbr": 521,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2020-10-03T21:27:34Z",
      "side": 1,
      "message": "Never mind both comments here. There are 4 distinct events published in context_mgmt.c and there is no change required to remove publish/subscribe of cm_exited_normal_world.",
      "parentUuid": "105e937f_ff8276c2",
      "range": {
        "startLine": 521,
        "startChar": 19,
        "endLine": 521,
        "endChar": 43
      },
      "revId": "7a594c1baf1cbf987f5899978b166838d81fbb7b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19be3d6b_591dcff9",
        "filename": "bl31/ehf.c",
        "patchSetId": 1
      },
      "lineNbr": 521,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2020-10-05T08:33:32Z",
      "side": 1,
      "message": "The importance of entering (S/NS) world event is, they are definitive and requires action of PMR adjustment. Exiting (S/NS) event does not necessarily means we will do a world switch.",
      "parentUuid": "41170705_b1685122",
      "range": {
        "startLine": 521,
        "startChar": 19,
        "endLine": 521,
        "endChar": 43
      },
      "revId": "7a594c1baf1cbf987f5899978b166838d81fbb7b",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    }
  ]
}