{
  "comments": [
    {
      "key": {
        "uuid": "6b0f5669_3de34147",
        "filename": "fdts/cot_descriptors.dtsi",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2020-06-29T16:55:51Z",
      "side": 1,
      "message": "technically the nv counter is also a cert extension... should they also be under extensions?",
      "revId": "562036c7866dda20333c80d649b3e4c2abdc8358",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64c181aa_aa8e483f",
        "filename": "fdts/cot_descriptors.dtsi",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2020-06-29T17:48:41Z",
      "side": 1,
      "message": "Thanks for pointing this out.\n\nThought that \"antirollback-counter\" property is not going to be used by child certificate/image hence put this property as part of certificate node itself.\n\nBut as per certificate (X.509) documentation, nv-counter is part of extension so better keep this property inside extension node. Will do the modifications and also, update the binding document accordingly.",
      "parentUuid": "6b0f5669_3de34147",
      "revId": "562036c7866dda20333c80d649b3e4c2abdc8358",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e55cb3d_29b101ec",
        "filename": "fdts/cot_descriptors.dtsi",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2020-07-01T14:55:06Z",
      "side": 1,
      "message": "OK perhaps we need to rename the extensions node then. In my mind (and looking at the first part of Manish\u0027s answer, I think he was originally thinking along the same lines), properties under the current \u0027extensions\u0027 sub-node were pieces of information to extract out of the certificates in order to authenticate children images. IOW, what we have in the .authenticated_data field of a struct auth_img_desc.\n\nOn the other hand, properties one level upper (signing-key, antirollback-counter) were pieces of information required to verify the certificate itself. IOW, what we have in the .img_auth_methods field.\n\nWe need to decide which way of organizing the data in the DTS file makes the more sense. I tend to think that the \"authenticated_data VS img_auth_methods\" approach makes more sense from a chain of trust point of view. It is more focused on expressing the relationship between the different images involved, rather than where to find each piece of information in the certificate format.\n\nAnother reason why \u0027extensions\u0027 might not be a good node name is that it is terminology specific to X.509 certificates, AFAIK. Right now, TF-A only uses such certificates but people are free to use other types of formats. For example, the TBFU specification (see R20_TBFU_MANIFEST on page 24) talks more generally about \"image manifests\" and mentions the IETF SUIT manifest format as a more lightweight alternative (mainly for IoT constrained devices but still this hopefully illustrates my point).",
      "parentUuid": "64c181aa_aa8e483f",
      "revId": "562036c7866dda20333c80d649b3e4c2abdc8358",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd1531be_2936d9bc",
        "filename": "fdts/cot_descriptors.dtsi",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2020-07-01T17:45:40Z",
      "side": 1,
      "message": "This will rule out taking into consideration of any certificate layout and make the certificate node more generic. \nAre you suggesting to create 2 sub-nodes inside certificate node as below?\n\n    img_auth_methods   -\u003e contains OIDs which are used to authenticate certificate itself\n    authenticated_data -\u003e contains OIDs which are used to authenticate child images of the \n                          certificates.\n\nCan we add img_auth_methods as a sub-node for image node also? Because in future data image may get authenticated with more than one method for e.g.antirollback-counter",
      "parentUuid": "2e55cb3d_29b101ec",
      "revId": "562036c7866dda20333c80d649b3e4c2abdc8358",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad648ff0_755cb19a",
        "filename": "fdts/cot_descriptors.dtsi",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2020-07-01T17:49:20Z",
      "side": 1,
      "message": "Agree. \"authenticated_data VS img_auth_methods\" makes more sense.",
      "parentUuid": "2e55cb3d_29b101ec",
      "revId": "562036c7866dda20333c80d649b3e4c2abdc8358",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87784514_e9f0b2d2",
        "filename": "fdts/cot_descriptors.dtsi",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2020-07-01T17:58:26Z",
      "side": 1,
      "message": "also since we are on terminology, maybe the top node shouldn\u0027t be called certificates. Maybe it should be called cot_manifest or cot_data?",
      "parentUuid": "ad648ff0_755cb19a",
      "revId": "562036c7866dda20333c80d649b3e4c2abdc8358",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "51485d4a_7f8a73ec",
        "filename": "fdts/cot_descriptors.dtsi",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2020-07-02T01:50:53Z",
      "side": 1,
      "message": "Agree with Raghu.\nCan we make cot_manifest as common node for all descriptors rather than separate certificate and image node to represent chain of trust relationship?\nParser can identify certificate descriptor using \u0027authenticated_data\u0027 property.\nLet me know your thoughts?",
      "parentUuid": "87784514_e9f0b2d2",
      "revId": "562036c7866dda20333c80d649b3e4c2abdc8358",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ccfa5f08_32645f41",
        "filename": "fdts/cot_descriptors.dtsi",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2020-07-06T11:34:35Z",
      "side": 1,
      "message": "A top-level node sounds like a good idea to me. Regarding its name, \u0027cot_manifest\u0027 does not sound too good to me, as we actually want to describe a set of manifests and images. I like \u0027cot_data\u0027  better but I would like to suggest simply \u0027cot\u0027, as I don\u0027t think the word \u0027data\u0027 adds much in this case.\n\nHowever, I still think there might be value in keeping manifests (certificates) and images under separate subnodes, as in:\n\n cot {\n   manifests { ... }\n   images { ... }\n }\n\nThey are different beasts IMO. Either that or we add a \u0027type\u0027 property within each image descriptor.\n\nNote that I am using the terminology \u0027manifests\u0027 and \u0027images\u0027 here, which aligns with the TBFU specification (see sections 2.4 and 2.5).\n\nSeems like we are on the same page for the \"authenticated_data VS img_auth_methods\" split. I am starting to think we don\u0027t necessarily need to put the 2 types of data onto separate subnodes, we could list them all at the image/manifest level. IOW, the skeleton could look like so:\n\n cot {\n    manifests {\n        certificate1 {\n            /* Properties used to authenticate the certificate itself. */\n\t    signing-key \u003d \u003c\u0026key\u003e;\n\t    antirollback-counter \u003d \u003c\u0026nv_counter\u003e;\n\n            /* Properties used to authenticate children images of this certificate. */\n            hash1 { ... };\n\t    hash2 { ... };\n\t    key1 { ... };\n\t};\n\n        certificate2 { ... };\n    };\n\n    images {\n        image1 { ... };\n\timage2 { ... };\n    };\n };\n\nHow does that sound?",
      "parentUuid": "51485d4a_7f8a73ec",
      "revId": "562036c7866dda20333c80d649b3e4c2abdc8358",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9951a9e6_37493aea",
        "filename": "fdts/cot_descriptors.dtsi",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2020-07-06T15:44:14Z",
      "side": 1,
      "message": "Works for me!",
      "parentUuid": "ccfa5f08_32645f41",
      "revId": "562036c7866dda20333c80d649b3e4c2abdc8358",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53c2cda6_6d797b62",
        "filename": "fdts/cot_descriptors.dtsi",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2020-07-06T16:02:40Z",
      "side": 1,
      "message": "This looks good for me. Just showing one real example as below to clear the understanding:\n\ncot {\n    manifests {\n        compatible \u003d \"arm, manifest-cot-descriptors\";\n\n        soc_fw_content_cert: soc_fw_content_cert{\n                /* Properties used to authenticate the certificate itself. */\n                image-id \u003d \u003cSOC_FW_CONTENT_CERT_ID\u003e;\n\t\tparent \u003d \u003c\u0026soc_fw_key_cert\u003e;\n\t\tsigning-key \u003d \u003c\u0026soc_fw_content_pk\u003e;\n\t\tantirollback-counter \u003d \u003c\u0026trusted_nv_counter\u003e;\n\n                /* Properties used to authenticate children images of this certificate. */\n\t\tsoc_fw_hash: soc_fw_hash {\n\t\t\toid \u003d SOC_AP_FW_HASH_OID;\n\t\t};\n\t\tsoc_fw_config_hash: soc_fw_config_hash {\n\t\t\toid \u003d SOC_FW_CONFIG_HASH_OID;\n\t\t};\n\t};\n        certificate2 { ... };\n    };\n\n    images {\n        compatible \u003d \"arm, img-cot-descriptors\";\n\n        soc_fw_config {\n\t\timage-id \u003d \u003cSOC_FW_CONFIG_ID\u003e;\n\t\tparent \u003d \u003c\u0026soc_fw_content_cert\u003e;\n\t\thash \u003d \u003c\u0026soc_fw_config_hash\u003e;\n\t};\n\timage2 { ... };\n    };\n };\n\nHope we all agree on this now? If yes, will update the code accordingly.",
      "parentUuid": "9951a9e6_37493aea",
      "revId": "562036c7866dda20333c80d649b3e4c2abdc8358",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2abecb8f_f6dad445",
        "filename": "fdts/cot_descriptors.dtsi",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2020-07-06T16:28:53Z",
      "side": 1,
      "message": "looks good to me. This is a general comment. For the compatible strings, i would generally recommend keeping it short. These strings all turn into constant data in the final image and increase the size of the image. Having long strings as we move more and more to fconf, could start increasing image sizes. Might be interesting to see how much const data increases with and without fconf by using the \"size\" tool.",
      "parentUuid": "53c2cda6_6d797b62",
      "revId": "562036c7866dda20333c80d649b3e4c2abdc8358",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38970c20_b1090915",
        "filename": "fdts/cot_descriptors.dtsi",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2020-07-06T17:06:46Z",
      "side": 1,
      "message": "Agree! Let me update compatible string as below:\n1. compatible \u003d \"arm, manifest-descs\"\n2. compatible \u003d \"arm, img-descs\"\n\nConst data is bound to increase as we keep on moving modules to fconf. \nAgree, We can do the exercise at some point to check const data with and without fconf but how useful that data will be to do the size reduction.",
      "parentUuid": "2abecb8f_f6dad445",
      "revId": "562036c7866dda20333c80d649b3e4c2abdc8358",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09c5a6cf_ecdabc7a",
        "filename": "fdts/cot_descriptors.dtsi",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2020-06-29T16:55:51Z",
      "side": 1,
      "message": "can this be called issuer key to be more accurate? sign-key is not clear. It could be read as signed-key(subject key) or signing-key(issuer key)..",
      "range": {
        "startLine": 50,
        "startChar": 2,
        "endLine": 50,
        "endChar": 10
      },
      "revId": "562036c7866dda20333c80d649b3e4c2abdc8358",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a03fbf64_c4a54b6d",
        "filename": "fdts/cot_descriptors.dtsi",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2020-06-29T17:48:41Z",
      "side": 1,
      "message": "Make sense. Will do the modifications and also, update binding accordingly.",
      "parentUuid": "09c5a6cf_ecdabc7a",
      "range": {
        "startLine": 50,
        "startChar": 2,
        "endLine": 50,
        "endChar": 10
      },
      "revId": "562036c7866dda20333c80d649b3e4c2abdc8358",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "537c6bf0_62e487f8",
        "filename": "fdts/cot_descriptors.dtsi",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2020-06-30T02:14:52Z",
      "side": 1,
      "message": "As per binding document this property name should be \"signing-key\" as it is only used by non-root certificates.\nI will do the modification to change property name to \"signing-key\". Let me know your thoughts?",
      "parentUuid": "a03fbf64_c4a54b6d",
      "range": {
        "startLine": 50,
        "startChar": 2,
        "endLine": 50,
        "endChar": 10
      },
      "revId": "562036c7866dda20333c80d649b3e4c2abdc8358",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    }
  ]
}