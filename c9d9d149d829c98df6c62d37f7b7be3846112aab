{
  "comments": [
    {
      "key": {
        "uuid": "8fa479e2_5af90f0e",
        "filename": "drivers/arm/gic/v3/gic600.c",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1000208
      },
      "writtenOn": "2019-10-23T21:02:58Z",
      "side": 1,
      "message": "How is this different then 0?",
      "revId": "c9d9d149d829c98df6c62d37f7b7be3846112aab",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c81bef4_a2d549af",
        "filename": "drivers/arm/gic/v3/gic600.c",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2019-10-24T10:28:07Z",
      "side": 1,
      "message": "This is not different to 0, but explicitly states which bits should be set to what values to define power state if operating through the core when RDAG should be set to 0.\nI\u0027ll restore the original macro definition.",
      "parentUuid": "8fa479e2_5af90f0e",
      "revId": "c9d9d149d829c98df6c62d37f7b7be3846112aab",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "35dddad5_f9eeeecc",
        "filename": "drivers/arm/gic/v3/gic600.c",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1000208
      },
      "writtenOn": "2019-10-23T21:02:58Z",
      "side": 1,
      "message": "Its same as existing define, why addition of obfuscate code which results into nothing?\n#define PWRR_OFF\t(1 \u003c\u003c PWRR_RDPD_SHIFT)",
      "revId": "c9d9d149d829c98df6c62d37f7b7be3846112aab",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b1e2e39c_06894c53",
        "filename": "drivers/arm/gic/v3/gic600.c",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2019-10-24T10:28:07Z",
      "side": 1,
      "message": "see above.",
      "parentUuid": "35dddad5_f9eeeecc",
      "revId": "c9d9d149d829c98df6c62d37f7b7be3846112aab",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe34ea28_a8e9cdbe",
        "filename": "drivers/arm/gic/v3/gic600.c",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2019-09-26T22:37:22Z",
      "side": 1,
      "message": "I am a bit confused after reading the TRM. If I understood the GICR_PWRR register bit definitions correctly, I think gicr_write_pwrr() must be executed before gicr_wait_group_not_in_transit() function. Here is why: At reset, Redistributors are considered to be powered down. Hence by executing gicr_write_pwrr(), we set the \"intention\"(RDGPD) to power up (\u003d0) which has to match with the actual state (RDGPO). Once they are same, we check if Redistributor has accepted the request and has been powered down (RDPD\u003d\u003d0).",
      "revId": "c9d9d149d829c98df6c62d37f7b7be3846112aab",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cee217e4_b8cf593e",
        "filename": "drivers/arm/gic/v3/gic600.c",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1000105
      },
      "writtenOn": "2019-09-27T09:33:22Z",
      "side": 1,
      "message": "Please the powerup and powerdown sequences in 3.6.1 Redistributor power management of Arm® CoreLink™ GIC-600 Generic Interrupt Controller\nRevision: r1p6\nTechnical Reference Manual",
      "parentUuid": "fe34ea28_a8e9cdbe",
      "revId": "c9d9d149d829c98df6c62d37f7b7be3846112aab",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d4e45d3_1122fbac",
        "filename": "drivers/arm/gic/v3/gic600.c",
        "patchSetId": 1
      },
      "lineNbr": 73,
      "author": {
        "id": 1000208
      },
      "writtenOn": "2019-10-23T21:02:58Z",
      "side": 1,
      "message": "} while ((gicr_read_pwrr(base) \u0026 PWRR_RDPD) \u003d\u003d PWRR_ON);\n\nAs per the powerup sequence in 3.6.1 section, please note PWRR_ON is 0.\n\n // Check access, if RDPD \u003d\u003d 0 then powered on.\nuntil (GICR_PWRR.RDPD \u003d\u003d 0)",
      "revId": "c9d9d149d829c98df6c62d37f7b7be3846112aab",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    }
  ]
}