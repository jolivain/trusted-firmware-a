{
  "comments": [
    {
      "key": {
        "uuid": "38929d31_e1e43ad8",
        "filename": "drivers/arm/gic/v3/gic600_multichip.c",
        "patchSetId": 8
      },
      "lineNbr": 52,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2019-10-29T13:13:35Z",
      "side": 1,
      "message": "This function may not be required.",
      "range": {
        "startLine": 52,
        "startChar": 12,
        "endLine": 52,
        "endChar": 43
      },
      "revId": "5cef1c4694dafd8687af3a30f0a32f05a9720938",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b7e866e2_48660c7e",
        "filename": "drivers/arm/gic/v3/gic600_multichip.c",
        "patchSetId": 8
      },
      "lineNbr": 82,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2019-10-29T13:13:35Z",
      "side": 1,
      "message": "ensure PUP \u003d\u003d 0 before starting write.",
      "revId": "5cef1c4694dafd8687af3a30f0a32f05a9720938",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "614cb612_4844d524",
        "filename": "drivers/arm/gic/v3/gic600_multichip.c",
        "patchSetId": 8
      },
      "lineNbr": 113,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2019-10-29T13:13:35Z",
      "side": 1,
      "message": "The init() function should confirm this. Hence there is no point in every function doing this unless they are exported externally.",
      "range": {
        "startLine": 103,
        "startChar": 0,
        "endLine": 113,
        "endChar": 2
      },
      "revId": "5cef1c4694dafd8687af3a30f0a32f05a9720938",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "622a0ea6_028796d4",
        "filename": "drivers/arm/gic/v3/gic600_multichip.c",
        "patchSetId": 8
      },
      "lineNbr": 120,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2019-10-29T13:13:35Z",
      "side": 1,
      "message": "This difference has to be a multiple of 32 according to the specification. Enhance assertion for the same.",
      "range": {
        "startLine": 120,
        "startChar": 1,
        "endLine": 120,
        "endChar": 34
      },
      "revId": "5cef1c4694dafd8687af3a30f0a32f05a9720938",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d5a40ee0_069de5f1",
        "filename": "drivers/arm/gic/v3/gic600_multichip.c",
        "patchSetId": 8
      },
      "lineNbr": 141,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2019-10-29T13:13:35Z",
      "side": 1,
      "message": "This seems to be wrong. The spec says : \nAfter writing to GICD_CHIPRy,\n\nPoll GICD_DCHIPR until bit PUP \u003d\u003d 0, indicating that the connection is complete.\n\nI couldn\u0027t find any reference in the spec to read the GICD_CHIPR\u003cn\u003e.PUP. All the references seem to be to GICD_DCHIPR.PUP bit.",
      "range": {
        "startLine": 140,
        "startChar": 0,
        "endLine": 141,
        "endChar": 60
      },
      "revId": "5cef1c4694dafd8687af3a30f0a32f05a9720938",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dda5bfa5_3af315e2",
        "filename": "drivers/arm/gic/v3/gic600_multichip.c",
        "patchSetId": 8
      },
      "lineNbr": 148,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2019-10-29T13:13:35Z",
      "side": 1,
      "message": "This can be ORRed with the chipr_n_val",
      "range": {
        "startLine": 148,
        "startChar": 4,
        "endLine": 148,
        "endChar": 42
      },
      "revId": "5cef1c4694dafd8687af3a30f0a32f05a9720938",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa750aa_cd3ba9f5",
        "filename": "drivers/arm/gic/v3/gic600_multichip.c",
        "patchSetId": 8
      },
      "lineNbr": 160,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2019-10-29T13:13:35Z",
      "side": 1,
      "message": "I think this should be an assertion that GICD_CHIPSR.RTS \u003d\u003d 2. This cannot be \"updating\" if PUP \u003d\u003d 0.",
      "range": {
        "startLine": 160,
        "startChar": 1,
        "endLine": 160,
        "endChar": 39
      },
      "revId": "5cef1c4694dafd8687af3a30f0a32f05a9720938",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cec5c697_e631de29",
        "filename": "drivers/arm/gic/v3/gic600_multichip.c",
        "patchSetId": 8
      },
      "lineNbr": 175,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2019-10-29T13:13:35Z",
      "side": 1,
      "message": "We need to enforce sequence here. This init should be called prior to main GICV3_driver init. Disabling the bits may not be the solution.\n\nAdd assertions here to \" Ensure that all Group enables in the GICD_CTLR register are disabled and GICD_CTLR.RWP \u003d\u003d 0\"",
      "range": {
        "startLine": 171,
        "startChar": 1,
        "endLine": 175,
        "endChar": 18
      },
      "revId": "5cef1c4694dafd8687af3a30f0a32f05a9720938",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e223654f_f29d5f9c",
        "filename": "drivers/arm/gic/v3/gic600_multichip.c",
        "patchSetId": 8
      },
      "lineNbr": 179,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2019-10-29T13:13:35Z",
      "side": 1,
      "message": "Doesn\u0027t the current chip have to be the owner? I dont suppose any other chip chip can be owner at this point.",
      "range": {
        "startLine": 178,
        "startChar": 1,
        "endLine": 179,
        "endChar": 29
      },
      "revId": "5cef1c4694dafd8687af3a30f0a32f05a9720938",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "721c25ab_64827a60",
        "filename": "drivers/arm/gic/v3/gic600_multichip.c",
        "patchSetId": 8
      },
      "lineNbr": 183,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2019-10-29T13:13:35Z",
      "side": 1,
      "message": "The SPIs should be validated so that there are no overlapping SPIs.",
      "range": {
        "startLine": 182,
        "startChar": 0,
        "endLine": 183,
        "endChar": 57
      },
      "revId": "5cef1c4694dafd8687af3a30f0a32f05a9720938",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37b11c8a_c2cc3e4f",
        "filename": "include/drivers/arm/gic600_multichip.h",
        "patchSetId": 8
      },
      "lineNbr": 44,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2019-10-29T13:13:35Z",
      "side": 1,
      "message": "I have questions on whether this can be any other value other than the primary chip (the chip with the primary CPU). \n\nAlso I dont know if all the 16 chips will be powered up at reset ? Need to understand about the possibilities of power control available to each of the distributors.",
      "range": {
        "startLine": 44,
        "startChar": 14,
        "endLine": 44,
        "endChar": 22
      },
      "revId": "5cef1c4694dafd8687af3a30f0a32f05a9720938",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": false
    }
  ]
}