{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "13c4365a_32408273",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 16
      },
      "lineNbr": 0,
      "author": {
        "id": 1000340
      },
      "writtenOn": "2022-02-24T19:12:08Z",
      "side": 1,
      "message": "Ran CI+2 on the topmost patch set and no fails due to this patch stack.",
      "revId": "b469ebce65954b1f8cb87d3683ede156326cc925",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23f3e6cb_e160db5e",
        "filename": "lib/mpmm/mpmm.c",
        "patchSetId": 16
      },
      "lineNbr": 2,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2022-02-24T20:56:29Z",
      "side": 1,
      "message": "2021-2022",
      "range": {
        "startLine": 2,
        "startChar": 17,
        "endLine": 2,
        "endChar": 21
      },
      "revId": "b469ebce65954b1f8cb87d3683ede156326cc925",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97be7b29_764e115c",
        "filename": "lib/mpmm/mpmm.c",
        "patchSetId": 16
      },
      "lineNbr": 72,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2022-02-24T20:56:29Z",
      "side": 1,
      "message": "\\n",
      "range": {
        "startLine": 72,
        "startChar": 43,
        "endLine": 72,
        "endChar": 44
      },
      "revId": "b469ebce65954b1f8cb87d3683ede156326cc925",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "562e7f9e_e0489d16",
        "filename": "lib/mpmm/mpmm.c",
        "patchSetId": 16
      },
      "lineNbr": 83,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2022-02-24T20:56:29Z",
      "side": 1,
      "message": "I feel there might be a simpler way to achieve the same. Isn\u0027t it possible to override ENABLE_MPMM flag in the makefile when the errata is enabled? something like below. Let me know your opinion.\n\nifeq ($(ERRATA_A510_2250311), 1)\n   \u003cprint the warning\u003e\n   ENABLE_MPMM \u003d 0\nendif",
      "revId": "b469ebce65954b1f8cb87d3683ede156326cc925",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73702d62_f160b25c",
        "filename": "lib/mpmm/mpmm.c",
        "patchSetId": 16
      },
      "lineNbr": 83,
      "author": {
        "id": 1000340
      },
      "writtenOn": "2022-02-24T21:31:05Z",
      "side": 1,
      "message": "Unfortunately, the check has to be done at runtime, since it only applies to some CPU revisions and the revision is not known at compile time.",
      "parentUuid": "562e7f9e_e0489d16",
      "revId": "b469ebce65954b1f8cb87d3683ede156326cc925",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "45f5d2a1_d54b1f9f",
        "filename": "lib/mpmm/mpmm.c",
        "patchSetId": 16
      },
      "lineNbr": 83,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2022-02-24T22:13:41Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "73702d62_f160b25c",
      "revId": "b469ebce65954b1f8cb87d3683ede156326cc925",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}