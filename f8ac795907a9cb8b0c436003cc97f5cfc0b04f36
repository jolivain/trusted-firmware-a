{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c880ebc7_817dc915",
        "filename": "include/plat/common/platform.h",
        "patchSetId": 5
      },
      "lineNbr": 48,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2024-01-18T09:13:56Z",
      "side": 1,
      "message": "I find the current naming convention a bit confusing. The ``next_boot_source`` could encompass two scenarios:\n\n1. A backup image located within a different boot media (e.g., flash, MMC, USB) OR\n2. A backup image within the same boot media, featuring multiple copies of the same imagesâ€” similar to the approach taken with the implemented backup_partitions operations.\n\nFor scenario (2), it is a valid case that the PSA FWU implementation should utilize the same media and could have multiple copies of the same image (e.g., FIP-A-1, FIP-A-2) for trial purposes in case of failure before switching the bank.\n\nIMO, using ``next_boot_media`` instead of ``next_boot_source`` would be more intuitive, as it helps segregate operations related to different media. Additionally, renaming the ``backup_partitions`` to ``single_media_backup_partitions`` would make the operation more explicit.\n\nAlternatively, considering a unified operation to cover both cases. In the case of FWU, we could restrict loading images from different media and only allow redundant copies within the same media. I\u0027m not pretty sure how easy it is though.",
      "range": {
        "startLine": 48,
        "startChar": 1,
        "endLine": 48,
        "endChar": 31
      },
      "revId": "f8ac795907a9cb8b0c436003cc97f5cfc0b04f36",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71bd8225_133aba4f",
        "filename": "include/plat/common/platform.h",
        "patchSetId": 5
      },
      "lineNbr": 48,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2024-01-18T09:57:01Z",
      "side": 1,
      "message": "OK to change `next_boot_source` to `next_boot_media` if we keep the 2 handlers.\n\nFor the unified API, as it is platform implementation, it shouldn\u0027t be an issue here in the common code. Especially if the previous plat_try_next_boot_source() function is not used, even for downstream platforms (waiting for Scott reply on previous patch).",
      "parentUuid": "c880ebc7_817dc915",
      "range": {
        "startLine": 48,
        "startChar": 1,
        "endLine": 48,
        "endChar": 31
      },
      "revId": "f8ac795907a9cb8b0c436003cc97f5cfc0b04f36",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d71f1bc_a72d4b3f",
        "filename": "include/plat/common/platform.h",
        "patchSetId": 5
      },
      "lineNbr": 48,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2024-01-22T14:32:17Z",
      "side": 1,
      "message": "Thanks. Okay, let\u0027s wait for Scott\u0027s reply.",
      "parentUuid": "71bd8225_133aba4f",
      "range": {
        "startLine": 48,
        "startChar": 1,
        "endLine": 48,
        "endChar": 31
      },
      "revId": "f8ac795907a9cb8b0c436003cc97f5cfc0b04f36",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6af5995b_6207af61",
        "filename": "include/plat/common/platform.h",
        "patchSetId": 5
      },
      "lineNbr": 48,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2024-02-05T09:13:17Z",
      "side": 1,
      "message": "Given Scott\u0027s answer, I am in favour of the unified API, which will select the next image to try loading, irrespective of whether this image is stored on the same or a different boot media (these details would be sorted out by the platform).\n\nWe could call it `select_next_instance(image_id)` or something like that?\n\nThis should bring a nice cleanup in `load_auth_image()` implementation, as we should be able to get rid of the `PSA_FWU_SUPPORT` #ifdefry and simply do:\n\n```\n\tdo {\n\t\terr \u003d load_auth_image_internal(image_id, image_data);\n\t} while ((err !\u003d 0) \u0026\u0026 (select_next_instance(image_id) !\u003d 0));\n```",
      "parentUuid": "1d71f1bc_a72d4b3f",
      "range": {
        "startLine": 48,
        "startChar": 1,
        "endLine": 48,
        "endChar": 31
      },
      "revId": "f8ac795907a9cb8b0c436003cc97f5cfc0b04f36",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}