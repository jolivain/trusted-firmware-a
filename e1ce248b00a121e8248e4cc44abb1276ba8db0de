{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b3f6429a_a4ae16de",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2024-02-20T15:25:32Z",
      "side": 1,
      "message": "Just as a sanity check, have you checked the memory footprint with and without CTX_INCLUDE_EL2?",
      "revId": "e1ce248b00a121e8248e4cc44abb1276ba8db0de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b754209d_09e1dcf9",
        "filename": "include/lib/el3_runtime/aarch64/context.h",
        "patchSetId": 2
      },
      "lineNbr": 305,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2024-02-20T15:25:32Z",
      "side": 1,
      "message": "It would be nice if there was no `ctx_` prefix as it\u0027s a member of a ctx struct and requires accessors anyway. \n\nThis way\nread_el2_ctx_common(get_el2_sysregs_ctx(ctx), cm, ctx_mdcr_el2);\ncan become\nread_el2_ctx_common(get_el2_sysregs_ctx(ctx), cm, mdcr_el2);\nwhich makes a lot more sense (and grep might be friendlier)",
      "range": {
        "startLine": 305,
        "startChar": 10,
        "endLine": 305,
        "endChar": 14
      },
      "revId": "e1ce248b00a121e8248e4cc44abb1276ba8db0de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06b91b66_fd217db6",
        "filename": "include/lib/el3_runtime/aarch64/context.h",
        "patchSetId": 2
      },
      "lineNbr": 477,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2024-02-20T15:25:32Z",
      "side": 1,
      "message": "feat is coded into the name of the function, can you drop it?",
      "range": {
        "startLine": 477,
        "startChar": 31,
        "endLine": 477,
        "endChar": 35
      },
      "revId": "e1ce248b00a121e8248e4cc44abb1276ba8db0de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e4ef6e8_883c75b6",
        "filename": "include/lib/el3_runtime/aarch64/context.h",
        "patchSetId": 2
      },
      "lineNbr": 481,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2024-02-20T15:25:32Z",
      "side": 1,
      "message": "read expands to 0, why not write? If you have it disabled it will expand to an empty string and cause a warning",
      "range": {
        "startLine": 480,
        "startChar": 0,
        "endLine": 481,
        "endChar": 46
      },
      "revId": "e1ce248b00a121e8248e4cc44abb1276ba8db0de",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}