diff --git a/plat/mediatek/common/drivers/rtc/rtc_common.c b/plat/mediatek/common/drivers/rtc/rtc_common.c
old mode 100644
new mode 100755
diff --git a/plat/mediatek/mt8192/drivers/pmic/pmic.c b/plat/mediatek/mt8192/drivers/pmic/pmic.c
old mode 100644
new mode 100755
index cca441397..e39c18ed2
--- a/plat/mediatek/mt8192/drivers/pmic/pmic.c
+++ b/plat/mediatek/mt8192/drivers/pmic/pmic.c
@@ -4,10 +4,26 @@
  * SPDX-License-Identifier: BSD-3-Clause
  */
 
+#include <stdint.h>
 #include <pmic.h>
 #include <pmic_wrap_init.h>
+#include <common/debug.h>
+
+uint16_t pmic_chip_id(void)
+{
+	uint32_t rdata = 0;
+	int32_t ret;
+
+	ret = pwrap_read(PMIC_HWCID, &rdata);
+	ERROR("[%s] ret %d\n", __func__, ret);
+
+	return (uint16_t)rdata;
+}
 
 void pmic_power_off(void)
 {
-	pwrap_write(PMIC_PWRHOLD, 0x0);
+	int32_t ret;
+
+	ret = pwrap_write(PMIC_PWRHOLD, 0x0);
+	ERROR("[%s] ret %d\n", __func__, ret);
 }
diff --git a/plat/mediatek/mt8192/drivers/pmic/pmic.h b/plat/mediatek/mt8192/drivers/pmic/pmic.h
old mode 100644
new mode 100755
index aac22afa3..907f0aceb
--- a/plat/mediatek/mt8192/drivers/pmic/pmic.h
+++ b/plat/mediatek/mt8192/drivers/pmic/pmic.h
@@ -7,9 +7,11 @@
 #ifndef PMIC_H
 #define PMIC_H
 
+#define PMIC_HWCID 0x8
 #define PMIC_PWRHOLD 0xa08
 
 /* external API */
 void pmic_power_off(void);
+uint16_t pmic_chip_id(void);
 
 #endif /* PMIC_H */
diff --git a/plat/mediatek/mt8192/plat_pm.c b/plat/mediatek/mt8192/plat_pm.c
old mode 100644
new mode 100755
index 6dfb6c905..7d2be3cfd
--- a/plat/mediatek/mt8192/plat_pm.c
+++ b/plat/mediatek/mt8192/plat_pm.c
@@ -338,13 +338,17 @@ static void plat_get_sys_suspend_power_state(psci_power_state_t *req_state)
 
 static void __dead2 plat_mtk_system_off(void)
 {
-	INFO("MTK System Off\n");
-
+	console_switch_state(CONSOLE_FLAG_BOOT);
+	ERROR("MTK System Off: before rtc_power_off_sequence, chip id 0x%x\n", pmic_chip_id());
 	rtc_power_off_sequence();
+
+	ERROR("MTK System Off: before power-off\n");
 	pmic_power_off();
+	ERROR("MTK System Off: before wfi, chip id 0x%x\n", pmic_chip_id());
 
 	wfi();
 	ERROR("MTK System Off: operation not handled.\n");
+	console_switch_state(CONSOLE_FLAG_RUNTIME);
 	panic();
 }
 
@@ -352,12 +356,14 @@ static void __dead2 plat_mtk_system_reset(void)
 {
 	struct bl_aux_gpio_info *gpio_reset = plat_get_mtk_gpio_reset();
 
+	console_switch_state(CONSOLE_FLAG_BOOT);
 	INFO("MTK System Reset\n");
 
 	gpio_set_value(gpio_reset->index, gpio_reset->polarity);
 
 	wfi();
 	ERROR("MTK System Reset: operation not handled.\n");
+	console_switch_state(CONSOLE_FLAG_RUNTIME);
 	panic();
 }
 
