{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3b1fdcd2_ce3b5a6c",
        "filename": "include/lib/extensions/ras.h",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2023-07-19T15:00:12Z",
      "side": 1,
      "message": "is this common to all platforms?",
      "range": {
        "startLine": 18,
        "startChar": 8,
        "endLine": 18,
        "endChar": 24
      },
      "revId": "4006ac86689fb2e9f3820e94b67056372cc46e78",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28b109f7_0e0bd717",
        "filename": "include/lib/extensions/ras.h",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1000510
      },
      "writtenOn": "2023-07-20T04:51:15Z",
      "side": 1,
      "message": "Yes",
      "parentUuid": "3b1fdcd2_ce3b5a6c",
      "range": {
        "startLine": 18,
        "startChar": 8,
        "endLine": 18,
        "endChar": 24
      },
      "revId": "4006ac86689fb2e9f3820e94b67056372cc46e78",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ebc1b34_0289c0e6",
        "filename": "include/lib/extensions/ras.h",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2023-07-20T16:35:37Z",
      "side": 1,
      "message": "sorry, did ARM define interrupt 17 as CORE_FAULT_IRQ for all ARMv8 cores in the world? thats what i meant by common to all platforms.\nIf yes, do you have a pointer to the document that says so?",
      "parentUuid": "28b109f7_0e0bd717",
      "range": {
        "startLine": 18,
        "startChar": 8,
        "endLine": 18,
        "endChar": 24
      },
      "revId": "4006ac86689fb2e9f3820e94b67056372cc46e78",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1cf033ef_a04827f9",
        "filename": "include/lib/extensions/ras.h",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1000510
      },
      "writtenOn": "2023-07-24T07:20:17Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "0ebc1b34_0289c0e6",
      "range": {
        "startLine": 18,
        "startChar": 8,
        "endLine": 18,
        "endChar": 24
      },
      "revId": "4006ac86689fb2e9f3820e94b67056372cc46e78",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "426f2415_2997b936",
        "filename": "lib/psci/psci_on.c",
        "patchSetId": 2
      },
      "lineNbr": 206,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2023-07-19T15:00:12Z",
      "side": 1,
      "message": "i dont believe this is the right place to call the function. TF-A already has hooks to enable redistributors when a core comes up (can try to find out where), and we should probably enable it there. moreoever, all a platform would need to do is list the PPI in its interrupt list, and this should already work.. not sure this patch is needed at all..",
      "range": {
        "startLine": 206,
        "startChar": 1,
        "endLine": 206,
        "endChar": 19
      },
      "revId": "4006ac86689fb2e9f3820e94b67056372cc46e78",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec3ae822_94040e6e",
        "filename": "lib/psci/psci_on.c",
        "patchSetId": 2
      },
      "lineNbr": 206,
      "author": {
        "id": 1000510
      },
      "writtenOn": "2023-07-20T04:51:15Z",
      "side": 1,
      "message": "On first comment (about the hooks to enable redistributors), I believe you are talking about pwr_domain_on_finish callback. If yes, then that is platform specific function and this call is common to all the platforms.\n\nOn the second comment (about adding PPI to the interrupt list). Here are we talking about the \"struct ras_interrupt\" defined by each platform? The interrupt list works fine for SPI\u0027s as the GIC needs to be configured only once for each SPI interrupt ID. For PPI, each core has to configure GIC which at boot only core 0 does. For secondary cores GIC configuration has to be done separately as and when they are up.",
      "parentUuid": "426f2415_2997b936",
      "range": {
        "startLine": 206,
        "startChar": 1,
        "endLine": 206,
        "endChar": 19
      },
      "revId": "4006ac86689fb2e9f3820e94b67056372cc46e78",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be0743c8_d7a2567b",
        "filename": "lib/psci/psci_on.c",
        "patchSetId": 2
      },
      "lineNbr": 206,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2023-07-20T16:35:37Z",
      "side": 1,
      "message": "No, talking about plat_arm_gic_pcpu_init and gicv3_rdistif_init. We have to reenable the distributor everytime the core comes back on. And the gicv3 driver supports PPI,SGI and SPI. This is a PPI, so can be added to the GICv3 driver platform interrupt list to be enabled on every power on.",
      "parentUuid": "ec3ae822_94040e6e",
      "range": {
        "startLine": 206,
        "startChar": 1,
        "endLine": 206,
        "endChar": 19
      },
      "revId": "4006ac86689fb2e9f3820e94b67056372cc46e78",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9ccbdd8f_78a01aed",
        "filename": "lib/psci/psci_on.c",
        "patchSetId": 2
      },
      "lineNbr": 206,
      "author": {
        "id": 1000510
      },
      "writtenOn": "2023-07-24T07:20:17Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "be0743c8_d7a2567b",
      "range": {
        "startLine": 206,
        "startChar": 1,
        "endLine": 206,
        "endChar": 19
      },
      "revId": "4006ac86689fb2e9f3820e94b67056372cc46e78",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}