{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1adc8be9_31309ed3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 13,
      "author": {
        "id": 1000467
      },
      "writtenOn": "2022-04-11T09:02:53Z",
      "side": 1,
      "message": "NIT: remove",
      "range": {
        "startLine": 13,
        "startChar": 58,
        "endLine": 13,
        "endChar": 60
      },
      "revId": "ec8fb23733438a05b50e819d6ecd9c9aa78bd61c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e37a34c7_ed549167",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000467
      },
      "writtenOn": "2022-04-11T09:02:53Z",
      "side": 1,
      "message": "Small nit to address but otherwise looks good to me\n",
      "revId": "ec8fb23733438a05b50e819d6ecd9c9aa78bd61c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a900a84_3a1722eb",
        "filename": "tools/sptool/sptool.py",
        "patchSetId": 7
      },
      "lineNbr": 131,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2022-04-12T19:28:25Z",
      "side": 1,
      "message": "fundamentally there is a chicken and egg problem with the way SPs are packaged. The partition manifest contains the entrypoint offset and this needs to be in the manifest before the size of the partition manifest is known.. If the manifest gets large (to pass impdef details), then the entrypoint needs to be adjusted accordingly...\n\nideally the sp package should take the partition manifest, the boot info and the image, and create the package in appropriate offsets, as opposed to expecting the caller to specify offsets. The tool can then patch the manifest with the appropriate entrypoint offset in the manifest, so long as space for the field is reserved appropriately..\n\nI think this is necessary to avoid hard coding limits on how big the manifest etc should be..\n\nlet me know if the concern is not clear...",
      "range": {
        "startLine": 131,
        "startChar": 30,
        "endLine": 131,
        "endChar": 36
      },
      "revId": "ec8fb23733438a05b50e819d6ecd9c9aa78bd61c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f591d5b6_63488c16",
        "filename": "tools/sptool/sptool.py",
        "patchSetId": 7
      },
      "lineNbr": 131,
      "author": {
        "id": 1000341
      },
      "writtenOn": "2022-04-13T08:42:26Z",
      "side": 1,
      "message": "I see what you mean, though I am not sure if removing the offsets will make it such that you don\u0027t need to adjust the partition manifest as the partition package grows.\n\nLet\u0027s consider the following case. We are starting to \"cook up\" an SP, and the sptool does what you said, i.e. it packages the boot info section, the SP manifest, and the image. We know the manifest is very small (as we are just starting development and we are keeping below 4k), at this point the entry-point offset would need to be at 0x1000, which is the lowest granule for page tables that hafnium supports. If eventually, the manifest surpasses the 0x1000 size, the sptool would pack everything and set the img offset at 0x2000. You\u0027d need to manually update the SP\u0027s manifest at this point...\n\nIMO Having the offsets in the sptool doesn\u0027t solve or aggravate the situation described above, in a meaningful way... The default value can be changed if it is of concern to you. As soon as  the pm increases in size beyond the default value, you\u0027d need to specify the offset to the sptool, and change the manifest. The added step is to specify the image offset to cater for the size of the pm manifest. To note that the tool would give an error if there isn\u0027t space for the sp manifest, which helps to detect this situation fairly easily:\nhttps://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/14507/7/tools/sptool/sptool.py#61\n\nOffsets in the sptool provide a means to:\n- configure the size of the region to be used for the boot information. Currently, the only use case we have is the ff-a manifest, however, the specification specifies that other IMPDEF values can be used. Thus, allows for some level of the configuration of this space, considering we want to have this space allocated as part of the sp_pkg, to make contiguous the regions of boot info descriptors and content (specifically the pm).\n- Img offset in sptool is useful to adjust the alignment of the image. In case we want to have SPs whose lowest translation granule is either 16kb or 64kb. When packing everything, the sptool was setting the image to a 4kb align address... It also helps to make space for the pm manifest, by increasing the img offset manually.\n\nSomething that could be done is to add an option to the sptool to pack everything, (as it was doing up to this point). This option would be mutually exclusive to specifying the pm and img offsets to the sptool.\n\nStill, this doesn\u0027t remove the need to change the entry point in the pm manifest as it grows... Both approaches would need this to happen. To avoid such a hurdle, I think we could look to automate it as part of:\n https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/14506/6/tools/sptool/sp_mk_generator.py\nI am not sure if there are points against automating this, just bringing this up for discussion as an alternative to look into...\n\nLet me know if anything of the above is unclear, or if I misunderstood any of your points.",
      "parentUuid": "8a900a84_3a1722eb",
      "range": {
        "startLine": 131,
        "startChar": 30,
        "endLine": 131,
        "endChar": 36
      },
      "revId": "ec8fb23733438a05b50e819d6ecd9c9aa78bd61c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e160fe1c_72628f50",
        "filename": "tools/sptool/sptool.py",
        "patchSetId": 7
      },
      "lineNbr": 131,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2022-04-13T08:54:20Z",
      "side": 1,
      "message": "Not willing to rephrase but to summarize things a bit, the three combined requirements were:\n* Add more flexibility to allow for a larger manifest size.\n* Add ability for testing a SP which uses a S1 translation granule size larger than 4KB (aka 16KB or 64KB).\n* Integrate the FF-A v1.1 boot protocol.\n\nLooks to me all three bullets are ticked.\nI appreciate we can always integrate/automate better the build flow. Though would it be possible to start with the current change sets (which are already great improvements from my perspective), and improve in later iterations when/if required?",
      "parentUuid": "f591d5b6_63488c16",
      "range": {
        "startLine": 131,
        "startChar": 30,
        "endLine": 131,
        "endChar": 36
      },
      "revId": "ec8fb23733438a05b50e819d6ecd9c9aa78bd61c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef68b8cc_859178d1",
        "filename": "tools/sptool/sptool.py",
        "patchSetId": 7
      },
      "lineNbr": 131,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2022-04-13T12:18:58Z",
      "side": 1,
      "message": "BTW complementing this, PM and image offsets have default values, so there is no strict need to specify in the json file. Obvioulsy the SP ep entry point needs an update at least once but should not change later unless TF-A/sptool defaults changes.",
      "parentUuid": "e160fe1c_72628f50",
      "range": {
        "startLine": 131,
        "startChar": 30,
        "endLine": 131,
        "endChar": 36
      },
      "revId": "ec8fb23733438a05b50e819d6ecd9c9aa78bd61c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ae9dac3_5529f31d",
        "filename": "tools/sptool/sptool.py",
        "patchSetId": 7
      },
      "lineNbr": 131,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2022-04-13T18:51:19Z",
      "side": 1,
      "message": "i dont think 16KB or 64kb is sufficient and this would be technical debt carried forward. we already have manifests potentially growing larger than that. What i\u0027m asking for is to figure out the offsets in the script as opposed to have the caller pass in or even have defaults. Why do we even need default offsets? Why can the offsets not be calculated? the change to do this does not seem large.\n\nI agree this is an improvement but i think moving to a fully dynamic model is hardly a stretch given where we are already today.\n\njoao, i\u0027m not saying my proposal removes the need to update the entry point offset, i\u0027m simply asking you to do it as part of this script and releive the burden from the sp developer. The SP writer puts in a dummy value and you patch it. That seems more natural than having the developer figure out the DTB size, and then filling in the entry point offset based on that and then recompile the dts with the appropriate entry point..",
      "parentUuid": "ef68b8cc_859178d1",
      "range": {
        "startLine": 131,
        "startChar": 30,
        "endLine": 131,
        "endChar": 36
      },
      "revId": "ec8fb23733438a05b50e819d6ecd9c9aa78bd61c",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}