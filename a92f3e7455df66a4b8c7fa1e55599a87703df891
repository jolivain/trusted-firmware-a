{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "74e12e77_72c13e6d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2021-03-29T14:17:09Z",
      "side": 1,
      "message": "I\u0027ve not reviewed the patch just yet. Just 2 early comments.\n\nOne is about the documentation updates (see inline comment).\n\nThe other is about CI support, I suspect we\u0027re gonna need to extend the CI scripts to get this properly tested in the CI loop going forward. I see that PIE support has been unconditionally enabled for STM32MP1 platform in the next patch so at least we\u0027ll get the build test for free, as there\u0027s already one for your platform:\n\nhttps://git.trustedfirmware.org/ci/tf-a-ci-scripts.git/tree/tf_config/stm32mp1-default\nhttps://git.trustedfirmware.org/ci/tf-a-ci-scripts.git/tree/group/tf-l1-build-plat/stm32mp1-default:nil\n\nBut of course, building the code is not enough to prove that it works as expected, we also need to run it on the target. I am confident you\u0027ve tested this patch on your platform but I am concerned about ensuring we\u0027ve got proper regression checks in the CI loop for the future. Now, the problem is that there\u0027s no STM32MP1 platform plugged into the CI system (yet?) so this is not an option right now. We could test this on ARM FVPs but looking at the next patch in the stack, enabling PIE support requires some platform changes, it does not work out of the box, so we\u0027d need to schedule this work at our end...\n\nI\u0027ll get back to you on this one after discussing this with my team. If you\u0027ve got any suggestions in this area, please let me know!\n\nFor the record, I am not keen on merging this patch until we\u0027ve got proper regression checks for it in the CI system (or at least, that the CI work is agreed/planned out).",
      "revId": "a92f3e7455df66a4b8c7fa1e55599a87703df891",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d3c7fa91_1f599bd2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2021-04-01T09:45:45Z",
      "side": 1,
      "message": "Hi Sandrine,\n\nThanks for the comments.\n\nI\u0027ve replied inline for the documentation part.\n\nThis of course should be tested in CI. It has been in our downstream code for several months and is tested OK, but it should also be tested on other platforms.\nBy the way, how could we have an STM32MP1 board in CI system?\nI\u0027ll also check internally how this could be handled.\n\nThe platform changes are not so big, but I don\u0027t know if the porting on FVP can easily be done. I\u0027m not sure I\u0027ll have time soon to check that, your team will be faster for this porting I think.\n\n\nBest regards,\nYann",
      "parentUuid": "74e12e77_72c13e6d",
      "revId": "a92f3e7455df66a4b8c7fa1e55599a87703df891",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fbb5e3dc_912a61fe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2021-04-01T11:04:37Z",
      "side": 1,
      "message": "\u003e By the way, how could we have an STM32MP1 board in CI system?\n\nAFAIK, this is not possible just yet but it will be one day. Being able to integrate partners\u0027 boards into the OpenCI has been a goal from day one so I am pretty sure it\u0027s on the OpenCI roadmap, I am just not sure when.\n\n\u003e The platform changes are not so big, but I don\u0027t know if the porting on FVP can easily be done. I\u0027m not sure I\u0027ll have time soon to check that, your team will be faster for this porting I think.\n\nOK I\u0027ll have a look to see if it can easily be ported on FVP. Yes for sure, our team is best placed to do this work.",
      "parentUuid": "d3c7fa91_1f599bd2",
      "revId": "a92f3e7455df66a4b8c7fa1e55599a87703df891",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8916b56c_03ed14f8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2021-04-14T12:25:04Z",
      "side": 1,
      "message": "Hi Yann,\n\nWe had internal discussions about this and unfortunately we think we won\u0027t have enough bandwidth within the team to port this patch for FVP platforms before the v2.5 release. We might log this as a future enhancement in our backlog but for the time being, this patch will have to remain untested in the CI if you want it to make it into the release...\n\nI know you\u0027ve been testing this patch internally but do you think there would be value in replaying your tests using the binaries generated by the CI? This would ensure there\u0027s nothing specific to your test environment.\n\nWe first need to solve the build issues raised by the CI, though (see my comment in the next patch in the series).",
      "parentUuid": "fbb5e3dc_912a61fe",
      "revId": "a92f3e7455df66a4b8c7fa1e55599a87703df891",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0f6e8eb7_ead5aaf0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2021-04-15T13:51:08Z",
      "side": 1,
      "message": "Hi Sandrine,\n\nYes, I think I can test the binaries generated by CI. I\u0027ll look at the compilation issue, and push a new version, with the macro update, and the doc modification.",
      "parentUuid": "8916b56c_03ed14f8",
      "revId": "a92f3e7455df66a4b8c7fa1e55599a87703df891",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16b0223c_b2fe6d25",
        "filename": "docs/getting_started/build-options.rst",
        "patchSetId": 1
      },
      "lineNbr": 255,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2021-03-29T14:17:09Z",
      "side": 1,
      "message": "This text needs updating. Actually keeping this in sync with the code is painful, I suggest we stop listing images that support ENABLE_PIE, this will remove the risk of the doc going stale again the future. Something like:\n\n Note that this is not supported for all firmware images.\n\nOr is it supported for all images with your patch now? I\u0027ve lost track...",
      "range": {
        "startLine": 254,
        "startChar": 40,
        "endLine": 255,
        "endChar": 39
      },
      "revId": "a92f3e7455df66a4b8c7fa1e55599a87703df891",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de62141f_4ec9c602",
        "filename": "docs/getting_started/build-options.rst",
        "patchSetId": 1
      },
      "lineNbr": 255,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2021-04-01T09:45:45Z",
      "side": 1,
      "message": "This only concerns AARCH64 binaries. But I agree this should be precised, and I should add BL32 (SP_min) for AARCH32, which I have only implemented and tested. This may work in BL2_AT_EL3, but the code is not ready, I haven\u0027t tested it, as we do not intend to support that on STM32MP1.\nI may rephrase it this way:\nThis option is currently only supported in BL2_AT_EL3, BL31, and BL32 (TSP) for AARCH64 binaries, and in BL32 (SP_min) for AARCH32.",
      "parentUuid": "16b0223c_b2fe6d25",
      "range": {
        "startLine": 254,
        "startChar": 40,
        "endLine": 255,
        "endChar": 39
      },
      "revId": "a92f3e7455df66a4b8c7fa1e55599a87703df891",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1bd3cae4_95ab6cbd",
        "filename": "docs/getting_started/build-options.rst",
        "patchSetId": 1
      },
      "lineNbr": 255,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2021-04-01T11:04:37Z",
      "side": 1,
      "message": "Sounds good to me!",
      "parentUuid": "de62141f_4ec9c602",
      "range": {
        "startLine": 254,
        "startChar": 40,
        "endLine": 255,
        "endChar": 39
      },
      "revId": "a92f3e7455df66a4b8c7fa1e55599a87703df891",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0360a0b3_4f18a807",
        "filename": "include/common/bl_common.ld.h",
        "patchSetId": 1
      },
      "lineNbr": 122,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2021-04-14T12:25:04Z",
      "side": 1,
      "message": "(minor) It was not straight forward for me to spot the difference with the AArch64 version ;)\nWould it make sense to have a macro, such as:\n\n #if __aarch64__\n #  define RELOC_SECTIONS_PATTERN *(.rela*)\n #else\n #  define RELOC_SECTIONS_PATTERN *(.rel*)\n #endif\n\nand then keep the rest of the RELA_SECTION macro code unchanged?",
      "range": {
        "startLine": 116,
        "startChar": 0,
        "endLine": 122,
        "endChar": 6
      },
      "revId": "a92f3e7455df66a4b8c7fa1e55599a87703df891",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17d0fce9_55be48e0",
        "filename": "include/common/bl_common.ld.h",
        "patchSetId": 1
      },
      "lineNbr": 122,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2021-04-15T13:51:08Z",
      "side": 1,
      "message": "Yes, it should be better, I\u0027ll update the patch.",
      "parentUuid": "0360a0b3_4f18a807",
      "range": {
        "startLine": 116,
        "startChar": 0,
        "endLine": 122,
        "endChar": 6
      },
      "revId": "a92f3e7455df66a4b8c7fa1e55599a87703df891",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}