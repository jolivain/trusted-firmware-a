{
  "comments": [
    {
      "key": {
        "uuid": "4ebdf620_fcdd9321",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2020-05-26T22:21:18Z",
      "side": 1,
      "message": "I am a bit confused. If Denver doesnt implement PMU, how will it be able to leak counters belonging to PMU? Did you mean Denver doesn\u0027t implement Armv8.2-Debug specification?",
      "revId": "0c392673dd786222ddd853e6b7c581744589617f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d852e5a_6f41ffa5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-05-27T04:10:00Z",
      "side": 1,
      "message": "Denver CPUs do not support MDCR_EL3.SCCD bit to indicate support for ARMv8-PMU. This means that the PMCR_EL0 needs to saved.\n\nComment from context.S\n\n\t/* ----------------------------------------------------------\n\t * Check if earlier initialization MDCR_EL3.SCCD to 1 failed,\n\t * meaning that ARMv8-PMU is not implemented and PMCR_EL0\n\t * should be saved in non-secure context.\n\t * ----------------------------------------------------------\n\t */",
      "parentUuid": "4ebdf620_fcdd9321",
      "revId": "0c392673dd786222ddd853e6b7c581744589617f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "556490ed_4bc9fd55",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2020-05-27T17:28:12Z",
      "side": 1,
      "message": "I think the comment is not accurate. If MDCR_EL3.SCCD is not 1, it indicates ARMv8.5-PMU is not implemented. I guess the comment mistakenly says ARMv8-PMU is not implemented. Please help to advise what is the value of the following field of the register ID_AA64DFR0_EL1 for your platform:\n1. PMUVer bit [11:8] \n2. DebugVer, bits [3:0]",
      "parentUuid": "9d852e5a_6f41ffa5",
      "revId": "0c392673dd786222ddd853e6b7c581744589617f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b940ccf8_c3973df4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-05-29T21:38:19Z",
      "side": 1,
      "message": "ID_AA64DFR0_EL1 \u003d 0x10305408 on Tegra194 platforms, which translates to\n\nPMUVer, bits [11:8] \u003d 4 (PMUv3 for Armv8.1)\nDebugVer, bits [3:0] \u003d 8 (Armv8.2 debug architecture)",
      "parentUuid": "556490ed_4bc9fd55",
      "revId": "0c392673dd786222ddd853e6b7c581744589617f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aea00315_ce455151",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2020-06-01T17:09:37Z",
      "side": 1,
      "message": "Thanks for the info. I am skeptic if this change in the reset function is needed. Here is my assumption:\n\nSince t194 platform implements Armv8.2 debug architecture, it is sufficient to do the following to prohibit event counters and cycle counters from being leaked to normal world as seen here https://git.trustedfirmware.org/TF-A/tf-a-tests.git/tree/tftf/tests/misc_tests/test_pmu_leakage.c (Lines 29-35)\n\nMDCR_EL3.SPME \u003d\u003d 0 \u0026\u0026 PMCR_EL0.DP \u003d\u003d 1\n\nI believe TF-A BL31 already does this as part of both cold boot and warm boot before the execution is passed to non-secure world. As seen in the el3_arch_init_common macro, MDCR_EL3 and PMCR_EL0 is appropriately configured (Lines 118 -160).  \nhttps://git.trustedfirmware.org/TF-A/trusted-firmware-a.git/tree/include/arch/aarch64/el3_common_macros.S\n\nPlease let me know your thoughts.",
      "parentUuid": "b940ccf8_c3973df4",
      "revId": "0c392673dd786222ddd853e6b7c581744589617f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "480e4518_8d4ffb46",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-06-01T17:14:55Z",
      "side": 1,
      "message": "Sure. I am not debating the validity of the sequence. I just want to  enable protections very early. On entering the secure world, the Demver CPUs run the workaround for cache speculation vulnerabilities which can take a lot of CPU cycles. In my testing the PMU counters increment by 3500 on average before we get to the common code in el3_common_macros.S.\n\nThis change enables the protections very early and avoid this PMU counter leakage.",
      "parentUuid": "aea00315_ce455151",
      "revId": "0c392673dd786222ddd853e6b7c581744589617f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "524f75d1_97cab50b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1000098
      },
      "writtenOn": "2020-06-01T17:29:04Z",
      "side": 1,
      "message": "Okay, I understood the motivation behind this patch. I dont intend to block your patch. I am just thinking out loud.\n\nWhether you disable the counters very early or late in the boot sequence, the value that a non-secure world(potential threat ) sees is not very helpful for the attacker to \"TIME\" any particular action , with the intent of estimating the value in a cached location of a protected memory region. The next time when attacker executes a privileged call (such as SMC) , he will see a fairly constant counter value irrespective of the execution path taken by the cpu in privileged mode.",
      "parentUuid": "480e4518_8d4ffb46",
      "revId": "0c392673dd786222ddd853e6b7c581744589617f",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    }
  ]
}