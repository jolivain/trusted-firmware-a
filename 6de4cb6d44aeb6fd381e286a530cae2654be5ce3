{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "beccdb0d_7c03ab7f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000289
      },
      "writtenOn": "2021-06-25T19:48:55Z",
      "side": 1,
      "message": "Hi Sayanta,\n\nApologies for not looking at this patchset sooner. There is this other patchset to add an EL3 platform service using FF-A [1]. Both really require an SPMC at EL3. So I am looking at creating the right abstractions so that this configuration does not preclude deployment of S-EL1 SPs or other S-EL0 SPs. I have a few comments on the entire patchset with this in mind.\n\nFirstly, we need an abstraction to deploy logical SPs within EL3. These could be used to deploy a platform specific service or the one to set and get memory attributes for StMM SPs. I would expect EL3 SPs to be have fairly constrained properties i.e. no manifest, no entry point for init, no memory regions or device to be assigned, just a UUID, statically allocated partition ID and callback function to handle direct request and return a direct response. Other SPs would be able to use FFA_PARTITION_INFO_GET to discover the presence of a logical SP. The partition information descriptor would return the following information for all such logical SPs.\n\n1. Partition ID \u003d Statically allocated partition ID\n2. Execution context count \u003d Number of CPUs in the system\n3. Partition properties \u003d b\u00270001\n\nThis would enable the direct_req_secure_smc_handler() to be abstracted away from the generic SPMC code in spmc_main.c. A platform specific logical SP would be deployed in the same manner.\n\nSecondly, I had expected that the StMM SP will be initialised like a S-EL0 SP as per the FF-A guidance. This would require changes to the StMM SP as well in EDK2. It seems that we still using the legacy initialisation mechanism. In this case, could this be abstracted in a way that highlights: \"This partition is special and requires non FF-A initialisation\". The hardcoding in the current patchset that an EL3 SPMC will only initialise an StMM SP in a legacy way is neither spec compliant nor scalable for other use cases.\n\nIdeally, the SPMC should only have to consume the SP manifest (lets assume a single S-EL0 or S-EL1 SP). It would use the runtime EL field to determine the type of SP. In your case, it would go about performing the setup for a S-EL0 SP. This will leave the door open for initialising a S-EL1 SP in future. We should be able to borrow from S-EL0 SP support in OP-TEE and Hafnium.\n\nThirdly, I had expected the SPMC to forward direct requests to the StMM SP without bothering to peek into the message contents. This is what keeps the SPMC generic. In direct_req_non_secure_smc_handler() this property of the SPMC gets violated. I can understand the need to encapsulate the old MM_COMMUNICATE message in a DIRECT_REQ. It is not clear why the SPMC is assuming that the request can only be an MM request and then validating the parameters in spmc_mm_interface_handler(). It would help if you could clarify.\n\nIn the direct response path, it seems that we are simply jumping back to the Normal world. This kinda what I was expecting in the direct request case as well.\n\nI guess the bottom-line is that that I was not expecting support for the EL3 SPMC to be entirely tied to a single StMM SP. Please let me know what you think. It might be that I have misunderstood the scope of this patchset and there is more to come.\n\nCheers,\nAchin\n\n[1] https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/10315",
      "revId": "6de4cb6d44aeb6fd381e286a530cae2654be5ce3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9e5bad46_5f8b24a0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000228
      },
      "writtenOn": "2021-06-28T10:01:41Z",
      "side": 1,
      "message": "\u003e Patch Set 2: Validation-Bot-Review-1\n\u003e \n\u003e Build finished: 767 (https://qa-reports.linaro.org/tf/tf-gerrit-tforg-l1/build/767/)\n\u003e Some tests failed (1)\n\n\nCan you check the two platform build failures with fvp-spm-mm and synquacer? Thanks.",
      "revId": "6de4cb6d44aeb6fd381e286a530cae2654be5ce3",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}