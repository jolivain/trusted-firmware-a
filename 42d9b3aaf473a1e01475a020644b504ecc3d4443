{
  "comments": [
    {
      "key": {
        "uuid": "b38e1ab4_cf41a57e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1000162
      },
      "writtenOn": "2020-05-30T23:24:50Z",
      "side": 1,
      "message": "I dont think this is a bug in the firmware. The standard implementation should just return error to indicate unimplemented handler. If the standard handler asserts or panics, then the NS world might treat it as a genuine SYSTEM_OFF call.\n\nI agree with your decision for the platform though. Since the platform does not support SYSTEM_OFF, you just loop, which is acceptable IMO.\n\nI think the commit message should be updated to remove this statement. Thoughts?",
      "range": {
        "startLine": 9,
        "startChar": 46,
        "endLine": 12,
        "endChar": 12
      },
      "revId": "42d9b3aaf473a1e01475a020644b504ecc3d4443",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f2f0352_2bda1116",
        "filename": "plat/ti/k3/common/k3_psci.c",
        "patchSetId": 2
      },
      "lineNbr": 209,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-05-27T09:07:35Z",
      "side": 1,
      "message": "I am not sure, but Compiler might optimize this. Would be better to use a volatile variable.",
      "range": {
        "startLine": 209,
        "startChar": 8,
        "endLine": 209,
        "endChar": 12
      },
      "revId": "42d9b3aaf473a1e01475a020644b504ecc3d4443",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f73960fc_935c5317",
        "filename": "plat/ti/k3/common/k3_psci.c",
        "patchSetId": 2
      },
      "lineNbr": 209,
      "author": {
        "id": 1000306
      },
      "writtenOn": "2020-05-27T09:24:15Z",
      "side": 1,
      "message": "This is a common pattern across the codebase. I see no reason yet why the compiler should swallow this loop. And then it would have to be addressed by changing the wfi definition, not this loop.",
      "parentUuid": "3f2f0352_2bda1116",
      "range": {
        "startLine": 209,
        "startChar": 8,
        "endLine": 209,
        "endChar": 12
      },
      "revId": "42d9b3aaf473a1e01475a020644b504ecc3d4443",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29f769c9_07a4fd3a",
        "filename": "plat/ti/k3/common/k3_psci.c",
        "patchSetId": 2
      },
      "lineNbr": 209,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-05-27T12:46:02Z",
      "side": 1,
      "message": "Ah, yes you are right, ignore that comment. I was thinking this about empty infinite while loop with the compiler can optimize out.",
      "parentUuid": "f73960fc_935c5317",
      "range": {
        "startLine": 209,
        "startChar": 8,
        "endLine": 209,
        "endChar": 12
      },
      "revId": "42d9b3aaf473a1e01475a020644b504ecc3d4443",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    }
  ]
}