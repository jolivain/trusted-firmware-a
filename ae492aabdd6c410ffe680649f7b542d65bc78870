{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "fe36fe6d_b0c2a0b7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-01-10T10:24:19Z",
      "side": 1,
      "message": "What is the use case for inserting RSS images into a FIP?\n\nMy understanding was that there was:\n- the RSS flash image, embedding all of RSS firmware images, as well as SCP_BL1 and AP_BL1.\n- the FIP image, with the same images as usual, no RSS images in that.\n\nAre you planning to use the FIP format on RSS side? Otherwise I don\u0027t see why AP should have knowledge of RSS images, it should be transparent from its point of view...",
      "range": {
        "startLine": 9,
        "startChar": 51,
        "endLine": 10,
        "endChar": 38
      },
      "revId": "ae492aabdd6c410ffe680649f7b542d65bc78870",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea22b2e8_c6bfdce8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1000283
      },
      "writtenOn": "2023-01-10T10:49:41Z",
      "side": 1,
      "message": "We\u0027ve updated the RSS a bit. Previously we were just using some flash emulated in the RSS SRAMs, but now it loads images from the host flash. To avoid having to have a fixed area of the host flash designated for RSS use, I\u0027ve added code to load the RSS images from the FIP (with and without GPT support) so now we can just package all the firmware images together.\n\nThe only thing we need this for is so we have a version of `fiptool` that has the UUIDs we use, to allow us to do the packaging.",
      "parentUuid": "fe36fe6d_b0c2a0b7",
      "range": {
        "startLine": 9,
        "startChar": 51,
        "endLine": 10,
        "endChar": 38
      },
      "revId": "ae492aabdd6c410ffe680649f7b542d65bc78870",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ae46946_46960321",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1000283
      },
      "writtenOn": "2023-01-10T10:50:28Z",
      "side": 1,
      "message": "RSS patches at https://review.trustedfirmware.org/c/TF-M/trusted-firmware-m/+/18455/13, there are some WIP TC buildsystem patches somewhere as well to do the packaging.",
      "parentUuid": "ea22b2e8_c6bfdce8",
      "range": {
        "startLine": 9,
        "startChar": 51,
        "endLine": 10,
        "endChar": 38
      },
      "revId": "ae492aabdd6c410ffe680649f7b542d65bc78870",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6ddcce38_55be2f54",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-01-10T15:07:21Z",
      "side": 1,
      "message": "Thanks Raef.\n\nI suppose we\u0027ll need changes in TF-A OpenCI scripts to accomodate with these boot flow changes, as today we load a separate RSS flash image into RSS memory on TC2 FVP. We use a prebuilt RSS flash image for that [1], in which we inject AP_BL1 image. Once the changes you describe become effective, I suppose we\u0027ll still need a prebuilt image but this will rather be a FIP, and the process to inject/replace AP_BL1 inside it will become more standard from a TF-A perspective (standard \u0027fiptool update\u0027 command, as opposed to a custom \u0027dd\u0027 command today).\n\nAnyway, that\u0027s something for the future. This patch per se only adds capability into fiptool so nothing will break in TF-A OpenCI, until these RSS patches are merged *and* we upgrade our prebuilt RSS images in the CI.\n\n[1] Hosted here: https://downloads.trustedfirmware.org/tf-a/total_compute/tc2/",
      "parentUuid": "5ae46946_46960321",
      "range": {
        "startLine": 9,
        "startChar": 51,
        "endLine": 10,
        "endChar": 38
      },
      "revId": "ae492aabdd6c410ffe680649f7b542d65bc78870",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f5f79a11_c29c5fd7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-01-10T15:35:27Z",
      "side": 1,
      "message": "The other thing the CI flagged is, we need to add plat/arm/board/tc/plat_def_uuid_config.c file to\nhttps://git.trustedfirmware.org/ci/tf-a-ci-scripts.git/tree/script/tf-coverity/coverity_tf_conf.py#n109 . That will tell the CI scripts that it\u0027s expected for this file not to be scanned through Coverity (since it\u0027s tools code, not firmware code).",
      "revId": "ae492aabdd6c410ffe680649f7b542d65bc78870",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0c89bc7_02acfe6c",
        "filename": "plat/arm/board/tc/plat_def_fip_uuid.h",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-01-10T10:24:19Z",
      "side": 1,
      "message": "Just out of curiosity, what are \"SIC tables\"?",
      "range": {
        "startLine": 31,
        "startChar": 8,
        "endLine": 31,
        "endChar": 30
      },
      "revId": "ae492aabdd6c410ffe680649f7b542d65bc78870",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08232fd5_c36457b8",
        "filename": "plat/arm/board/tc/plat_def_fip_uuid.h",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1000283
      },
      "writtenOn": "2023-01-10T10:49:41Z",
      "side": 1,
      "message": "They\u0027re a set of hash-tables used by the Secure I-Cache to execute images from host flash while transparently decrypting and authenticating them. Pretty neat bit of hardware :) We need to authenticate the tables themselves though, so they\u0027re loaded as an image in the bootloader separately with their own signature etc.",
      "parentUuid": "d0c89bc7_02acfe6c",
      "range": {
        "startLine": 31,
        "startChar": 8,
        "endLine": 31,
        "endChar": 30
      },
      "revId": "ae492aabdd6c410ffe680649f7b542d65bc78870",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c3ecfc3_02b060e9",
        "filename": "plat/arm/board/tc/plat_def_fip_uuid.h",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-01-10T15:07:21Z",
      "side": 1,
      "message": "I see, thanks!",
      "parentUuid": "08232fd5_c36457b8",
      "range": {
        "startLine": 31,
        "startChar": 8,
        "endLine": 31,
        "endChar": 30
      },
      "revId": "ae492aabdd6c410ffe680649f7b542d65bc78870",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d526b4d_2d00df29",
        "filename": "plat/arm/board/tc/plat_def_uuid_config.c",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2023-01-10T15:35:27Z",
      "side": 1,
      "message": "The CI flagged some coding-style issues with the order of inclusion here [1]. I also think stddef.h should be a system header file (included between \u003c\u003e). \n\nAccording to TF-A guidelines [2], I think this ought to be:\n\n #include \u003cstddef.h\u003e\n\n #include \u003cfirmware_image_package.h\u003e\n\n #include \"tbbr_config.h\"\n\nI\u0027ve not checked whether this sequence will make the CI checks happy, though.\n\n[1] https://ci.trustedfirmware.org/job/tf-a-static-checks/3225/\n[2] https://trustedfirmware-a.readthedocs.io/en/latest/process/coding-style.html#headers-and-inclusion",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 12,
        "endChar": 0
      },
      "revId": "ae492aabdd6c410ffe680649f7b542d65bc78870",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}