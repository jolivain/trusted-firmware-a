{
  "comments": [
    {
      "key": {
        "uuid": "509a85b6_2e2fd258",
        "filename": "lib/fconf/fconf_dyn_cfg_getter.c",
        "patchSetId": 13
      },
      "lineNbr": 33,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2020-06-23T12:33:05Z",
      "side": 1,
      "message": "Would it not be better to take the config id as an extra argument? This would make this function a generic dyn_cfg_dtb_info_t constructor, which seems better from a software design perspective to me, even though this is only used by BL1 to construct the fw config descriptor right now.",
      "range": {
        "startLine": 33,
        "startChar": 7,
        "endLine": 33,
        "endChar": 42
      },
      "revId": "37691ffc70979e29f3f550ae7d9404e206627f01",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82fc14c7_e785c786",
        "filename": "lib/fconf/fconf_dyn_cfg_getter.c",
        "patchSetId": 13
      },
      "lineNbr": 75,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2020-06-23T12:33:05Z",
      "side": 1,
      "message": "AFAIU, this relies on the assumptions that dtb_infos[] is in the BSS section (thus getting initialized to 0) and FW_CONFIG_ID !\u003d 0. Perhaps this is a bit over the top but should we add a compile time assertion here? As in:\n\n CASSERT(FW_CONFIG_ID !\u003d 0, assert_invalid_fw_config_id);\n\n0 is a valid image id (it\u0027s for a FIP image). My motivations are to avoid any breakages in the unlikely event where we would change the image ids but also to self-document the code\u0027s assumptions.",
      "range": {
        "startLine": 75,
        "startChar": 1,
        "endLine": 75,
        "endChar": 46
      },
      "revId": "37691ffc70979e29f3f550ae7d9404e206627f01",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62341cb3_844973e6",
        "filename": "plat/arm/common/arm_bl1_setup.c",
        "patchSetId": 13
      },
      "lineNbr": 159,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2020-06-23T12:33:05Z",
      "side": 1,
      "message": "I don\u0027t fully understand this change. Why do we need to check whether we\u0027re entering FWU mode that soon now? This would be done a bit later when we\u0027re back in bl1_main() anyway. Any reason why it is required to skip the rest of the platform initialization if we detect that we should take the FWU path? Before this patch, we would go ahead and load the firmware configuration file anyway.",
      "range": {
        "startLine": 154,
        "startChar": 0,
        "endLine": 159,
        "endChar": 2
      },
      "revId": "37691ffc70979e29f3f550ae7d9404e206627f01",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d627aec0_46c9d2d1",
        "filename": "plat/arm/common/arm_bl2_setup.c",
        "patchSetId": 13
      },
      "lineNbr": 75,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2020-06-23T12:33:05Z",
      "side": 1,
      "message": "(minor) Remove extra empty line.",
      "revId": "37691ffc70979e29f3f550ae7d9404e206627f01",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    }
  ]
}