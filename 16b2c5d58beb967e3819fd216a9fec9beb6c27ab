{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1f87f534_6272a4fd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1001070
      },
      "writtenOn": "2023-10-10T18:33:50Z",
      "side": 1,
      "message": "Update the TE definitions to reflect the latest agreement on the spec changes.",
      "revId": "16b2c5d58beb967e3819fd216a9fec9beb6c27ab",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "67bd9488_5dfabf44",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000120
      },
      "writtenOn": "2023-10-12T15:10:43Z",
      "side": 1,
      "message": "Manish, Harrison, would it be possible to give Raymond permissions to set Allow-CI?",
      "revId": "16b2c5d58beb967e3819fd216a9fec9beb6c27ab",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1411506_1478998c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000744
      },
      "writtenOn": "2023-10-16T13:57:13Z",
      "side": 1,
      "message": "Hello Jens, yes it should, I\u0027ve asked for Raymond to be added to the trusted-firmware-ci org, which should grant all necessary rights.",
      "parentUuid": "67bd9488_5dfabf44",
      "revId": "16b2c5d58beb967e3819fd216a9fec9beb6c27ab",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "956fce49_12dfd413",
        "filename": "lib/transfer_list/transfer_list.c",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 1000744
      },
      "writtenOn": "2023-10-12T13:44:03Z",
      "side": 1,
      "message": "Is it reasonable to assume here that the consumer of this procedure should always provide a non-empty entry point structure and transfer list, and that if it doesn\u0027t, something has gone really wrong and the program is no longer viable?",
      "range": {
        "startLine": 52,
        "startChar": 1,
        "endLine": 58,
        "endChar": 2
      },
      "revId": "16b2c5d58beb967e3819fd216a9fec9beb6c27ab",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36857271_81d4d84c",
        "filename": "lib/transfer_list/transfer_list.c",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 1001070
      },
      "writtenOn": "2023-10-12T14:02:57Z",
      "side": 1,
      "message": "I think its caller should ensure passing a correct pointer here. But as a public API, it needs to check it again inside the function to avoid protential mis-use by the caller.\nCurrently in my qemu patch (https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/23778), the caller falls back to \"legacy\" handoff arguments when this API returns false.",
      "parentUuid": "956fce49_12dfd413",
      "range": {
        "startLine": 52,
        "startChar": 1,
        "endLine": 58,
        "endChar": 2
      },
      "revId": "16b2c5d58beb967e3819fd216a9fec9beb6c27ab",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fea30302_14aba0df",
        "filename": "lib/transfer_list/transfer_list.c",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 1000744
      },
      "writtenOn": "2023-10-16T13:57:13Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "36857271_81d4d84c",
      "range": {
        "startLine": 52,
        "startChar": 1,
        "endLine": 58,
        "endChar": 2
      },
      "revId": "16b2c5d58beb967e3819fd216a9fec9beb6c27ab",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}