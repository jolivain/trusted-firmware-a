{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8bbcfb37_332f5246",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000923
      },
      "writtenOn": "2024-03-20T23:18:30Z",
      "side": 1,
      "message": "LGTM",
      "revId": "e851049496dfc4e44f3b568aefde7e50b55831ab",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2654a171_0aa783c5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000099
      },
      "writtenOn": "2024-03-21T23:24:44Z",
      "side": 1,
      "message": "Confirm the failures and do a manual V+1 if those are false fails. Most a Juno fails and unrelated. Will merge if confirmed.",
      "revId": "e851049496dfc4e44f3b568aefde7e50b55831ab",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "900f6c6e_34993061",
        "filename": "lib/cpus/aarch64/cortex_a715.S",
        "patchSetId": 3
      },
      "lineNbr": 65,
      "author": {
        "id": 1000102
      },
      "writtenOn": "2024-03-21T10:09:21Z",
      "side": 1,
      "message": "This will be true for ENABLE_SPE_FOR_NS \u003d 2, in that case even if SPE is not present this errata will be applied",
      "revId": "e851049496dfc4e44f3b568aefde7e50b55831ab",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "365b6046_f9a41f57",
        "filename": "lib/cpus/aarch64/cortex_a715.S",
        "patchSetId": 3
      },
      "lineNbr": 65,
      "author": {
        "id": 1000923
      },
      "writtenOn": "2024-03-21T11:50:19Z",
      "side": 1,
      "message": "Not really the macro adds a extra layer of optimization, below line 67-68 we are checking the id register, eventually so value of \u00272\u0027 with feat not available usecase the errata will not apply.",
      "parentUuid": "900f6c6e_34993061",
      "revId": "e851049496dfc4e44f3b568aefde7e50b55831ab",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f9eab988_733f4664",
        "filename": "lib/cpus/aarch64/cortex_a715.S",
        "patchSetId": 3
      },
      "lineNbr": 65,
      "author": {
        "id": 1000910
      },
      "writtenOn": "2024-03-21T16:20:07Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "365b6046_f9a41f57",
      "revId": "e851049496dfc4e44f3b568aefde7e50b55831ab",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "09a65b03_e97d0c08",
        "filename": "lib/cpus/aarch64/cortex_a715.S",
        "patchSetId": 3
      },
      "lineNbr": 65,
      "author": {
        "id": 1000099
      },
      "writtenOn": "2024-03-21T23:11:03Z",
      "side": 1,
      "message": "Errata applies only when SPE is enabled.\n\nThe enabled part is covered by ENABLE_SPE_FOR_NS. ENABLE_SPE_FOR_NS has legal values of 0,1,2.\n\n0 SPE Disabled. We don\u0027t know it is present (implemented in hardware) or not. \n1 SPE enabled. We don\u0027t know it is present or not. So, need the below check to make sure hardware implements it before applying the erratum workaround. \n2 enable if present. Both enabled and implemented/present. \n\nTo factor ENABLE_SPE_FOR_NS \u003d\u003d 1, we need the check in assembly to make sure the feature is supported in hardware. \n\nRight now, we don\u0027t have a SPE DISABLED and NOT present (Assume a theoretical value 3). If we introduce a 4th value in future which is logical but may not be practical, this erratum will still be applied based on the positive value. \n\nHence, I prefer ENABLE_SPE_FOR_NS !\u003d0(as we don\u0027t have a legal negative value for this define) than checking for a positive value for ENABLE_SPE_FOR_NS\nusing \"#if ENABLE_SPE_FOR_NS\".",
      "parentUuid": "f9eab988_733f4664",
      "revId": "e851049496dfc4e44f3b568aefde7e50b55831ab",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}