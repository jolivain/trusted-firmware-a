{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d54fb468_7d8dbc80",
        "filename": "services/std_svc/errata_abi/errata_abi_main.c",
        "patchSetId": 17
      },
      "lineNbr": 285,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-04-13T09:55:06Z",
      "side": 1,
      "message": "since this erratum (and all the others like it) is clearly known and the list carries all necessary information to decide whether it applies based on the platform\u0027s configuration, the preprocessor conditional can be completely removed. I would even argue, having it there is now wrong, since this known erratum that doesn\u0027t apply will be reported as unknown which is not true.\n\nFurther, you can drop the non_arm_interconnect field and store it with the errata_enabled field. You can do `errata_enabled \u003d ERRATA_A78_AE_2712574 \u0026 ERRATA_NON_ARM_INTERCONNECT` since both values carry the same semantic and only when both are set does this erratum apply. If either isn\u0027t set, then it won\u0027t apply. So the final decision in the generic code can be simpler",
      "range": {
        "startLine": 285,
        "startChar": 3,
        "endLine": 285,
        "endChar": 10
      },
      "revId": "636cb9c0d05945dafe853049695dea707d0501c8",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5780faad_9db47d07",
        "filename": "services/std_svc/errata_abi/errata_abi_main.c",
        "patchSetId": 17
      },
      "lineNbr": 285,
      "author": {
        "id": 1000099
      },
      "writtenOn": "2023-04-13T20:46:30Z",
      "side": 1,
      "message": "I would agree on the first one. With the latest change which brings in all build flags part of the structure and a check based on it later in the code, the conditional could be removed.\n\nBut I would keep the platform specific flag and the CPU erratum flag separate, there is slightly different meaning for each. One indicating platform specific interconnect and other indicating a CPU errata. Only that there is a dependency.",
      "parentUuid": "d54fb468_7d8dbc80",
      "range": {
        "startLine": 285,
        "startChar": 3,
        "endLine": 285,
        "endChar": 10
      },
      "revId": "636cb9c0d05945dafe853049695dea707d0501c8",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7c71704c_96480e38",
        "filename": "services/std_svc/errata_abi/errata_abi_main.c",
        "patchSetId": 17
      },
      "lineNbr": 285,
      "author": {
        "id": 1000910
      },
      "writtenOn": "2023-04-13T22:25:50Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "5780faad_9db47d07",
      "range": {
        "startLine": 285,
        "startChar": 3,
        "endLine": 285,
        "endChar": 10
      },
      "revId": "636cb9c0d05945dafe853049695dea707d0501c8",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5846fa71_27dc3759",
        "filename": "services/std_svc/errata_abi/errata_abi_main.c",
        "patchSetId": 17
      },
      "lineNbr": 285,
      "author": {
        "id": 1000883
      },
      "writtenOn": "2023-04-14T09:57:00Z",
      "side": 1,
      "message": "\u003e there is slightly different meaning for each. One indicating platform specific interconnect and other indicating a CPU errata. Only that there is a dependency.\n\nYes, that is true, and I\u0027m not saying drop it entirely. It should still be kept for calculating the flag. However, as there is no other use for this information at the moment, it doesn\u0027t need to be stored in memory at runtime (which we are scarce of at the moment!). If one would arise, it is easy enough to refactor. Besides, it would be more work to then stuff it into the errata framework.",
      "parentUuid": "7c71704c_96480e38",
      "range": {
        "startLine": 285,
        "startChar": 3,
        "endLine": 285,
        "endChar": 10
      },
      "revId": "636cb9c0d05945dafe853049695dea707d0501c8",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}