{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "10597719_4b96f8f2",
        "filename": "plat/common/aarch64/plat_common.c",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2021-06-28T15:13:23Z",
      "side": 1,
      "message": "This patch is assuming that the kernel and the error handler share the console. Is this really required? Why not just add it to to the ERROR statement below? I realize we may lose the string \"ERROR\".\nMoreover, if the kernel and EL3 share the same console, adding a new line may not help at all. On a multi core system, the kernel could still be printing on another core while this code executes on another core and you would still end up with garbled information.",
      "revId": "6a8cae9a633dd51fbec976f0d30fd628bd906188",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3efedd1_3affd2f0",
        "filename": "plat/common/aarch64/plat_common.c",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 1000451
      },
      "writtenOn": "2021-06-28T15:20:16Z",
      "side": 1,
      "message": "\u003e Why not just add it to to the ERROR statement below?\n\nBecause string supplied in ERROR() macro is always prefixed by custom prefix. So ERROR(\"\\nmessage\") expands to printf(\"prefix\\nmessage\") -- which is not expected and does not help.\n\n\u003e Moreover, if the kernel and EL3 share the same console, adding a new line may not help at all.\n\nI agree. But it may help at least in some situation. And does not harm.\n\nIn other case when EL3 uses separate console, it at least visually split current info about External Abort from other (previous) messages.",
      "parentUuid": "10597719_4b96f8f2",
      "revId": "6a8cae9a633dd51fbec976f0d30fd628bd906188",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c574baf8_1dcb70f6",
        "filename": "plat/common/aarch64/plat_common.c",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 1000114
      },
      "writtenOn": "2021-06-28T15:54:54Z",
      "side": 1,
      "message": "understood. No harm is done. Note that the \\n can never be compiled out like the ERROR macro can be compiled out, which is why i was suggesting we put the \\n in the ERROR macro itself.\nSure we will lose the prefix in the previous line(as i stated in my original response) but the main information should still be available, assuming it is not garbled by other cores.\nAnyway, i just want to note that \\n is not really going to help but i agree it does no harm other than the \\n not being compiled out(which may or may not be an issue depending on the platform).",
      "parentUuid": "f3efedd1_3affd2f0",
      "revId": "6a8cae9a633dd51fbec976f0d30fd628bd906188",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}