{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0a28627b_17e3011a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000935
      },
      "writtenOn": "2023-01-25T19:36:39Z",
      "side": 1,
      "message": "Several critical checks have not been implemented yet.  Also, I believe the current implementation uses algorithms that are O(n^2) or worse, allowing CPU consumption-based DoS of the secure world.",
      "revId": "9dab96dc8a6911342ceb44213c2b66ffa2aeb1f6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ddc18ee9_ba6a22c7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000341
      },
      "writtenOn": "2023-02-01T12:03:18Z",
      "side": 1,
      "message": "Thanks a lot for your reviews, and valuable feedback!\n\nWould you be able to point us to the exact location of where you detected such cases?\nSome memory sharing related patches are on review here:\nhttps://review.trustedfirmware.org/q/topic:%22ja%252Fffa_mem_share_v1_1%22+(status:open%20OR%20status:merged)\n\nAlternatively, you can provide links to the hafnium tree to the areas that raise any concerns:\nhttps://git.trustedfirmware.org/hafnium/hafnium.git/tree\n\nI will proceed to have a look for the opportunities of improvement.",
      "parentUuid": "0a28627b_17e3011a",
      "revId": "9dab96dc8a6911342ceb44213c2b66ffa2aeb1f6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd967982_635950f5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000935
      },
      "writtenOn": "2023-02-01T19:12:37Z",
      "side": 1,
      "message": "EL3 firmware currently uses an O(n²) loop to check for duplicate partition IDs, and a loop that is at least O(number of regions being shared * number of regions already shared) to check for sharing a memory region that is currently in the middle of a transaction.  Also, freeing an object is O(size of reserved memory), and there is no check that e.g. memory being shared with Secure world is page-aligned and has not been already given to Realm or Root worlds.  There is no check I can see that address ranges within a transaction do not overlap.\n\nMaking individual transactions easier to validate is easy: just require address ranges and partition IDs to be sorted, and drop support for v1.0 transactions outright.  Fixing the remaining problems would require substantially more complex data structures in EL3, which means significantly increased attack surface.  Furthermore, unless the RMMD is aware of memory sharing, there will be unavoidable TOCTOU races.  Instead, I recommend piggybacking on the existing GPT code: if a piece of memory is not in Normal state, trying to change it to Secure or Realm state will fail.  This may require using bits in the GPT that are reserved for firmware use (assuming such bits exist) to indicate states like “this page is reserved by Secure world, do not transition it to Realm or Root world”.  Memory sharing messages could then be entirely opaque to Root world, minimizing its attack surface.  Secure world would be responsible for gracefully handling mapping errors.",
      "parentUuid": "ddc18ee9_ba6a22c7",
      "revId": "9dab96dc8a6911342ceb44213c2b66ffa2aeb1f6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66626393_b7e67e90",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000290
      },
      "writtenOn": "2023-02-02T10:41:45Z",
      "side": 1,
      "message": "Hi, thanks for the feedback, I don\u0027t want to hijack the review on this patch but just to address some of your comments with regards to the EL3 SPMC.\n\nYou make a fair point about the current efficiency of some of the operations performed, however as you say, the trade off for fixing some of these would increase the complexity of the code which would also be undesirable.\n\n\u003e Making individual transactions easier to validate is easy: just require address ranges and partition IDs to be sorted, and drop support for v1.0 transactions outright. \n\nUnfortunately we cannot make these assumptions as these conditions are not mandated by the v1.1 FF-A spec, therefore the SPMC implementation must support address ranges and partition IDs in any order. Additionally one of the initial use cases of the EL3 SPMC was to be able to support v1.0 client so dropping support would also not be an option at the moment.\n\n\u003e there is no check that e.g. memory being shared with Secure world is page-aligned \n\u003e There is no check I can see that address ranges within a transaction do not overlap.\n\nThanks for pointing these out, I will need to double check the code and look into adding the appropriate checks.\n\n\u003e unless the RMMD is aware of memory sharing, there will be unavoidable TOCTOU races\n\nThe EL3 SPMC is not designed to run with the RME enabled and this is prevented at build time [1] to avoid the issues you have highlighted.\n\nPlease let me know if you spot anything else or if you have any other comments.\n\n[1] https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/13245/11/Makefile#b579",
      "parentUuid": "dd967982_635950f5",
      "revId": "9dab96dc8a6911342ceb44213c2b66ffa2aeb1f6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c620623_1895961b",
        "filename": "docs/threat_model/threat_model_spm.rst",
        "patchSetId": 2
      },
      "lineNbr": 1169,
      "author": {
        "id": 1000935
      },
      "writtenOn": "2023-01-25T19:36:39Z",
      "side": 1,
      "message": "What about causing the SPMC code to consume excessive CPU, denying service to the secure world?",
      "revId": "9dab96dc8a6911342ceb44213c2b66ffa2aeb1f6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "12d5766b_c2110661",
        "filename": "docs/threat_model/threat_model_spm.rst",
        "patchSetId": 2
      },
      "lineNbr": 1169,
      "author": {
        "id": 1000341
      },
      "writtenOn": "2023-02-01T12:03:18Z",
      "side": 1,
      "message": "Rewrote.\nLet me know if it is not clear.\nThanks!",
      "parentUuid": "8c620623_1895961b",
      "revId": "9dab96dc8a6911342ceb44213c2b66ffa2aeb1f6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13813c77_3ea38a5c",
        "filename": "docs/threat_model/threat_model_spm.rst",
        "patchSetId": 2
      },
      "lineNbr": 1323,
      "author": {
        "id": 1000935
      },
      "writtenOn": "2023-01-25T19:36:39Z",
      "side": 1,
      "message": "These mitigations have not been implemented.",
      "revId": "9dab96dc8a6911342ceb44213c2b66ffa2aeb1f6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "07edf11d_c04c1ae2",
        "filename": "docs/threat_model/threat_model_spm.rst",
        "patchSetId": 2
      },
      "lineNbr": 1323,
      "author": {
        "id": 1000341
      },
      "writtenOn": "2023-02-01T12:03:18Z",
      "side": 1,
      "message": "Hafnium validates sender permission over the memory region function below:\nhttps://git.trustedfirmware.org/hafnium/hafnium.git/tree/src/ffa_memory.c#n429\nThis applies for the secure partitions.\nFor endpoints in the NWd, sharing memory with SPs from the sender\u0027s perspective this can\u0027t really be enforced by the SPMC. Should effectively validated by the Hypervisor.\nThat said, memory sharing between NWd and SPs is being subjected to some harnessing, for which I should provide patches anytime soon.\n\nAt the time of retrieval of the memory region the, check function below:\nhttps://git.trustedfirmware.org/hafnium/hafnium.git/tree/src/ffa_memory.c#n1765\nIt checks permissions requested by the borrower are within those provided by the sender.\n\nLet me know if you find there is anything missing.\nCheers.",
      "parentUuid": "13813c77_3ea38a5c",
      "revId": "9dab96dc8a6911342ceb44213c2b66ffa2aeb1f6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed55e7d8_da14864d",
        "filename": "docs/threat_model/threat_model_spm.rst",
        "patchSetId": 2
      },
      "lineNbr": 1323,
      "author": {
        "id": 1000935
      },
      "writtenOn": "2023-02-01T19:12:37Z",
      "side": 1,
      "message": "I am referring to the EL3 checks that prevent memory being shared that currently belongs to Realm or Root worlds.",
      "parentUuid": "07edf11d_c04c1ae2",
      "revId": "9dab96dc8a6911342ceb44213c2b66ffa2aeb1f6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba2960e7_e4a69067",
        "filename": "docs/threat_model/threat_model_spm.rst",
        "patchSetId": 2
      },
      "lineNbr": 1323,
      "author": {
        "id": 1000341
      },
      "writtenOn": "2023-02-01T19:28:12Z",
      "side": 1,
      "message": "Demi, I am sorry for the confusion.\nThis threat model refers to hafnium as the S-EL2 SPMC. This is mentioned in this file\u0027s Introduction section.\nI understand the confusion came (if there was any) as this part of the TF-A repository. The reason is because we are part of the same team, and Hafnium as SPM documentation was originally set in this repo.\nEL3 SPMC (which is the one you seem to be concerned with) has been a more recent addition to the project. The threat model for EL3 SPMC can be found:\nhttps://git.trustedfirmware.org/TF-A/trusted-firmware-a.git/tree/docs/threat_model/threat_model_el3_spm.rst\nNone the less, I will forward your feedback to EL3 SPM maintainers.",
      "parentUuid": "ed55e7d8_da14864d",
      "revId": "9dab96dc8a6911342ceb44213c2b66ffa2aeb1f6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4157585b_90d94e09",
        "filename": "docs/threat_model/threat_model_spm.rst",
        "patchSetId": 2
      },
      "lineNbr": 1323,
      "author": {
        "id": 1000341
      },
      "writtenOn": "2023-02-01T19:30:01Z",
      "side": 1,
      "message": "On my end I will also update the commit of this patch, such that it becomes clear.",
      "parentUuid": "ba2960e7_e4a69067",
      "revId": "9dab96dc8a6911342ceb44213c2b66ffa2aeb1f6",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda"
    }
  ]
}