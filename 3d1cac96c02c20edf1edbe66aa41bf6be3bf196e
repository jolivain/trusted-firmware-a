{
  "comments": [
    {
      "key": {
        "uuid": "9c953b72_3f43e9a3",
        "filename": "plat/nvidia/tegra/soc/t194/drivers/se/se.c",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1000328
      },
      "writtenOn": "2020-03-25T07:43:47Z",
      "side": 1,
      "message": "I saw usage of this define in the code as below:\n\n       /*\n         * Poll the status register to check if the operation\n         * completed.\n         */                                     \n        do {\n                val \u003d tegra_se_read_32(CTX_SAVE_AUTO_STATUS);\n                se_is_busy \u003d ((val \u0026 CTX_SAVE_AUTO_SE_BUSY) !\u003d 0U);\n\n                /* sleep until SE finishes */\n                if (se_is_busy) {\n                        mdelay(1);\n                        timeout++;\n                }\n\n        } while (se_is_busy \u0026\u0026 (timeout \u003c MAX_TIMEOUT_MS)\n\ntimeout++ -\u003e is a normal counter and not get incremented exactly after every 1ms because before mdelay(1) there are some instructions are getting executed that consume some time.\nHence (timeout \u003c MAX_TIMEOUT_MS) may not be the real check.\n\nIMO, Better get base_time_in_ms value before do...while loop and.instead of incrementing timeout value better get time_in_ms at that point. Use ((time_in_ms-base_time_in_ms) \u003c MAX_TIMEOUT_MS) for timeout detection. Let me know your thought about it.",
      "range": {
        "startLine": 28,
        "startChar": 8,
        "endLine": 28,
        "endChar": 22
      },
      "revId": "3d1cac96c02c20edf1edbe66aa41bf6be3bf196e",
      "serverId": "8f6f209b-db1a-4cbf-aa44-c8bc30e9bfda",
      "unresolved": true
    }
  ]
}